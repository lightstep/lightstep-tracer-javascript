{"version":3,"sources":["webpack://lightstep/webpack/universalModuleDefinition","webpack://lightstep/webpack/bootstrap","webpack://lightstep/./node_modules/@protobufjs/aspromise/index.js","webpack://lightstep/./node_modules/@protobufjs/base64/index.js","webpack://lightstep/./node_modules/@protobufjs/codegen/index.js","webpack://lightstep/./node_modules/@protobufjs/eventemitter/index.js","webpack://lightstep/./node_modules/@protobufjs/fetch/index.js","webpack://lightstep/./node_modules/@protobufjs/float/index.js","webpack://lightstep/./node_modules/@protobufjs/inquire/index.js","webpack://lightstep/./node_modules/@protobufjs/path/index.js","webpack://lightstep/./node_modules/@protobufjs/pool/index.js","webpack://lightstep/./node_modules/@protobufjs/utf8/index.js","webpack://lightstep/./node_modules/base64-js/index.js","webpack://lightstep/./node_modules/buffer/index.js","webpack://lightstep/./node_modules/eventemitter3/index.js","webpack://lightstep/./node_modules/google-protobuf/google-protobuf.js","webpack://lightstep/./node_modules/google-protobuf/google/protobuf/descriptor_pb.js","webpack://lightstep/./node_modules/google-protobuf/google/protobuf/timestamp_pb.js","webpack://lightstep/./node_modules/hex2dec/index.js","webpack://lightstep/./node_modules/ieee754/index.js","webpack://lightstep/./node_modules/isarray/index.js","webpack://lightstep/./node_modules/long/src/long.js","webpack://lightstep/./node_modules/opentracing/lib/binary_carrier.js","webpack://lightstep/./node_modules/opentracing/lib/constants.js","webpack://lightstep/./node_modules/opentracing/lib/ext/tags.js","webpack://lightstep/./node_modules/opentracing/lib/functions.js","webpack://lightstep/./node_modules/opentracing/lib/global_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/index.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_context.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_report.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_span.js","webpack://lightstep/./node_modules/opentracing/lib/mock_tracer/mock_tracer.js","webpack://lightstep/./node_modules/opentracing/lib/noop.js","webpack://lightstep/./node_modules/opentracing/lib/reference.js","webpack://lightstep/./node_modules/opentracing/lib/span.js","webpack://lightstep/./node_modules/opentracing/lib/span_context.js","webpack://lightstep/./node_modules/opentracing/lib/tracer.js","webpack://lightstep/./node_modules/protobufjs/index.js","webpack://lightstep/./node_modules/protobufjs/src/common.js","webpack://lightstep/./node_modules/protobufjs/src/converter.js","webpack://lightstep/./node_modules/protobufjs/src/decoder.js","webpack://lightstep/./node_modules/protobufjs/src/encoder.js","webpack://lightstep/./node_modules/protobufjs/src/enum.js","webpack://lightstep/./node_modules/protobufjs/src/field.js","webpack://lightstep/./node_modules/protobufjs/src/index-light.js","webpack://lightstep/./node_modules/protobufjs/src/index-minimal.js","webpack://lightstep/./node_modules/protobufjs/src/index.js","webpack://lightstep/./node_modules/protobufjs/src/mapfield.js","webpack://lightstep/./node_modules/protobufjs/src/message.js","webpack://lightstep/./node_modules/protobufjs/src/method.js","webpack://lightstep/./node_modules/protobufjs/src/namespace.js","webpack://lightstep/./node_modules/protobufjs/src/object.js","webpack://lightstep/./node_modules/protobufjs/src/oneof.js","webpack://lightstep/./node_modules/protobufjs/src/parse.js","webpack://lightstep/./node_modules/protobufjs/src/reader.js","webpack://lightstep/./node_modules/protobufjs/src/reader_buffer.js","webpack://lightstep/./node_modules/protobufjs/src/root.js","webpack://lightstep/./node_modules/protobufjs/src/roots.js","webpack://lightstep/./node_modules/protobufjs/src/rpc.js","webpack://lightstep/./node_modules/protobufjs/src/rpc/service.js","webpack://lightstep/./node_modules/protobufjs/src/service.js","webpack://lightstep/./node_modules/protobufjs/src/tokenize.js","webpack://lightstep/./node_modules/protobufjs/src/type.js","webpack://lightstep/./node_modules/protobufjs/src/types.js","webpack://lightstep/./node_modules/protobufjs/src/util.js","webpack://lightstep/./node_modules/protobufjs/src/util/longbits.js","webpack://lightstep/./node_modules/protobufjs/src/util/minimal.js","webpack://lightstep/./node_modules/protobufjs/src/verifier.js","webpack://lightstep/./node_modules/protobufjs/src/wrappers.js","webpack://lightstep/./node_modules/protobufjs/src/writer.js","webpack://lightstep/./node_modules/protobufjs/src/writer_buffer.js","webpack://lightstep/(webpack)/buildin/global.js","webpack://lightstep/./src/_each.js","webpack://lightstep/./src/_leftpad.js","webpack://lightstep/./src/constants.js","webpack://lightstep/./src/imp/auth_imp.js","webpack://lightstep/./src/imp/coerce.js","webpack://lightstep/./src/imp/generated_proto/collector_pb.js","webpack://lightstep/./src/imp/generated_proto/google/api/annotations_pb.js","webpack://lightstep/./src/imp/generated_proto/google/api/http_pb.js","webpack://lightstep/./src/imp/globals.js","webpack://lightstep/./src/imp/log_builder.js","webpack://lightstep/./src/imp/log_record_imp.js","webpack://lightstep/./src/imp/platform/browser/crouton_thrift.js","webpack://lightstep/./src/imp/platform/browser/generated/thrift_all.js","webpack://lightstep/./src/imp/platform/browser/options_parser.js","webpack://lightstep/./src/imp/platform/browser/platform_browser.js","webpack://lightstep/./src/imp/platform/browser/thrift.js","webpack://lightstep/./src/imp/platform/browser/transport_httpproto.js","webpack://lightstep/./src/imp/platform/browser/transport_httpthrift.js","webpack://lightstep/./src/imp/platform/browser/util.js","webpack://lightstep/./src/imp/propagator_b3.js","webpack://lightstep/./src/imp/propagator_dd.js","webpack://lightstep/./src/imp/propagator_envoy.js","webpack://lightstep/./src/imp/propagator_ls.js","webpack://lightstep/./src/imp/report_imp.js","webpack://lightstep/./src/imp/runtime_imp.js","webpack://lightstep/./src/imp/span_context_imp.js","webpack://lightstep/./src/imp/span_imp.js","webpack://lightstep/./src/imp/tracer_imp.js","webpack://lightstep/./src/imp/util/clock_state.js","webpack://lightstep/./src/imp/util/util.js","webpack://lightstep/./src/lib.js","webpack://lightstep/./src/platform_abstraction_layer.js","webpack://lightstep/./src/plugins/instrument_document_load.js","webpack://lightstep/./src/plugins/instrument_fetch.js","webpack://lightstep/./src/plugins/instrument_xhr.js","webpack://lightstep/./src/plugins/log_to_console.js"],"names":["_each","obj","cb","key","hasOwnProperty","call","_leftpad","str","len","ch","String","i","length","LOG_INFO","LOG_WARN","LOG_ERROR","LOG_FATAL","LOG_LEVEL_TO_STRING","LOG_STRING_TO_LEVEL","I","W","E","F","CLOCK_STATE_REFRESH_INTERVAL_MS","LIGHTSTEP_APP_URL_PREFIX","JOIN_ID_PREFIX","LS_META_EVENT_KEY","LS_META_PROPAGATION_KEY","LS_META_TRACE_KEY","LS_META_SPAN_KEY","LS_META_TRACER_GUID_KEY","LS_META_EXTRACT","LS_META_INJECT","LS_META_SP_START","LS_META_SP_FINISH","LS_META_TRACER_CREATE","FORMAT_B3","proto","require","AuthImp","accessToken","_accessToken","Auth","access_token","authProto","setAccessToken","toString","toNumber","toBoolean","value","Number","jspb","goog","global","Function","google_protobuf_timestamp_pb","google_api_annotations_pb","exportSymbol","lightstep","collector","SpanContext","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","traceId","getFieldWithDefault","spanId","baggageMap","getBaggageMap","undefined","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","readUint64String","setTraceId","setSpanId","readMessage","message","Map","readString","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","getTraceId","parseInt","writeUint64String","getSpanId","getLength","writeString","setProto3StringIntField","opt_noLazyCreate","getMapField","clearBaggageMap","clear","KeyValue","oneofGroups_","ValueCase","VALUE_NOT_SET","STRING_VALUE","INT_VALUE","DOUBLE_VALUE","BOOL_VALUE","JSON_VALUE","getValueCase","computeOneofCase","stringValue","intValue","doubleValue","boolValue","jsonValue","setKey","setStringValue","readInt64String","setIntValue","readDouble","setDoubleValue","readBool","setBoolValue","setJsonValue","getKey","getField","writeInt64String","writeDouble","writeBool","setProto3StringField","getStringValue","setOneofField","clearStringValue","hasStringValue","getIntValue","clearIntValue","hasIntValue","getDoubleValue","clearDoubleValue","hasDoubleValue","getBoolValue","clearBoolValue","hasBoolValue","getJsonValue","clearJsonValue","hasJsonValue","Log","repeatedFields_","timestamp","getTimestamp","Timestamp","fieldsList","toObjectList","getFieldsList","setTimestamp","addFields","writeMessage","writeRepeatedMessage","getWrapperField","setWrapperField","clearTimestamp","hasTimestamp","getRepeatedWrapperField","setFieldsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearFieldsList","Reference","relationship","spanContext","getSpanContext","readEnum","setRelationship","setSpanContext","getRelationship","writeEnum","Relationship","CHILD_OF","FOLLOWS_FROM","setProto3EnumField","clearSpanContext","hasSpanContext","Span","operationName","referencesList","getReferencesList","startTimestamp","getStartTimestamp","durationMicros","tagsList","getTagsList","logsList","getLogsList","setOperationName","addReferences","setStartTimestamp","setDurationMicros","addTags","addLogs","getOperationName","getDurationMicros","setReferencesList","clearReferencesList","clearStartTimestamp","hasStartTimestamp","setTagsList","clearTagsList","setLogsList","clearLogsList","Reporter","reporterId","setReporterId","getReporterId","MetricsSample","name","setName","getName","InternalMetrics","countsList","getCountsList","gaugesList","getGaugesList","addCounts","addGauges","setCountsList","clearCountsList","setGaugesList","clearGaugesList","getAccessToken","ReportRequest","reporter","getReporter","auth","getAuth","spansList","getSpansList","timestampOffsetMicros","internalMetrics","getInternalMetrics","setReporter","setAuth","addSpans","setTimestampOffsetMicros","setInternalMetrics","getTimestampOffsetMicros","clearReporter","hasReporter","clearAuth","hasAuth","setSpansList","clearSpansList","clearInternalMetrics","hasInternalMetrics","Command","disable","devMode","setDisable","setDevMode","getDisable","getDevMode","setProto3BooleanField","ReportResponse","commandsList","getCommandsList","receiveTimestamp","getReceiveTimestamp","transmitTimestamp","getTransmitTimestamp","errorsList","getRepeatedField","warningsList","infosList","addCommands","setReceiveTimestamp","setTransmitTimestamp","addErrors","addWarnings","addInfos","getErrorsList","writeRepeatedString","getWarningsList","getInfosList","setCommandsList","clearCommandsList","clearReceiveTimestamp","hasReceiveTimestamp","clearTransmitTimestamp","hasTransmitTimestamp","setErrorsList","setField","addToRepeatedField","clearErrorsList","setWarningsList","clearWarningsList","setInfosList","clearInfosList","object","extend","exports","google_api_http_pb","google_protobuf_descriptor_pb","google","api","http","ExtensionFieldInfo","HttpRule","MethodOptions","extensionsBinary","ExtensionFieldBinaryInfo","extensions","Http","rulesList","getRulesList","fullyDecodeReservedExpansion","addRules","setFullyDecodeReservedExpansion","getFullyDecodeReservedExpansion","setRulesList","clearRulesList","PatternCase","PATTERN_NOT_SET","GET","PUT","POST","DELETE","PATCH","CUSTOM","getPatternCase","selector","get","put","post","pb_delete","patch","custom","getCustom","CustomHttpPattern","body","responseBody","additionalBindingsList","getAdditionalBindingsList","setSelector","setGet","setPut","setPost","setDelete","setPatch","setCustom","setBody","setResponseBody","addAdditionalBindings","getSelector","getBody","getResponseBody","getGet","clearGet","hasGet","getPut","clearPut","hasPut","getPost","clearPost","hasPost","getDelete","clearDelete","hasDelete","getPatch","clearPatch","hasPatch","setOneofWrapperField","clearCustom","hasCustom","setAdditionalBindingsList","clearAdditionalBindingsList","kind","path","setKind","setPath","getKind","getPath","PackageGlobals","options","opts","val","module","constants","coerce","LogBuilder","runtime","_runtime","_record","LogRecord","timestamp_micros","_platform","nowMicros","runtime_guid","span_guid","stable_name","level","thread_id","filename","line_number","stack_frames","payload_json","error_flag","_addLogRecord","micros","num","error","guid","stableName","flag","data","_encodePayload","payloadJSON","JSON","stringify","_ignored","googleProtobufTimestampPB","LogRecordImp","logFieldKeyHardLimit","logFieldValueHardLimit","timestampMicros","fields","Error","stack","_logFieldKeyHardLimit","_logFieldValueHardLimit","_timestampMicros","_fields","_keysOverLimit","_valuesOverLimit","_clearOverLimits","thriftFields","keyStr","getFieldKey","valStr","getFieldValue","push","Key","Value","substr","Object","getOwnPropertyNames","e","log","ts","secs","Math","floor","nanos","setSeconds","setNanos","keyValues","keyValue","crouton_thrift","Thrift","args","TProtocolException","TProtocolExceptionType","UNKNOWN","read","write","NamedCounter","Name","Runtime","start_micros","group_name","attrs","TraceJoinId","TraceKey","SpanRecord","trace_guid","span_name","join_ids","oldest_micros","youngest_micros","attributes","log_records","Timing","receive_micros","transmit_micros","SampleCount","count","int64_value","double_value","Metrics","counts","gauges","span_records","timestamp_offset_micros","counters","internal_logs","internal_metrics","commands","timing","util","hostScriptElement","WorkerGlobalScope","self","isBrowser","scripts","document","getElementsByTagName","urlQueryParameters","defaults","vars","qi","window","location","href","indexOf","slice","hashes","replace","split","hash","decodeURIComponent","parseScriptElementOptions","browserOpts","dataset","componentName","component_name","collectorHost","collector_host","collectorPort","collector_port","collectorPath","collector_path","collectorEncryption","collector_encryption","enable","verbosity","init","init_global_tracer","xhr_instrumentation","instrument_page_load","parseScriptElementOptionsNoop","parseURLQueryOptions","params","lightstep_verbosity","lightstep_log_to_console","log_to_console","parseURLQueryOptionsNoop","optionsParser","kRuntimeGUIDCookiePrefix","kSessionIDCookieKey","kCookieTimeToLiveSeconds","nowMicrosImp","performance","now","navigationStart","start","Date","PlatformBrowser","groupName","cookieKey","encodeURIComponent","uuid","cookie","_generateLongUUID","sessionID","p0","abs","random","p1","addEventListener","imp","tracerOpts","sessionStorage","parse","getItem","setItem","lib","initGlobalTracer","opentracing","Tracer","TransportBrowser","_host","_port","_path","_encryption","detached","report","done","_reportAJAX","reportProto","toProto","protocol","url","xhr","XMLHttpRequest","responseType","open","setRequestHeader","onreadystatechange","readyState","err","resp","status","response","exception","serialized","send","_reportAsyncScript","payload","toThrift","responseText","authJSON","reportJSON","elem","createElement","async","defer","src","type","hostElem","appendChild","ttl","domain","secure","arguments","newCookie","toUTCString","cookieNoop","CARRIER_B3_TRACER_STATE_PREFIX","B3Propagator","tracer","_carrierPrefix","carrier","_tracer","_error","traceGUID","_guid","_sampled","forEachBaggageItem","_baggagePrefix","CARRIER_DD_TRACER_STATE_PREFIX","DDPropagator","foundFields","spanGUID","sampled","toLowerCase","suffix","setBaggageItem","CARRIER_ENVOY_HEADER_KEY","BINARY_PROTO","nested","go_package","BinaryCarrier","deprecated_text_ctx","rule","id","basic_ctx","BasicTracerCarrier","trace_id","span_id","baggage_items","keyType","EnvoyPropagator","_envoyHeaderKey","_carrierPb","Root","fromJSON","basicContext","fromString","_traceGUID","binaryCarrier","lookupType","verify","create","buffer","encode","finish","bufferString","base64","binaryData","Buffer","from","decode","toJSON","fromValue","CARRIER_TRACER_STATE_PREFIX","CARRIER_BAGGAGE_PREFIX","LightStepPropagator","ReportImp","oldestMicros","youngestMicros","spanRecords","internalLogs","_oldestMicros","_youngestMicros","_spanRecords","_internalLogs","_counters","_timestampOffsetMicros","span","_runtimeGUID","thriftCounters","thriftSpanRecords","spanRecord","_toThrift","_toProto","metricSample","converter","packageObject","RuntimeImp","runtimeGUID","startMicros","_startMicros","_componentName","_attributes","thriftAttrs","tracerVersion","version","tracerPlatform","tracerPlatformVersion","commandLine","hostname","hexToDec","tracerTags","ttag","reporterTags","allTags","concat","reporterProto","SpanContextImp","_baggage","_upperTraceGUID","SpanImp","_tracerImp","_ctx","_operationName","getBaggageItem","keyValuePairs","_tags","argumentType","tsMicros","record","getLogFieldKeyHardLimit","getLogFieldValueHardLimit","_log_records","emit","finishTime","end","console","assert","_ended","_beginMicros","_endMicros","_errorFlag","parent_span_guid","urlPrefix","setEndMicros","shouldSendMetaSpan","getTags","startSpan","tags","_addSpanRecord","logs","logRecord","logThrift","getNumKeysOverLimit","getNumValuesOverLimit","spanContextProto","spanProto","startSeconds","startNanos","logProto","parentSpanGUID","strValue","strKey","tag","ref","parentSpanContext","ClockState","globals","DEFAULT_COLLECTOR_HOSTNAME","DEFAULT_COLLECTOR_PORT_TLS","DEFAULT_COLLECTOR_PORT_PLAIN","DEFAULT_COLLECTOR_PATH","MAX_INTERNAL_LOGS","_singleton","_delegateEventEmitterMethods","setOptions","override_runtime_guid","_plugins","_options","_optionDescs","_makeOptionsTable","_opentracing","opentracing_module","_auth","logger","warn","_warn","_transport","override_transport","_propagators","FORMAT_HTTP_HEADERS","FORMAT_TEXT_MAP","FORMAT_BINARY","propagators","_reportingLoopActive","_first_report_has_run","_reportYoungestMicros","_reportTimer","_reportErrorStreak","_lastVisibleErrorMillis","_skippedVisibleErrors","_activeRootSpanSet","_activeRootSpan","_flushIsActive","addPlugin","addPlatformPlugins","setPlatformOptions","transport","_info","_useClockState","disable_clock_skew_correction","_clockState","localStoreGet","localStoreSet","_setupReportOnExit","startPlugins","_ee","methodName","apply","addOption","min","max","defaultValue","_printToConsole","bind","parentCtxImp","references","REFERENCE_CHILD_OF","REFERENCE_FOLLOWS_FROM","context","referencedContext","generateTraceGUIDForRootSpan","spanCtx","generateUUID","spanImp","default_span_tags","setBeginMicros","setParentGUID","k","v","format","meta_event_reporting","inject","sc","extract","disabled","_flushReport","userOptions","desc","modified","unchanged","_setOptionInternal","keys","forEach","_initReportingDataIfNeeded","_startReportingLoop","optionsString","newValue","_debug","valueType","oldValue","platformTags","log_field_key_hard_limit","log_field_value_hard_limit","pluginSet","plugins","plugin","addOptions","_setActiveRootSpanToYoungest","jsonString","ArrayBuffer","view","Uint8Array","code","charCodeAt","arr","fromCharCode","b","unused","countersAllZero","_internalAddSpanRecord","max_span_records","index","spans","currentInternalLogs","toAdd","_pushInternalLog","maxErrorsToEmpty","clear_span_buffer_consecutive_errors","numSpansToDrop","max_consecutive_errors","spans_dropped","disable_report_on_exit","finalFlushOnce","finalFlush","unflushed_spans","buffer_youngest_micros","onBeforeExit","disable_reporting_loop","stopReportingOnce","stopReporting","_stopReportingLoop","loop","_enqueueNextReport","delay","delay_initial_report_millis","detachedTimeout","clearTimeout","reportInterval","max_reporting_interval_millis","isReady","backOff","basis","jitter","manual","clockReady","clockOffsetMicros","offsetMicros","offset_micros","active_samples","activeSampleCount","ready","_buffersAreEmpty","_clearBuffers","ensureConnection","timestampOffset","originMicros","res","destinationMicros","reportWindowSeconds","errString","last_report_seconds_ago","_restoreRecords","getSpanRecords","getInternalLogs","getCounters","_clearSpanRecordsIfMaxErrors","streak","spans_reported","addSample","seconds","errors","disable_meta_event_reporting","nextVisible","error_throttle_millis","s","method","silent","kMaxOffsetAge","kStoredSamplesTTLMicros","_nowMicros","_localStoreGet","_localStoreSet","_samples","_currentOffsetMicros","_currentOffsetAge","storedData","samples","update","receiveMicros","transmitMicros","latestDelayMicros","MAX_VALUE","latestOffsetMicros","shift","delayMicros","minDelayMicros","bestOffsetMicros","sample","pow","sqrt","kSGATE","Util","callback","timer","setTimeout","unref","shouldSendSpan","library","initLibrary","Platform","ThriftTransport","ProtoTransport","thrift","InstrumentPageLoad","_inited","_span","tracerImp","currentOptions","_ensureSpanStarted","_handleReadyStateChange","addActiveRootSpan","state","_addTimingSpans","logEvent","removeActiveRootSpan","nav","dst","p","item","description","suffixes","parentImp","setTag","navigator","userAgent","_copyNavigatorProperties","childOf","requestStart","responseStart","responseEnd","domLoading","domInteractive","proxiedFetch","fetch","getCookies","cookies","parts","getResponseHeaders","result","entries","headers","pair","InstrumentFetch","_enabled","_isValidContext","_proxyInited","_internalExclusions","_handleOptions","_addServiceHostToExclusions","on","current","serviceHost","fetch_instrumentation","_instrumentFetch","escapeRegExp","host","port","set","RegExp","input","request","Request","_shouldTrace","parsed","URL","origin","pathname","search","include_cookies","_shouldAddHeadersToRequest","headersCarrier","event","openPayload","then","ok","statusText","catch","some","ex","test","fetch_url_exclusion_patterns","fetch_url_inclusion_patterns","inc","fetch_url_header_exclusion_patterns","fetch_url_header_inclusion_patterns","proxied","raw","getAllResponseHeaders","InstrumentXHR","_instrumentSetRequestHeader","_instrumentOpen","_instrumentSend","header","__requestHeaders","asyncArg","user","password","__tracer_span","__tracer_url","url_pathname","Array","lenStr","data_length","xhr_url_exclusion_patterns","xhr_url_inclusion_patterns","xhr_url_header_exclusion_patterns","xhr_url_header_inclusion_patterns","LogToConsole","_optionsCb","_logAddedCb","_handleLogAdded","removeListener","enabled"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFa;AACb;;AAEA;AACA,wBAAwB,qBAAqB;AAC7C;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,EAAE;AACb,WAAW,KAAK;AAChB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;ACnDa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,UAAU;AACV,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA,8BAA8B,EAAE,mBAAmB,EAAE,iBAAiB,EAAE;AACxE;;;;;;;;;;;;;AC1Ia;AACb;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd,eAAe,yBAAyB;AACxC,eAAe,KAAK;AACpB,iBAAiB,iBAAiB;AAClC,gBAAgB,MAAM;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,0IAA0I,gCAAgC;AAC1K;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;;;;;;;;;;;;AClGa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ea;AACb;;AAEA,gBAAgB,mBAAO,CAAC,4EAAuB;AAC/C,gBAAgB,mBAAO,CAAC,wEAAqB;;AAE7C;;AAEA;AACA,mCAAmC,iBAAiB;AACpD;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA,UAAU;AACV,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,2BAA2B;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClHa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa,0CAA0C;AACvD;AACA;AACA,aAAa;AACb;AACA,oDAAoD;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ua;AACb;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,KAAK,aAAa;AAClB;AACA;;;;;;;;;;;;;AChBa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,4BAA4B,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEa;AACb;;AAEA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,UAAU;AACV,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;;AAEA;AACA,wBAAwB,gBAAgB;AACxC;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ca;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,WAAW;AACX,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5vDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,MAAM;AA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,yCAAyC;AACpD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,2CAA2C;AACtD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;;;AAGA,YAAY,+CAA+C;AAC3D;AACA;AACA;;;AAGA;AACA,WAAW,wCAAwC;AACnD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,sDAAsD;AACzE;AACA;;;AAGA,YAAY,sDAAsD;AAClE;AACA;AACA;;;AAGA;AACA,WAAW,+CAA+C;AAC1D,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;;;AAGA,YAAY,oDAAoD;AAChE;AACA;AACA;;;AAGA;AACA,WAAW,6CAA6C;AACxD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;;;AAGA,YAAY,6CAA6C;AACzD;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;;;AAGA,YAAY,gDAAgD;AAC5D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,uCAAuC;AAClD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,sDAAsD;AACjE,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sDAAsD;AACjE,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,6CAA6C;AAChE;AACA;;;AAGA,YAAY,uDAAuD;AACnE;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,qDAAqD;AAChE,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;;;AAGA,YAAY,oDAAoD;AAChE;AACA;AACA;;;AAGA;AACA,WAAW,6CAA6C;AACxD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;;;AAGA,YAAY,oDAAoD;AAChE;AACA;AACA;;;AAGA;AACA,WAAW,6CAA6C;AACxD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,+CAA+C;AAClE;AACA;;;AAGA,YAAY,+CAA+C;AAC3D;AACA;AACA;;;AAGA;AACA,WAAW,wCAAwC;AACnD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,8DAA8D;AACjF;AACA;;;AAGA,YAAY,8DAA8D;AAC1E;AACA;AACA;;;AAGA;AACA,WAAW,uDAAuD;AAClE,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oDAAoD;AACvE;AACA;;;AAGA,YAAY,oDAAoD;AAChE;AACA;AACA;;;AAGA;AACA,WAAW,6CAA6C;AACxD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;;;AAGA,YAAY,gDAAgD;AAC5D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,6DAA6D;AAChF;AACA;;;AAGA,YAAY,6DAA6D;AACzE;AACA;AACA;;;AAGA;AACA,WAAW,sDAAsD;AACjE,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,6CAA6C;AACxD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,4CAA4C;AACvD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,kDAAkD;AAC/E;AACA;AACA;AACA,6BAA6B,iDAAiD;AAC9E;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kDAAkD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iDAAiD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,kDAAkD;AACtE;;;AAGA,YAAY,kDAAkD;AAC9D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,iDAAiD;AACrE;;;AAGA,YAAY,iDAAiD;AAC7D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;;;AAGA,YAAY,8CAA8C;AAC1D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,4CAA4C;AACvD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;;;AAGA,YAAY,8CAA8C;AAC1D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,2CAA2C;AACtD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,6DAA6D;AACxE,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6DAA6D;AACxE,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6DAA6D;AACxE,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,wDAAwD;AAC3E;AACA;;;AAGA,YAAY,wDAAwD;AACpE;AACA;AACA;;;AAGA;AACA,WAAW,iDAAiD;AAC5D,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA;;;AAGA,YAAY,6CAA6C;AACzD;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,qEAAqE;AACxF;AACA;;;AAGA,YAAY,qEAAqE;AACjF;AACA;AACA;;;AAGA;AACA,WAAW,8DAA8D;AACzE,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,gDAAgD;AAC3D,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gDAAgD;AAC3D,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,gDAAgD;AAC3D,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;;;AAGA,YAAY,kDAAkD;AAC9D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,8CAA8C;AACzD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,qDAAqD;AACxE;AACA;;;AAGA,YAAY,qDAAqD;AACjE;AACA;AACA;;;AAGA;AACA,WAAW,8CAA8C;AACzD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;;;AAGA,YAAY,gDAAgD;AAC5D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,6CAA6C;AACxD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,qCAAqC;AACxD;AACA;;;AAGA,YAAY,+CAA+C;AAC3D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,gDAAgD;AAC7E;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAgD;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,gDAAgD;AACpE;;;AAGA,YAAY,gDAAgD;AAC5D;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,sCAAsC;AACjD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0CAA0C;AACvE;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,2CAA2C;AACxE;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,0CAA0C;AAC9D;;;AAGA,YAAY,0CAA0C;AACtD;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,2CAA2C;AAC/D;;;AAGA,YAAY,2CAA2C;AACvD;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,oCAAoC;AAC/C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,mCAAmC;AAC9C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,wCAAwC;AACnD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,sCAAsC;AACjD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,qCAAqC;AAChD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,6BAA6B,sDAAsD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,sDAAsD;AAC1E;;;AAGA,YAAY,sDAAsD;AAClE;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,mDAAmD;AACtE;AACA;;;AAGA,YAAY,mDAAmD;AAC/D;AACA;AACA;;;AAGA;AACA,WAAW,4CAA4C;AACvD,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO,6BAA6B,iBAAiB,gCAAgC;AAC7F;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,2CAA2C;AACtD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,oDAAoD;AAC/D,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,YAAY;AACZ;AACA;AACA,oBAAoB,QAAQ;AAC5B;;;AAGA,YAAY,QAAQ;AACpB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,4DAA4D;AAC/E;AACA;;;AAGA,YAAY,4DAA4D;AACxE;AACA;AACA;;;AAGA;AACA,WAAW,qDAAqD;AAChE,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,qBAAqB;AACzC;;;AAGA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;;;AAGA,YAAY,qBAAqB;AACjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,sCAAsC;AACjD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,sCAAsC;AACjD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,+CAA+C;AAC1D,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,uDAAuD;AAC1E;AACA;;;AAGA,YAAY,uDAAuD;AACnE;AACA;AACA;;;AAGA;AACA,WAAW,gDAAgD;AAC3D,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,yCAAyC;AACpD,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,oDAAoD;AAC/D,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,eAAe;AACnC;;;AAGA,YAAY,eAAe;AAC3B;AACA;AACA;;;AAGA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,mBAAmB,4DAA4D;AAC/E;AACA;;;AAGA,YAAY,4DAA4D;AACxE;AACA;AACA;;;AAGA;AACA,WAAW,qDAAqD;AAChE,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACjzRA;AACA;AACA;AACA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0EAAiB;AACpC;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA,0BAA0B,cAAc;AACxC,WAAW,kBAAkB;AAC7B;AACA;AACA,WAAW,iCAAiC;AAC5C,YAAY;AACZ,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,WAAW,gBAAgB;AAC3B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,mBAAmB;AAC9B,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,mBAAmB;AAC9B,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA,YAAY;AACZ;AACA;AACA,oBAAoB,OAAO;AAC3B;;;AAGA,YAAY,OAAO;AACnB;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,qDAAqD,cAAc;;AAEnE;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,uBAAuB;;AAEvB;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB,8CAA8C;AAC/E,WAAW,SAAS;AACpB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,kBAAkB;AAC7F;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iFAAiF,oBAAoB;AACrG;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,uBAAuB;AAC3G;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAyE,mBAAmB;AAC5F;AACA,WAAW,oBAAoB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,kBAAkB;AACrE;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,oBAAoB;AACnG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,oBAAoB;AAChG;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,kBAAkB;AACtF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,oBAAoB;AAC/B,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6FAA6F,qBAAqB;AAClH;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6GAA6G,sBAAsB;AACnI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1yCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;ACfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC9Da;AACb,8CAA8C,cAAcgC;;;;;;;;;;;;AC3Ga;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,kBAAkB,mBAAO,CAAC,gEAAa;AACvC,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACnCa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACvEa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0EAAkB;AACjD;AACA,WAAW,mBAAO,CAAC,8DAAY;AAC/B;AACA,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,kBAAkB,mBAAO,CAAC,gEAAa;AACvC;AACA,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C;AACA,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA,oBAAoB,mBAAO,CAAC,0EAAe;AAC3C;AACA,SAAS,mBAAO,CAAC,wEAAiB;AAClC,SAAS,mBAAO,CAAC,gEAAa;AAC9B,SAAS,mBAAO,CAAC,gEAAa;AAC9B;AACA;AACA,iC;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC5Ca;AACb;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,qBAAqB,mBAAO,CAAC,kFAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,qC;;;;;;;;;;;;ACtGa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,yDAAU;AACpC,oBAAoB,mBAAO,CAAC,gFAAe;AAC3C,kBAAkB,mBAAO,CAAC,4EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,uC;;;;;;;;;;;;AC9Ea;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B,qBAAqB,mBAAO,CAAC,sEAAgB;AAC7C,eAAe,mBAAO,CAAC,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChBa;AACb,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gC;;;;;;;;;;;;AC9Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,wC;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,gEAAa;AACrC,WAAW,mBAAO,CAAC,sDAAQ;AAC3B,aAAa,mBAAO,CAAC,sDAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,gBAAgB,KAAK;AACrB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kC;;;;;;;;;;;;AClJA;;AAEa;AACb,iBAAiB,mBAAO,CAAC,2DAAa;;;;;;;;;;;;;ACHzB;AACb;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU,UAAU,UAAU,YAAY,eAAe,EAAE,EAAE,EAAE;AAC/E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,YAAY;AAC9B,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB,kBAAkB,EAAE;AACpB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB,kBAAkB,QAAQ;AAC1B,kBAAkB,QAAQ;AAC1B,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,cAAc;AACd,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ya;AACb;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,qDAAQ;AAC3B,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,0BAA0B;AAC1B,2FAA2F,iBAAiB;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,eAAe;AACf,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA,wBAAwB;AACxB,cAAc;AACd;AACA;AACA,gBAAgB;AAChB,0CAA0C,YAAY,KAAK;AAC3D;AACA,WAAW;AACX,OAAO;;AAEP;AACA,SAAS,2BAA2B;AACpC,cAAc;AACd;AACA;AACA;AACA,sBAAsB,aAAa,KAAK;AACxC;AACA,WAAW;AACX,OAAO;;AAEP;AACA,SAAS;AACT;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,cAAc;AACd,cAAc;;AAEd;AACA;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC,+BAA+B;AAC/B,mBAAmB,2BAA2B;AAC9C;AACA;AACA,OAAO;AACP;;AAEA,2BAA2B;AAC3B,gCAAgC;AAChC,mBAAmB,sBAAsB;AACzC,gBAAgB;AAChB;AACA,OAAO;AACP;;AAEA,8BAA8B;AAC9B,qBAAqB;AACrB,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX,aAAa;AACb,4CAA4C;AAC5C,SAAS;AACT,OAAO;AACP;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA,aAAa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B,WAAW,yBAAyB;AACpC,WAAW,yBAAyB;AACpC,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,+DAA+D;;AAE/D;AACA;AACA,cAAc;AACd;AACA,qBAAqB;;AAErB;AACA;AACA,cAAc;AACd;AACA,iBAAiB;;AAEjB;AACA;AACA,cAAc;AACd;AACA,sCAAsC;;AAEtC;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,YAAY,MAAM;AAClB;AACA;;AAEA;AACA;;AAEA,uEAAuE;AACvE;AACA;AACA;AACA;AACA,kGAAkG;AAClG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,cAAc,MAAM,iBAAiB;AAC3E;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,8IAA8I;AACzJ,WAAW,iCAAiC;AAC5C,WAAW,EAAE;AACb,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE,0BAA0B;AAChG;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,sBAAsB;AACjC,WAAW,iCAAiC;AAC5C,aAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClXa;AACb,gCAAgC,mBAAO,CAAC,uEAAiB;;AAEzD;;AAEA;AACA,qCAAqC,WAAW,MAAM,gBAAgB;AACtE;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,KAAK;AAChB,WAAW,aAAa;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,KAAK;AAChB,aAAa,cAAc;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB,YAAY,MAAM;AAClB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA4B,mBAAO,CAAC,2DAAW;AAC/C,4BAA4B,mBAAO,CAAC,2DAAW;AAC/C,4BAA4B,mBAAO,CAAC,6DAAY;AAChD,4BAA4B,mBAAO,CAAC,+DAAa;;AAEjD;AACA,4BAA4B,mBAAO,CAAC,yDAAU;AAC9C,4BAA4B,mBAAO,CAAC,+DAAa;AACjD,4BAA4B,mBAAO,CAAC,qDAAQ;AAC5C,4BAA4B,mBAAO,CAAC,qDAAQ;AAC5C,4BAA4B,mBAAO,CAAC,qDAAQ;AAC5C,4BAA4B,mBAAO,CAAC,uDAAS;AAC7C,4BAA4B,mBAAO,CAAC,uDAAS;AAC7C,4BAA4B,mBAAO,CAAC,6DAAY;AAChD,4BAA4B,mBAAO,CAAC,2DAAW;AAC/C,4BAA4B,mBAAO,CAAC,yDAAU;;AAE9C;AACA,4BAA4B,mBAAO,CAAC,2DAAW;AAC/C,4BAA4B,mBAAO,CAAC,6DAAY;;AAEhD;AACA,4BAA4B,mBAAO,CAAC,uDAAS;AAC7C,4BAA4B,mBAAO,CAAC,qDAAQ;;AAE5C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvGa;AACb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;AACjD,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;;AAEjD;AACA,wBAAwB,mBAAO,CAAC,qEAAgB;AAChD,wBAAwB,mBAAO,CAAC,mDAAO;AACvC,wBAAwB,mBAAO,CAAC,uDAAS;AACzC;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnCa;AACb,gCAAgC,mBAAO,CAAC,mEAAe;;AAEvD;;AAEA;AACA,4BAA4B,mBAAO,CAAC,6DAAY;AAChD,4BAA4B,mBAAO,CAAC,uDAAS;AAC7C,4BAA4B,mBAAO,CAAC,yDAAU;;AAE9C;AACA;;;;;;;;;;;;;ACXa;AACb;;AAEA;AACA,YAAY,mBAAO,CAAC,uDAAS;AAC7B;;AAEA,cAAc,mBAAO,CAAC,uDAAS;AAC/B,cAAc,mBAAO,CAAC,qDAAQ;;AAE9B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,2BAA2B;;AAE3B;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,8GAA8G;AACzH,WAAW,4JAA4J,EAAE;AACzK,aAAa,eAAe;AAC5B,wBAAwB,8FAA8F;AACtH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ha;AACb;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,mBAAmB;AAC9B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;;AC1Ia;AACb;;AAEA;AACA,uBAAuB,mBAAO,CAAC,yDAAU;AACzC;;AAEA,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,0BAA0B;AACrC,WAAW,0BAA0B;AACrC,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA,8BAA8B;;AAE9B;AACA;AACA,cAAc;AACd;AACA,mCAAmC;;AAEnC;AACA;AACA,cAAc;AACd;AACA,0DAA0D;;AAE1D;AACA;AACA,cAAc;AACd;AACA,qCAAqC;;AAErC;AACA;AACA,cAAc;AACd;AACA,4DAA4D;;AAE5D;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,kBAAkB;AAChC,cAAc,OAAO;AACrB,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC/Ja;AACb;;AAEA;AACA,uBAAuB,mBAAO,CAAC,yDAAU;AACzC;;AAEA,eAAe,mBAAO,CAAC,uDAAS;AAChC,eAAe,mBAAO,CAAC,qDAAQ;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,aAAa,UAAU;AACvB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,eAAe;AAC1B,aAAa,4BAA4B;AACzC;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,4BAA4B;;AAE5B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,gCAAgC;AAC9C;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,gBAAgB;AAClD,8BAA8B,wBAAwB;AACtD,WAAW,OAAO;AAClB,aAAa,uBAAuB;AACpC,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,UAAU;AACvB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,UAAU;AACvB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,EAAE;AACb,aAAa,UAAU;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,sBAAsB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL,uBAAuB,6BAA6B;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC,qDAAqD,8BAA8B;AACnF,WAAW,gBAAgB;AAC3B,aAAa,KAAK;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,gBAAgB;AAC/C,qDAAqD,8BAA8B;AACnF,WAAW,gBAAgB;AAC3B,aAAa,KAAK;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB,KAAK,gBAAgB;AACtD,qDAAqD,8BAA8B;AACnF,WAAW,gBAAgB;AAC3B,aAAa,KAAK;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC,qDAAqD,8BAA8B;AACnF,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChba;AACb;;AAEA;;AAEA,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,2BAA2B;;AAE3B;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClPa;AACb;;AAEA;AACA,uBAAuB,mBAAO,CAAC,yDAAU;AACzC;;AAEA,YAAY,mBAAO,CAAC,uDAAS;AAC7B,YAAY,mBAAO,CAAC,qDAAQ;;AAE5B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,kCAAkC;;AAElC;AACA;AACA,cAAc;AACd;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,eAAe;AAC7B,cAAc,kBAAkB;AAChC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,cAAc;AACpD;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;AC1Ma;AACb;;AAEA;AACA,kBAAkB;;AAElB,gBAAgB,mBAAO,CAAC,6DAAY;AACpC,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,uDAAS;AACjC,gBAAgB,mBAAO,CAAC,6DAAY;AACpC,gBAAgB,mBAAO,CAAC,uDAAS;AACjC,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,2DAAW;AACnC,gBAAgB,mBAAO,CAAC,yDAAU;AAClC,gBAAgB,mBAAO,CAAC,uDAAS;AACjC,gBAAgB,mBAAO,CAAC,qDAAQ;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C;AACA,cAAc,iBAAiB;AAC/B,cAAc,mBAAmB;AACjC,cAAc,mBAAmB;AACjC,cAAc,iBAAiB;AAC/B,cAAc,KAAK;AACnB;;AAEA;AACA,sCAAsC,YAAY;AAClD;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,WAAW,cAAc,uCAAuC,qBAAqB;AACrF,aAAa,cAAc;AAC3B,cAAc,OAAO;AACrB,cAAc,cAAc,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uDAAuD,aAAa,EAAE;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,mBAAmB;AACnB;AACA,0CAA0C;AAC1C;AACA,mBAAmB;AACnB,SAAS;AACT;AACA;AACA,mBAAmB;AACnB;AACA,gEAAgE;AAChE;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;;AAEA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;;AAEA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C,uBAAuB;AACvB,aAAa;AACb;;AAEA,SAAS;AACT,sCAAsC;AACtC,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,WAAW,KAAK,aAAa,WAAW;AAC3D;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc,uCAAuC,qBAAqB;AACrF,aAAa,cAAc;AAC3B,cAAc,OAAO;AACrB,cAAc,cAAc,mBAAmB;AAC/C;AACA;;;;;;;;;;;;;AClxBa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,oBAAoB,IAAI,mBAAmB,uCAAuC;AAC/F,YAAY,MAAM;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,2BAA2B;AAC3B;AACA,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;AACjE,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,KAAK;AACL;;;;;;;;;;;;;AC1Za;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;;;;;;;;;;;;;AClDa;AACb;;AAEA;AACA,gBAAgB,mBAAO,CAAC,+DAAa;AACrC;;AAEA,cAAc,mBAAO,CAAC,uDAAS;AAC/B,cAAc,mBAAO,CAAC,qDAAQ;AAC9B,cAAc,mBAAO,CAAC,uDAAS;AAC/B,cAAc,mBAAO,CAAC,qDAAQ;;AAE9B;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,cAAc;AACzB,WAAW,aAAa;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,qBAAqB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,aAAa;AACxB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,cAAc,uCAAuC,qBAAqB;AACrF,aAAa,cAAc;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,cAAc,uCAAuC,qBAAqB;AACrF,aAAa,KAAK;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA,uDAAuD;;AAEvD,KAAK;;AAEL;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA,uBAAuB,iDAAiD;AACxE;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA,8CAA8C;;AAE9C,KAAK;;AAEL,uBAAuB,iDAAiD;AACxE;;AAEA;AACA,8CAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Wa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,qBAAqB;AACtD;AACA,UAAU;AACV,WAAW,mCAAmC,YAAY,GAAG;AAC7D,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,mCAAmC,cAAc;AACjD;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,aAAa;AACb;;AAEA,cAAc,mBAAO,CAAC,mEAAe;;;;;;;;;;;;;ACnCxB;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;;AAEA;AACA,yCAAyC,sCAAsC;AAC/E;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA,UAAU;AACV,WAAW,WAAW;AACtB,WAAW,KAAK;AAChB,aAAa;AACb;;AAEA;AACA,+BAA+B,kBAAkB,gBAAgB,qBAAqB;AACtF;AACA;AACA;AACA,UAAU;AACV,WAAW,sBAAsB;AACjC,WAAW,gCAAgC;AAC3C,aAAa,uBAAuB;AACpC;;AAEA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,mCAAmC,kCAAkC;AACrE,WAAW,oCAAoC;AAC/C,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,sBAAsB;AACjC,WAAW,gCAAgC;AAC3C,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,kCAAkC,EAAE;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ia;AACb;;AAEA;AACA,gBAAgB,mBAAO,CAAC,+DAAa;AACrC;;AAEA,aAAa,mBAAO,CAAC,yDAAU;AAC/B,aAAa,mBAAO,CAAC,qDAAQ;AAC7B,aAAa,mBAAO,CAAC,mDAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,YAAY,UAAU;AACtB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,sBAAsB;;AAEtB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA,2BAA2B,gDAAgD;AAC3E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACtKa;AACb;;AAEA,2BAA2B,EAAE;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA,UAAU;AACV,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA,UAAU;AACV,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB,YAAY,MAAM;AAClB;;AAEA;AACA;AACA;AACA,UAAU;AACV,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;;AAEA;AACA,gCAAgC,eAAe;AAC/C;AACA,cAAc,oBAAoB;AAClC,cAAc,oBAAoB;AAClC,cAAc,oBAAoB;AAClC,cAAc,oBAAoB;AAClC,cAAc,oBAAoB;AAClC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,QAAQ;AACzB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,aAAa;AACtC,KAAK;AACL;AACA;;;;;;;;;;;;;AClZa;AACb;;AAEA;AACA,gBAAgB,mBAAO,CAAC,+DAAa;AACrC;;AAEA,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,uDAAS;AACjC,gBAAgB,mBAAO,CAAC,uDAAS;AACjC,gBAAgB,mBAAO,CAAC,6DAAY;AACpC,gBAAgB,mBAAO,CAAC,2DAAW;AACnC,gBAAgB,mBAAO,CAAC,2DAAW;AACnC,gBAAgB,mBAAO,CAAC,yDAAU;AAClC,gBAAgB,mBAAO,CAAC,yDAAU;AAClC,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,2DAAW;AACnC,gBAAgB,mBAAO,CAAC,2DAAW;AACnC,gBAAgB,mBAAO,CAAC,6DAAY;AACpC,gBAAgB,mBAAO,CAAC,+DAAa;AACrC,gBAAgB,mBAAO,CAAC,6DAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,qBAAqB;;AAErB;AACA;AACA,cAAc;AACd;AACA,4BAA4B;;AAE5B;AACA;AACA,cAAc;AACd;AACA,gCAAgC;;AAEhC;AACA;AACA,cAAc;AACd;AACA,8BAA8B;;AAE9B;AACA;AACA,cAAc;AACd;AACA,2BAA2B;;AAE3B;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gGAAgG,cAAc,2GAA2G,cAAc;AACvO;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB,+CAA+C;AACjE,+CAA+C;;AAE/C;AACA;AACA,uBAAuB,+CAA+C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA,uBAAuB;AACvB;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC,cAAc,uBAAuB;AACrC,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kBAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kBAAkB;AACvE;AACA;AACA,qDAAqD,kBAAkB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,4BAA4B,EAAE,uBAAuB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,KAAK;AAClB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,KAAK;AAClB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,UAAU,EAAE;AACzB;AACA;AACA;AACA;;AAEA;AACA,YAAY,yBAAyB,GAAG,yBAAyB,MAAM,yBAAyB;AAChG,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,+CAA+C;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD,yBAAyB;AACjF,WAAW,UAAU,oBAAoB;AACzC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA,gDAAgD;AAChD;;AAEA;AACA,iGAAiG,yBAAyB;AAC1H,WAAW,UAAU,oBAAoB;AACzC,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,aAAa,UAAU,EAAE;AACzB,YAAY,MAAM;AAClB,YAAY,qBAAqB,EAAE;AACnC;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,UAAU,EAAE;AACzB,YAAY,MAAM;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,YAAY;AACzB;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,UAAU,EAAE;AACzB;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,oBAAoB,MAAM,uBAAuB;AACnF;AACA,cAAc,SAAS;AACvB;AACA,wFAAwF,WAAW;AACnG,cAAc,SAAS;AACvB;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,WAAW,UAAU,EAAE;AACvB,WAAW,mBAAmB;AAC9B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,aAAa;AACnD;AACA,UAAU;AACV,WAAW,eAAe;AAC1B,aAAa;AACb;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5kBa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,qDAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,eAAe;AAC7B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnMa;;AAEb;AACA;AACA;AACA;AACA,4BAA4B,mBAAO,CAAC,qEAAgB;;AAEpD,YAAY,mBAAO,CAAC,uDAAS;;AAE7B;AACA;;AAEA,eAAe,mBAAO,CAAC,wEAAqB;AAC5C,eAAe,mBAAO,CAAC,oEAAmB;AAC1C,eAAe,mBAAO,CAAC,kEAAkB;;AAEzC;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,kBAAkB;AAC/B;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,uDAAuD,yBAAyB,EAAE;AAClF;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA,cAAc,KAAK;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,mBAAO,CAAC,qDAAQ;;AAE/B;AACA;AACA,qBAAqB;AACrB,0CAA0C,iCAAiC;AAC3E,oDAAoD,iCAAiC;AACrF;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,mBAAO,CAAC,qDAAQ;;AAE/B;AACA;AACA,4CAA4C,gCAAgC;AAC5E;AACA;;;AAGA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gEAAgE,mBAAO,CAAC,qDAAQ;AAChF;AACA,CAAC;;;;;;;;;;;;;AChNY;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,4BAA4B,UAAU;AACtC,4CAA4C,aAAa;AACzD,0BAA0B,UAAU;;AAEpC;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvMA,8CAAa;AACb;;AAEA;AACA,iBAAiB,mBAAO,CAAC,4EAAuB;;AAEhD;AACA,cAAc,mBAAO,CAAC,sEAAoB;;AAE1C;AACA,oBAAoB,mBAAO,CAAC,kFAA0B;;AAEtD;AACA,aAAa,mBAAO,CAAC,oEAAmB;;AAExC;AACA,eAAe,mBAAO,CAAC,wEAAqB;;AAE5C;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,gBAAgB,mBAAO,CAAC,kEAAY;;AAEpC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,oFAAoF;;AAEpF;AACA;AACA,UAAU;AACV;AACA;AACA,mDAAmD,kCAAkC;;AAErF;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA,WAAW,YAAY;AACvB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,kBAAkB;AAC7B,WAAW,QAAQ;AACnB,aAAa,kBAAkB;AAC/B;AACA,oCAAoC;AACpC,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,mBAAmB;AAChC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD,kBAAkB,gBAAgB,EAAE,EAAE;;AAEtF;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC;;AAEnF;AACA;AACA;;AAEA;;AAEA,0DAA0D,kBAAkB,aAAa,EAAE,EAAE;;AAE7F;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B;AACA;AACA,oCAAoC;AACpC,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,YAAY;AACzB;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,uBAAuB;AACvB,+DAA+D,QAAQ;AACvE;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,WAAW,iBAAiB;AAC5B,aAAa;AACb;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,YAAY;AACzB;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpaa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qDAAQ;AAChC,gBAAgB,mBAAO,CAAC,qDAAQ;;AAEhC;AACA,kIAAkI,oBAAoB;AACtJ;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,yBAAyB;AACzB;AACA;AACA,0EAA0E,iBAAiB;AAC3F;AACA;AACA;AACA,eAAe;AACf,SAAS;AACT;AACA,eAAe;AACf,6CAA6C;AAC7C;AACA;AACA,eAAe;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd,mBAAmB,gDAAgD;AACnE;AACA;;AAEA;AACA,6CAA6C,oBAAoB;;AAEjE;AACA,wBAAwB;AACxB;AACA;AACA;AACA,0BAA0B,WAAW,KAAK;AAC1C;AACA;AACA,eAAe;;AAEf;AACA,SAAS,2BAA2B;AACpC;AACA;AACA,0BAA0B,YAAY,KAAK;AAC3C;AACA,eAAe;;AAEf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AChLa;;AAEb;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,2DAAW;;AAEjC;AACA,qCAAqC,eAAe;AACpD;AACA,UAAU;AACV,WAAW,kBAAkB;AAC7B,aAAa,UAAU,EAAE;AACzB;AACA;;AAEA;AACA,mCAAmC,eAAe;AAClD;AACA,UAAU;AACV,WAAW,UAAU,EAAE;AACvB,WAAW,mBAAmB;AAC9B,aAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA,gCAAgC,eAAe;AAC/C;AACA,cAAc,2BAA2B;AACzC,cAAc,yBAAyB;AACvC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrGa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,mBAAmB;AACnB;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB,IAAI,mBAAmB,0CAA0C;AAClG;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gCAAgC;AAC3C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB,KAAK,2BAA2B;AACrE,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChda;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;;;;;;;;;;;;ACpFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBCdwBA,K;AALxB;AACA;AACA;AACA;AACA;AACe,SAASA,KAAT,CAAeC,GAAf,EAAoBC,EAApB,EAAwB;AACnC,QAAI,CAACD,GAAL,EAAU;AACN;AACH;AACD;AACA,SAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,YAAIG,eAAeC,IAAf,CAAoBJ,GAApB,EAAyBE,GAAzB,CAAJ,E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","file":"lightstep-tracer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lightstep\"] = factory();\n\telse\n\t\troot[\"lightstep\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/lib.js\");\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","var $jscomp={scope:{},getGlobal:function(a){return\"undefined\"!=typeof window&&window===a?a:\"undefined\"!=typeof global?global:a}};$jscomp.global=$jscomp.getGlobal(this);$jscomp.initSymbol=function(){$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol);$jscomp.initSymbol=function(){}};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return\"jscomp_symbol_\"+a+$jscomp.symbolCounter_++};\n$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();$jscomp.global.Symbol.iterator||($jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"iterator\"));$jscomp.initSymbolIterator=function(){}};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();$jscomp.initSymbol();$jscomp.initSymbolIterator();var b=a[Symbol.iterator];if(b)return b.call(a);var c=0;return{next:function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}}};\n$jscomp.arrayFromIterator=function(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c};$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};$jscomp.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a;for(var d in b)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(b,d);e&&Object.defineProperty(a,d,e)}else a[d]=b[d]};$jscomp.array=$jscomp.array||{};\n$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+=\"\");var c=0,d={next:function(){if(c<a.length){var e=c++;return{value:b(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};$jscomp.initSymbol();$jscomp.initSymbolIterator();d[Symbol.iterator]=function(){return d};return d};\n$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};\n$jscomp.array.from=function(a,b,c){$jscomp.initSymbolIterator();b=null!=b?b:function(a){return a};var d=[];$jscomp.initSymbol();$jscomp.initSymbolIterator();var e=a[Symbol.iterator];\"function\"==typeof e&&(a=e.call(a));if(\"function\"==typeof a.next)for(;!(e=a.next()).done;)d.push(b.call(c,e.value));else for(var e=a.length,f=0;f<e;f++)d.push(b.call(c,a[f]));return d};$jscomp.array.of=function(a){return $jscomp.array.from(arguments)};\n$jscomp.array.entries=function(){return $jscomp.iteratorFromArray(this,function(a,b){return[a,b]})};$jscomp.array.installHelper_=function(a,b){!Array.prototype[a]&&Object.defineProperties&&Object.defineProperty&&Object.defineProperty(Array.prototype,a,{configurable:!0,enumerable:!1,writable:!0,value:b})};$jscomp.array.entries$install=function(){$jscomp.array.installHelper_(\"entries\",$jscomp.array.entries)};$jscomp.array.keys=function(){return $jscomp.iteratorFromArray(this,function(a){return a})};\n$jscomp.array.keys$install=function(){$jscomp.array.installHelper_(\"keys\",$jscomp.array.keys)};$jscomp.array.values=function(){return $jscomp.iteratorFromArray(this,function(a,b){return b})};$jscomp.array.values$install=function(){$jscomp.array.installHelper_(\"values\",$jscomp.array.values)};\n$jscomp.array.copyWithin=function(a,b,c){var d=this.length;a=Number(a);b=Number(b);c=Number(null!=c?c:d);if(a<b)for(c=Math.min(c,d);b<c;)b in this?this[a++]=this[b++]:(delete this[a++],b++);else for(c=Math.min(c,d+b-a),a+=c-b;c>b;)--c in this?this[--a]=this[c]:delete this[a];return this};$jscomp.array.copyWithin$install=function(){$jscomp.array.installHelper_(\"copyWithin\",$jscomp.array.copyWithin)};\n$jscomp.array.fill=function(a,b,c){var d=this.length||0;0>b&&(b=Math.max(0,d+b));if(null==c||c>d)c=d;c=Number(c);0>c&&(c=Math.max(0,d+c));for(b=Number(b||0);b<c;b++)this[b]=a;return this};$jscomp.array.fill$install=function(){$jscomp.array.installHelper_(\"fill\",$jscomp.array.fill)};$jscomp.array.find=function(a,b){return $jscomp.findInternal(this,a,b).v};$jscomp.array.find$install=function(){$jscomp.array.installHelper_(\"find\",$jscomp.array.find)};\n$jscomp.array.findIndex=function(a,b){return $jscomp.findInternal(this,a,b).i};$jscomp.array.findIndex$install=function(){$jscomp.array.installHelper_(\"findIndex\",$jscomp.array.findIndex)};$jscomp.ASSUME_NO_NATIVE_MAP=!1;\n$jscomp.Map$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_MAP)return!1;var a=$jscomp.global.Map;if(!a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a($jscomp.makeIterator([[b,\"s\"]]));if(\"s\"!=c.get(b)||1!=c.size||c.get({x:4})||c.set({x:4},\"t\")!=c||2!=c.size)return!1;var d=c.entries(),e=d.next();if(e.done||e.value[0]!=b||\"s\"!=e.value[1])return!1;e=d.next();return e.done||4!=e.value[0].x||\"t\"!=e.value[1]||!d.next().done?!1:!0}catch(f){return!1}};\n$jscomp.Map=function(a){this.data_={};this.head_=$jscomp.Map.createHead();this.size=0;if(a){a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)b=b.value,this.set(b[0],b[1])}};\n$jscomp.Map.prototype.set=function(a,b){var c=$jscomp.Map.maybeGetEntry(this,a);c.list||(c.list=this.data_[c.id]=[]);c.entry?c.entry.value=b:(c.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:a,value:b},c.list.push(c.entry),this.head_.previous.next=c.entry,this.head_.previous=c.entry,this.size++);return this};\n$jscomp.Map.prototype[\"delete\"]=function(a){a=$jscomp.Map.maybeGetEntry(this,a);return a.entry&&a.list?(a.list.splice(a.index,1),a.list.length||delete this.data_[a.id],a.entry.previous.next=a.entry.next,a.entry.next.previous=a.entry.previous,a.entry.head=null,this.size--,!0):!1};$jscomp.Map.prototype.clear=function(){this.data_={};this.head_=this.head_.previous=$jscomp.Map.createHead();this.size=0};$jscomp.Map.prototype.has=function(a){return!!$jscomp.Map.maybeGetEntry(this,a).entry};\n$jscomp.Map.prototype.get=function(a){return(a=$jscomp.Map.maybeGetEntry(this,a).entry)&&a.value};$jscomp.Map.prototype.entries=function(){return $jscomp.Map.makeIterator_(this,function(a){return[a.key,a.value]})};$jscomp.Map.prototype.keys=function(){return $jscomp.Map.makeIterator_(this,function(a){return a.key})};$jscomp.Map.prototype.values=function(){return $jscomp.Map.makeIterator_(this,function(a){return a.value})};\n$jscomp.Map.prototype.forEach=function(a,b){for(var c=this.entries(),d;!(d=c.next()).done;)d=d.value,a.call(b,d[1],d[0],this)};$jscomp.Map.maybeGetEntry=function(a,b){var c=$jscomp.Map.getId(b),d=a.data_[c];if(d&&Object.prototype.hasOwnProperty.call(a.data_,c))for(var e=0;e<d.length;e++){var f=d[e];if(b!==b&&f.key!==f.key||b===f.key)return{id:c,list:d,index:e,entry:f}}return{id:c,list:d,index:-1,entry:void 0}};\n$jscomp.Map.makeIterator_=function(a,b){var c=a.head_,d={next:function(){if(c){for(;c.head!=a.head_;)c=c.previous;for(;c.next!=c.head;)return c=c.next,{done:!1,value:b(c)};c=null}return{done:!0,value:void 0}}};$jscomp.initSymbol();$jscomp.initSymbolIterator();d[Symbol.iterator]=function(){return d};return d};$jscomp.Map.mapIndex_=0;$jscomp.Map.createHead=function(){var a={};return a.previous=a.next=a.head=a};\n$jscomp.Map.getId=function(a){if(!(a instanceof Object))return\"p_\"+a;if(!($jscomp.Map.idKey in a))try{$jscomp.Map.defineProperty(a,$jscomp.Map.idKey,{value:++$jscomp.Map.mapIndex_})}catch(b){}return $jscomp.Map.idKey in a?a[$jscomp.Map.idKey]:\"o_ \"+a};$jscomp.Map.defineProperty=Object.defineProperty?function(a,b,c){Object.defineProperty(a,b,{value:String(c)})}:function(a,b,c){a[b]=String(c)};$jscomp.Map.Entry=function(){};\n$jscomp.Map$install=function(){$jscomp.initSymbol();$jscomp.initSymbolIterator();$jscomp.Map$isConformant()?$jscomp.Map=$jscomp.global.Map:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map.prototype[Symbol.iterator]=$jscomp.Map.prototype.entries,$jscomp.initSymbol(),$jscomp.Map.idKey=Symbol(\"map-id-key\"),$jscomp.Map$install=function(){})};$jscomp.math=$jscomp.math||{};\n$jscomp.math.clz32=function(a){a=Number(a)>>>0;if(0===a)return 32;var b=0;0===(a&4294901760)&&(a<<=16,b+=16);0===(a&4278190080)&&(a<<=8,b+=8);0===(a&4026531840)&&(a<<=4,b+=4);0===(a&3221225472)&&(a<<=2,b+=2);0===(a&2147483648)&&b++;return b};$jscomp.math.imul=function(a,b){a=Number(a);b=Number(b);var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};$jscomp.math.sign=function(a){a=Number(a);return 0===a||isNaN(a)?a:0<a?1:-1};\n$jscomp.math.log10=function(a){return Math.log(a)/Math.LN10};$jscomp.math.log2=function(a){return Math.log(a)/Math.LN2};$jscomp.math.log1p=function(a){a=Number(a);if(.25>a&&-.25<a){for(var b=a,c=1,d=a,e=0,f=1;e!=d;)b*=a,f*=-1,d=(e=d)+f*b/++c;return d}return Math.log(1+a)};$jscomp.math.expm1=function(a){a=Number(a);if(.25>a&&-.25<a){for(var b=a,c=1,d=a,e=0;e!=d;)b*=a/++c,d=(e=d)+b;return d}return Math.exp(a)-1};$jscomp.math.cosh=function(a){a=Number(a);return(Math.exp(a)+Math.exp(-a))/2};\n$jscomp.math.sinh=function(a){a=Number(a);return 0===a?a:(Math.exp(a)-Math.exp(-a))/2};$jscomp.math.tanh=function(a){a=Number(a);if(0===a)return a;var b=Math.exp(-2*Math.abs(a)),b=(1-b)/(1+b);return 0>a?-b:b};$jscomp.math.acosh=function(a){a=Number(a);return Math.log(a+Math.sqrt(a*a-1))};$jscomp.math.asinh=function(a){a=Number(a);if(0===a)return a;var b=Math.log(Math.abs(a)+Math.sqrt(a*a+1));return 0>a?-b:b};\n$jscomp.math.atanh=function(a){a=Number(a);return($jscomp.math.log1p(a)-$jscomp.math.log1p(-a))/2};$jscomp.math.hypot=function(a,b,c){a=Number(a);b=Number(b);var d,e,f,g=Math.max(Math.abs(a),Math.abs(b));for(d=2;d<arguments.length;d++)g=Math.max(g,Math.abs(arguments[d]));if(1E100<g||1E-100>g){a/=g;b/=g;f=a*a+b*b;for(d=2;d<arguments.length;d++)e=Number(arguments[d])/g,f+=e*e;return Math.sqrt(f)*g}f=a*a+b*b;for(d=2;d<arguments.length;d++)e=Number(arguments[d]),f+=e*e;return Math.sqrt(f)};\n$jscomp.math.trunc=function(a){a=Number(a);if(isNaN(a)||Infinity===a||-Infinity===a||0===a)return a;var b=Math.floor(Math.abs(a));return 0>a?-b:b};$jscomp.math.cbrt=function(a){if(0===a)return a;a=Number(a);var b=Math.pow(Math.abs(a),1/3);return 0>a?-b:b};$jscomp.number=$jscomp.number||{};$jscomp.number.isFinite=function(a){return\"number\"!==typeof a?!1:!isNaN(a)&&Infinity!==a&&-Infinity!==a};$jscomp.number.isInteger=function(a){return $jscomp.number.isFinite(a)?a===Math.floor(a):!1};\n$jscomp.number.isNaN=function(a){return\"number\"===typeof a&&isNaN(a)};$jscomp.number.isSafeInteger=function(a){return $jscomp.number.isInteger(a)&&Math.abs(a)<=$jscomp.number.MAX_SAFE_INTEGER};$jscomp.number.EPSILON=function(){return Math.pow(2,-52)}();$jscomp.number.MAX_SAFE_INTEGER=function(){return 9007199254740991}();$jscomp.number.MIN_SAFE_INTEGER=function(){return-9007199254740991}();$jscomp.object=$jscomp.object||{};\n$jscomp.object.assign=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};$jscomp.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};$jscomp.ASSUME_NO_NATIVE_SET=!1;\n$jscomp.Set$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_SET)return!1;var a=$jscomp.global.Set;if(!a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a($jscomp.makeIterator([b]));if(!c.has(b)||1!=c.size||c.add(b)!=c||1!=c.size||c.add({x:4})!=c||2!=c.size)return!1;var d=c.entries(),e=d.next();if(e.done||e.value[0]!=b||e.value[1]!=b)return!1;e=d.next();return e.done||e.value[0]==b||4!=e.value[0].x||e.value[1]!=e.value[0]?!1:d.next().done}catch(f){return!1}};\n$jscomp.Set=function(a){this.map_=new $jscomp.Map;if(a){a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)this.add(b.value)}this.size=this.map_.size};$jscomp.Set.prototype.add=function(a){this.map_.set(a,a);this.size=this.map_.size;return this};$jscomp.Set.prototype[\"delete\"]=function(a){a=this.map_[\"delete\"](a);this.size=this.map_.size;return a};$jscomp.Set.prototype.clear=function(){this.map_.clear();this.size=0};$jscomp.Set.prototype.has=function(a){return this.map_.has(a)};\n$jscomp.Set.prototype.entries=function(){return this.map_.entries()};$jscomp.Set.prototype.values=function(){return this.map_.values()};$jscomp.Set.prototype.forEach=function(a,b){var c=this;this.map_.forEach(function(d){return a.call(b,d,d,c)})};$jscomp.Set$install=function(){$jscomp.Map$install();$jscomp.Set$isConformant()?$jscomp.Set=$jscomp.global.Set:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Set.prototype[Symbol.iterator]=$jscomp.Set.prototype.values,$jscomp.Set$install=function(){})};\n$jscomp.string=$jscomp.string||{};$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError(\"The 'this' value for String.prototype.\"+c+\" must not be null or undefined\");if(b instanceof RegExp)throw new TypeError(\"First argument to String.prototype.\"+c+\" must not be a regular expression\");return a+\"\"};\n$jscomp.string.fromCodePoint=function(a){for(var b=\"\",c=0;c<arguments.length;c++){var d=Number(arguments[c]);if(0>d||1114111<d||d!==Math.floor(d))throw new RangeError(\"invalid_code_point \"+d);65535>=d?b+=String.fromCharCode(d):(d-=65536,b+=String.fromCharCode(d>>>10&1023|55296),b+=String.fromCharCode(d&1023|56320))}return b};\n$jscomp.string.repeat=function(a){var b=$jscomp.checkStringArgs(this,null,\"repeat\");if(0>a||1342177279<a)throw new RangeError(\"Invalid count value\");a|=0;for(var c=\"\";a;)if(a&1&&(c+=b),a>>>=1)b+=b;return c};$jscomp.string.repeat$install=function(){String.prototype.repeat||(String.prototype.repeat=$jscomp.string.repeat)};\n$jscomp.string.codePointAt=function(a){var b=$jscomp.checkStringArgs(this,null,\"codePointAt\"),c=b.length;a=Number(a)||0;if(0<=a&&a<c){a|=0;var d=b.charCodeAt(a);if(55296>d||56319<d||a+1===c)return d;a=b.charCodeAt(a+1);return 56320>a||57343<a?d:1024*(d-55296)+a+9216}};$jscomp.string.codePointAt$install=function(){String.prototype.codePointAt||(String.prototype.codePointAt=$jscomp.string.codePointAt)};\n$jscomp.string.includes=function(a,b){return-1!==$jscomp.checkStringArgs(this,a,\"includes\").indexOf(a,b||0)};$jscomp.string.includes$install=function(){String.prototype.includes||(String.prototype.includes=$jscomp.string.includes)};$jscomp.string.startsWith=function(a,b){var c=$jscomp.checkStringArgs(this,a,\"startsWith\");a+=\"\";for(var d=c.length,e=a.length,f=Math.max(0,Math.min(b|0,c.length)),g=0;g<e&&f<d;)if(c[f++]!=a[g++])return!1;return g>=e};\n$jscomp.string.startsWith$install=function(){String.prototype.startsWith||(String.prototype.startsWith=$jscomp.string.startsWith)};$jscomp.string.endsWith=function(a,b){var c=$jscomp.checkStringArgs(this,a,\"endsWith\");a+=\"\";void 0===b&&(b=c.length);for(var d=Math.max(0,Math.min(b|0,c.length)),e=a.length;0<e&&0<d;)if(c[--d]!=a[--e])return!1;return 0>=e};$jscomp.string.endsWith$install=function(){String.prototype.endsWith||(String.prototype.endsWith=$jscomp.string.endsWith)};\nvar COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};goog.exportPath_=function(a,b,c){a=a.split(\".\");c=c||goog.global;a[0]in c||!c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]?c[d]:c[d]={}};\ngoog.define=function(a,b){var c=b;COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,a)?c=goog.global.CLOSURE_UNCOMPILED_DEFINES[a]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,a)&&(c=goog.global.CLOSURE_DEFINES[a]));goog.exportPath_(a,c)};goog.DEBUG=!0;goog.LOCALE=\"en\";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(a){if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(\".\")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};\ngoog.module.getInternal_=function(a){if(!COMPILED)return goog.isProvided_(a)?a in goog.loadedModules_?goog.loadedModules_[a]:goog.getObjectByName(a):null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_};\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\ngoog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={\"goog.module\":!0});\ngoog.getObjectByName=function(a,b){for(var c=a.split(\".\"),d=b||goog.global,e;e=c.shift();)if(goog.isDefAndNotNull(d[e]))d=d[e];else return null;return d};goog.globalize=function(a,b){var c=b||goog.global,d;for(d in a)c[d]=a[d]};goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e;a=a.replace(/\\\\/g,\"/\");for(var f=goog.dependencies_,g=0;e=b[g];g++)f.nameToPath[e]=a,f.pathIsModule[a]=!!d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0}};\ngoog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(a);if(goog.isProvided_(a))return goog.isInModuleLoader_()?goog.module.getInternal_(a):null;if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(b)return goog.writeScripts_(b),null}a=\"goog.require could not find: \"+a;goog.logToConsole_(a);throw Error(a);}};\ngoog.basePath=\"\";goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};goog.addSingletonGetter=function(a){a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;\ngoog.DEPENDENCIES_ENABLED&&(goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var a=goog.global.document.getElementsByTagName(\"SCRIPT\"),b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\"),d=-1==d?c.length:\nd;if(\"base.js\"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}},goog.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(a,b)&&(goog.dependencies_.written[a]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.importModule_=function(a){goog.importScript_(\"\",'goog.retrieveAndExecModule_(\"'+a+'\");')&&(goog.dependencies_.written[a]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&\ngoog.isDef(goog.global.JSON)?\"goog.loadModule(\"+goog.global.JSON.stringify(b+\"\\n//# sourceURL=\"+a+\"\\n\")+\");\":'goog.loadModule(function(exports) {\"use strict\";'+b+\"\\n;return exports});\\n//# sourceURL=\"+a+\"\\n\"},goog.loadQueuedModules_=function(){var a=goog.queuedModules_.length;if(0<a){var b=goog.queuedModules_;goog.queuedModules_=[];for(var c=0;c<a;c++)goog.maybeProcessDeferredPath_(b[c])}},goog.maybeProcessDeferredDep_=function(a){goog.isDeferredModule_(a)&&goog.allDepsAreAvailable_(a)&&(a=goog.getPathFromDeps_(a),\ngoog.maybeProcessDeferredPath_(goog.basePath+a))},goog.isDeferredModule_=function(a){return(a=goog.getPathFromDeps_(a))&&goog.dependencies_.pathIsModule[a]?goog.basePath+a in goog.dependencies_.deferred:!1},goog.allDepsAreAvailable_=function(a){if((a=goog.getPathFromDeps_(a))&&a in goog.dependencies_.requires)for(var b in goog.dependencies_.requires[a])if(!goog.isProvided_(b)&&!goog.isDeferredModule_(b))return!1;return!0},goog.maybeProcessDeferredPath_=function(a){if(a in goog.dependencies_.deferred){var b=\ngoog.dependencies_.deferred[a];delete goog.dependencies_.deferred[a];goog.globalEval(b)}},goog.loadModuleFromUrl=function(a){goog.retrieveAndExecModule_(a)},goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1};var c;if(goog.isFunction(a))c=a.call(goog.global,{});else if(goog.isString(a))c=goog.loadModuleFromSource_.call(goog.global,a);else throw Error(\"Invalid module definition\");var d=goog.moduleLoaderState_.moduleName;\nif(!goog.isString(d)||!d)throw Error('Invalid module name \"'+d+'\"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(c);goog.loadedModules_[d]=c}finally{goog.moduleLoaderState_=b}},goog.loadModuleFromSource_=function(a){eval(a);return{}},goog.writeScriptSrcNode_=function(a){goog.global.document.write('<script type=\"text/javascript\" src=\"'+a+'\">\\x3c/script>')},goog.appendScriptSrcNode_=function(a){var b=goog.global.document,\nc=b.createElement(\"script\");c.type=\"text/javascript\";c.src=a;c.defer=!1;c.async=!1;b.head.appendChild(c)},goog.writeScriptTag_=function(a,b){if(goog.inHtmlDocument_()){var c=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&\"complete\"==c.readyState){if(/\\bdeps.js$/.test(a))return!1;throw Error('Cannot write \"'+a+'\" after document load');}var d=goog.IS_OLD_IE_;void 0===b?d?(d=\" onreadystatechange='goog.onScriptLoad_(this, \"+ ++goog.lastNonModuleScriptIndex_+\")' \",c.write('<script type=\"text/javascript\" src=\"'+\na+'\"'+d+\">\\x3c/script>\")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(a):goog.writeScriptSrcNode_(a):c.write('<script type=\"text/javascript\">'+b+\"\\x3c/script>\");return!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(a,b){\"complete\"==a.readyState&&goog.lastNonModuleScriptIndex_==b&&goog.loadQueuedModules_();return!0},goog.writeScripts_=function(a){function b(a){if(!(a in e.written||a in e.visited)){e.visited[a]=!0;if(a in e.requires)for(var f in e.requires[a])if(!goog.isProvided_(f))if(f in\ne.nameToPath)b(e.nameToPath[f]);else throw Error(\"Undefined nameToPath for \"+f);a in d||(d[a]=!0,c.push(a))}}var c=[],d={},e=goog.dependencies_;b(a);for(a=0;a<c.length;a++){var f=c[a];goog.dependencies_.written[f]=!0}var g=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(a=0;a<c.length;a++)if(f=c[a])e.pathIsModule[f]?goog.importModule_(goog.basePath+f):goog.importScript_(goog.basePath+f);else throw goog.moduleLoaderState_=g,Error(\"Undefined script input\");goog.moduleLoaderState_=g},goog.getPathFromDeps_=\nfunction(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+\"deps.js\"));goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return b.responseText};\ngoog.retrieveAndExecModule_=function(a){if(!COMPILED){var b=a;a=goog.normalizePath_(a);var c=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,d=goog.loadFileSync_(a);if(null!=d)d=goog.wrapModule_(a,d),goog.IS_OLD_IE_?(goog.dependencies_.deferred[b]=d,goog.queuedModules_.push(b)):c(a,d);else throw Error(\"load of \"+a+\"failed\");}};\ngoog.typeOf=function(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return\"array\"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isString=function(a){return\"string\"==typeof a};\ngoog.isBoolean=function(a){return\"boolean\"==typeof a};goog.isNumber=function(a){return\"number\"==typeof a};goog.isFunction=function(a){return\"function\"==goog.typeOf(a)};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};\ngoog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(a.clone)return a.clone();var b=\"array\"==b?[]:{},c;for(c in a)b[c]=goog.cloneObject(a[c]);return b}return a};\ngoog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};\ngoog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};\ngoog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,\"JavaScript\");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_)if(goog.global.eval(\"var _evalTest_ = 1;\"),\"undefined\"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement(\"SCRIPT\");c.type=\"text/javascript\";c.defer=!1;c.appendChild(b.createTextNode(a));\nb.body.appendChild(c);b.body.removeChild(c)}}else throw Error(\"goog.globalEval not available\");};goog.evalWorksForGlobals_=null;goog.getCssName=function(a,b){var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split(\"-\");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join(\"-\")},d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(a){return a};return b?a+\"-\"+d(b):d(a)};\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[c].apply(a,g)}};\ngoog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];for(var f=!1,g=a.constructor;g;g=\ng.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error(\"goog.base called from a method of one name to a method of a different name\");};goog.scope=function(a){a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\ngoog.defineClass.createSealingConstructor_=function(a,b){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(b&&b.prototype&&b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return a;var c=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===c&&Object.seal(b);return b};return c}return a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_=\"goog_defineClass_legacy_unsealable\";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name=\"CustomError\";goog.string={};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:\"\\u00a0\"};goog.string.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(0,b.length))};\ngoog.string.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};goog.string.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.subs=function(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\s\\xa0]+/g,\" \").replace(/^\\s+|\\s+$/g,\"\")};\ngoog.string.isEmptyOrWhitespace=function(a){return/^[\\s\\xa0]*$/.test(a)};goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\t\\n\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};\ngoog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return\" \"==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&\" \"<=a&&\"~\">=a||\"\\u0080\"<=a&&\"\\ufffd\">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)+/g,\" \")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)/g,\"\\n\")};\ngoog.string.normalizeWhitespace=function(a){return a.replace(/\\xa0|\\s/g,\" \")};goog.string.normalizeSpaces=function(a){return a.replace(/\\xa0|[ \\t]+/g,\" \")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\t\\r\\n ]+/g,\" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,\"\")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};goog.string.trimLeft=function(a){return a.replace(/^[\\s\\xa0]+/,\"\")};\ngoog.string.trimRight=function(a){return a.replace(/[\\s\\xa0]+$/,\"\")};goog.string.caseInsensitiveCompare=function(a,b){var c=String(a).toLowerCase(),d=String(b).toLowerCase();return c<d?-1:c==d?0:1};\ngoog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\D+/g)};\ngoog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\.\\d+|\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\+/g,\" \"))};goog.string.newLineToBr=function(a,b){return a.replace(/(\\r\\n|\\r|\\n)/g,b?\"<br />\":\"<br>\")};\ngoog.string.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.AMP_RE_,\"&amp;\").replace(goog.string.LT_RE_,\"&lt;\").replace(goog.string.GT_RE_,\"&gt;\").replace(goog.string.QUOT_RE_,\"&quot;\").replace(goog.string.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.NULL_RE_,\"&#0;\"),goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,\"&#101;\"));else{if(!goog.string.ALL_RE_.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(goog.string.AMP_RE_,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(goog.string.LT_RE_,\n\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(goog.string.GT_RE_,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(goog.string.QUOT_RE_,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(goog.string.SINGLE_QUOTE_RE_,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(goog.string.NULL_RE_,\"&#0;\"));goog.string.DETECT_DOUBLE_ESCAPING&&-1!=a.indexOf(\"e\")&&(a=a.replace(goog.string.E_RE_,\"&#101;\"))}return a};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/\"/g;\ngoog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\\x00&<>\"'e]/:/[\\x00&<>\"']/;goog.string.unescapeEntities=function(a){return goog.string.contains(a,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};\ngoog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,\"&\")?goog.string.unescapeEntitiesUsingDom_(a,b):a};\ngoog.string.unescapeEntitiesUsingDom_=function(a,b){var c={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"'},d;d=b?b.createElement(\"div\"):goog.global.document.createElement(\"div\");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var g=c[a];if(g)return g;if(\"#\"==b.charAt(0)){var h=Number(\"0\"+b.substr(1));isNaN(h)||(g=String.fromCharCode(h))}g||(d.innerHTML=a+\" \",g=d.firstChild.nodeValue.slice(0,-1));return c[a]=g})};\ngoog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case \"amp\":return\"&\";case \"lt\":return\"<\";case \"gt\":return\">\";case \"quot\":return'\"';default:if(\"#\"==c.charAt(0)){var d=Number(\"0\"+c.substr(1));if(!isNaN(d))return String.fromCharCode(d)}return a}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};\ngoog.string.preserveSpaces=function(a){return a.replace(/(^|[\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+\"...\");c&&(a=goog.string.htmlEscape(a));return a};\ngoog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+\"...\"+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+\"...\"+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={\"\\x00\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"<\"};goog.string.jsEscapeCache_={\"'\":\"\\\\'\"};\ngoog.string.quote=function(a){a=String(a);for(var b=['\"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('\"');return b.join(\"\")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join(\"\")};\ngoog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b,c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b=\"\\\\x\",16>c||256<c)b+=\"0\"}else b=\"\\\\u\",4096>c&&(b+=\"0\");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=function(a,b){return-1!=a.indexOf(b)};\ngoog.string.caseInsensitiveContains=function(a,b){return goog.string.contains(a.toLowerCase(),b.toLowerCase())};goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),\"\");return a.replace(c,\"\")};\ngoog.string.removeAll=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(c,\"\")};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};\ngoog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(\".\");-1==c&&(c=a.length);return goog.string.repeat(\"0\",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?\"\":String(a)};goog.string.buildString=function(a){return Array.prototype.join.call(arguments,\"\")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};\ngoog.string.compareVersions=function(a,b){for(var c=0,d=goog.string.trim(String(a)).split(\".\"),e=goog.string.trim(String(b)).split(\".\"),f=Math.max(d.length,e.length),g=0;0==c&&g<f;g++){var h=d[g]||\"\",k=e[g]||\"\",l=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),p=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var m=l.exec(h)||[\"\",\"\",\"\"],n=p.exec(k)||[\"\",\"\",\"\"];if(0==m[0].length&&0==n[0].length)break;var c=0==m[1].length?0:parseInt(m[1],10),q=0==n[1].length?0:parseInt(n[1],10),c=goog.string.compareElements_(c,q)||goog.string.compareElements_(0==\nm[2].length,0==n[2].length)||goog.string.compareElements_(m[2],n[2])}while(0==c)}return c};goog.string.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++};\ngoog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\-([a-z])/g,function(a,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,\"-$1\").toLowerCase()};\ngoog.string.toTitleCase=function(a,b){var c=goog.isString(b)?goog.string.regExpEscape(b):\"\\\\s\";return a.replace(new RegExp(\"(^\"+(c?\"|[\"+c+\"]+\":\"\")+\")([a-z])\",\"g\"),function(a,b,c){return b+c.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};\ngoog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){b.unshift(a);goog.debug.Error.call(this,goog.string.subs.apply(null,b));b.shift();this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name=\"AssertionError\";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;\ngoog.asserts.doAssertFailure_=function(a,b,c,d){var e=\"Assertion failed\";if(c)var e=e+(\": \"+c),f=d;else a&&(e+=\": \"+a,f=b);a=new goog.asserts.AssertionError(\"\"+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_(\"\",null,b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+\" should not be enumerable in Object.prototype.\")};\ngoog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};var jspb={Map:function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_()}};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1])}this.arrClean=!0};\njspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray()}}}else{this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value])}this.arrClean=!0}return this.arr_};\njspb.Map.prototype.toObject=function(a,b){for(var c=this.toArray(),d=[],e=0;e<c.length;e++){var f=this.map_[c[e][0].toString()];this.wrapEntry_(f);var g=f.valueWrapper;g?(goog.asserts.assert(b),d.push([f.key,b(a,g)])):d.push([f.key,f.value])}return d};jspb.Map.fromObject=function(a,b,c){b=new jspb.Map([],b);for(var d=0;d<a.length;d++){var e=a[d][0],f=c(a[d][1]);b.set(e,f)}return b};jspb.Map.ArrayIteratorIterable_=function(a){this.idx_=0;this.arr_=a};\njspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};$jscomp.initSymbol();\"undefined\"!=typeof Symbol&&($jscomp.initSymbol(),$jscomp.initSymbolIterator(),jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1};\njspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value])}return a};jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)])}return new jspb.Map.ArrayIteratorIterable_(a)};\njspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return new jspb.Map.ArrayIteratorIterable_(a)};jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return new jspb.Map.ArrayIteratorIterable_(a)};\njspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this)}};jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};\njspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage()}};\njspb.Map.deserializeBinary=function(a,b,c,d,e,f){for(var g=void 0;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(goog.asserts.assert(e),g=new a.valueCtor_,d.call(b,g,e)):g=d.call(b))}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g)};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};\njspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=!1;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;\ngoog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};\ngoog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};\ngoog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,d=d-1;0<=d;--d)d in e&&b.call(c,e[d],d,a)};\ngoog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(\"\"):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};\ngoog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(\"\"):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};\ngoog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};\ngoog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};\ngoog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};\ngoog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};\ngoog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};\ngoog.array.findIndexRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,d=d-1;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};\ngoog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){var c=goog.array.indexOf(a,b),d;(d=0<=c)&&goog.array.removeAt(a,c);return d};\ngoog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};goog.array.concat=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};\ngoog.array.join=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};\ngoog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};\ngoog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?\"o\"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;for(var d={},e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};\ngoog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1,l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=0;c<a.length;c++)a[c]={index:c,value:a[c]};var d=b||goog.array.defaultCompare;goog.array.sort(a,function(a,b){return d(a.value,b.value)||a.index-b.index});for(c=0;c<a.length;c++)a[c]=a[c].value};\ngoog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};\ngoog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};\ngoog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};\ngoog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};\ngoog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192)for(var f=goog.array.slice(d,e,e+8192),f=goog.array.flatten.apply(null,f),g=0;g<f.length;g++)b.push(f[g]);else b.push(d)}return b};\ngoog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};\ngoog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){for(var c=b||Math.random,d=a.length-1;0<d;d--){var e=Math.floor(c()*(d+1)),f=a[d];a[d]=a[e];a[e]=f}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){for(var e=a.charCodeAt(d);255<e;)b[c++]=e&255,e>>=8;b[c++]=e}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b=\"\",c=0;c<a.length;c+=8192)var d=goog.array.slice(a,c,c+8192),b=b+String.fromCharCode.apply(null,d);return b};goog.crypt.byteArrayToHex=function(a){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};\ngoog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,\"Key string length must be multiple of 2\");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};\ngoog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};\ngoog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63)}else if(239<e&&365>e){var f=a[c++],g=a[c++],h=a[c++],e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023))}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63)}return b.join(\"\")};\ngoog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,\"XOR array lengths must match\");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:\"\"};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};\ngoog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(b,a)};\ngoog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=RegExp(\"(\\\\w[\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\",\"g\"),c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPod\")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPhone\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPod\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPad\")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPad\")};\ngoog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent(\"Linux\")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent(\"Windows\")};\ngoog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent(\"CrOS\")};\ngoog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b=\"\";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:\"0.0\"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,\".\")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,\".\"):\"10\"):goog.labs.userAgent.platform.isAndroid()?(b=/Android\\s+([^\\);]+)(\\)|;)/,\nb=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||\"\"};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.object={};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};\ngoog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};\ngoog.object.getValueByKeys=function(a,b){for(var c=goog.isArrayLike(b),d=c?b:arguments,c=c?0:1;c<d.length&&(a=a[d[c]],goog.isDef(a));c++);return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};\ngoog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key \"'+b+'\"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};goog.object.set=function(a,b,c){a[b]=c};\ngoog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};\ngoog.object.unsafeClone=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(goog.isFunction(a.clone))return a.clone();var b=\"array\"==b?[]:{},c;for(c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};\ngoog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error(\"Uneven number of arguments\");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};\ngoog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Opera\")||goog.labs.userAgent.util.matchUserAgent(\"OPR\")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")};goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Firefox\")};\ngoog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Safari\")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent(\"Android\"))};goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Coast\")};\ngoog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"iPad\")||goog.labs.userAgent.util.matchUserAgent(\"iPhone\"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\")};\ngoog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"Chrome\")||goog.labs.userAgent.util.matchUserAgent(\"CriOS\"))&&!goog.labs.userAgent.browser.matchOpera_()&&!goog.labs.userAgent.browser.matchEdge_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};\ngoog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;\ngoog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent(\"Silk\")};\ngoog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||\"\"}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);var b=goog.labs.userAgent.util.extractVersionTuples(b),c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a([\"Version\",\"Opera\",\"OPR\"]):goog.labs.userAgent.browser.isEdge()?\na([\"Edge\"]):goog.labs.userAgent.browser.isChrome()?a([\"Chrome\",\"CriOS\"]):(b=b[2])&&b[1]||\"\"};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};\ngoog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\\d\\.]*)/.exec(a);if(b&&b[1])return b[1];var b=\"\",c=/MSIE +([\\d\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\/(\\d.\\d)/.exec(a),\"7.0\"==c[1])if(a&&a[1])switch(a[1]){case \"4.0\":b=\"8.0\";break;case \"5.0\":b=\"9.0\";break;case \"6.0\":b=\"10.0\";break;case \"7.0\":b=\"11.0\"}else b=\"7.0\";else b=c[1];return b};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent(\"Presto\")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")};\ngoog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent(\"Gecko\")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};\ngoog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){var a=goog.labs.userAgent.util.extractVersionTuples(a),b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return\"Gecko\"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,\"Firefox\"):b[1];var a=a[0],c;if(a&&(c=a[2])&&(c=/Trident\\/([^\\s;]+)/.exec(c)))return c[1]}return\"\"};\ngoog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if(\"Edge\"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){var c=goog.array.find(a,function(a){return b==a[0]});return c&&c[1]||\"\"};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};\ngoog.userAgent.getNavigator=function(){return goog.global.navigator||null};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;\ngoog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent(\"Mobile\")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;\ngoog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigator();return a&&a.platform||\"\"};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;goog.userAgent.ASSUME_IPAD=!1;\ngoog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();\ngoog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigator();return!!a&&goog.string.contains(a.appVersion||\"\",\"X11\")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();\ngoog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.operaVersion_=function(){var a=goog.global.opera.version;try{return a()}catch(b){return a}};\ngoog.userAgent.determineVersion_=function(){if(goog.userAgent.OPERA&&goog.global.opera)return goog.userAgent.operaVersion_();var a=\"\",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:\"\");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),b>parseFloat(a))?String(b):a};\ngoog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\\/([\\d\\.]+)/.exec(a);if(goog.userAgent.IE)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\\/(\\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};goog.userAgent.VERSION=goog.userAgent.determineVersion_();\ngoog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.userAgent.isVersionOrHigherCache_[a]||(goog.userAgent.isVersionOrHigherCache_[a]=0<=goog.string.compareVersions(goog.userAgent.VERSION,a))};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;\ngoog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){var a=goog.global.document,b=goog.userAgent.getDocumentMode_();return a&&goog.userAgent.IE?b||(\"CSS1Compat\"==a.compatMode?parseInt(goog.userAgent.VERSION,10):5):void 0}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;\ngoog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;\ngoog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();\ngoog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();\ngoog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.byteToCharMap_=null;goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.byteToCharMapWebSafe_=null;goog.crypt.base64.ENCODED_VALS_BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+\"+/=\";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+\"-_.\";\ngoog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||\"function\"==typeof goog.global.btoa;goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&\"function\"==typeof goog.global.atob;\ngoog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),\"encodeByteArray takes an array as a parameter\");goog.crypt.base64.init_();for(var c=b?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_,d=[],e=0;e<a.length;e+=3){var f=a[e],g=e+1<a.length,h=g?a[e+1]:0,k=e+2<a.length,l=k?a[e+2]:0,p=f>>2,f=(f&3)<<4|h>>4,h=(h&15)<<2|l>>6,l=l&63;k||(l=64,g||(h=64));d.push(c[p],c[f],c[h],c[l])}return d.join(\"\")};\ngoog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c=\"\";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a)});return c};\ngoog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a)});return c};goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher(\"10\"),\"Browser does not support typed arrays\");var b=new Uint8Array(Math.ceil(3*a.length/4)),c=0;goog.crypt.base64.decodeStringInternal_(a,function(a){b[c++]=a});return b.subarray(0,c)};\ngoog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}};\ngoog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={};goog.crypt.base64.charToByteMap_={};goog.crypt.base64.byteToCharMapWebSafe_={};for(var a=0;a<goog.crypt.base64.ENCODED_VALS.length;a++)goog.crypt.base64.byteToCharMap_[a]=goog.crypt.base64.ENCODED_VALS.charAt(a),goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]]=a,goog.crypt.base64.byteToCharMapWebSafe_[a]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a),a>=goog.crypt.base64.ENCODED_VALS_BASE.length&&\n(goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)]=a)}};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;\njspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_=\"function\"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};jspb.Message.getFieldNumber_=function(a,b){return b-a.arrayIndexOffset_};\njspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=null;b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.initPivotAndExtensionObject_(a,d);a.convertedFloatingPointFields_={};jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(a.repeatedFields=e);if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[c]=\na.extensionObject_[c]||jspb.Message.EMPTY_LIST_SENTINEL_);if(f&&f.length)for(b=0;b<f.length;b++)jspb.Message.computeOneofCase(a,f[b])};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(a){return jspb.Message.ASSUME_LOCAL_ARRAYS?a instanceof Array:goog.isArray(a)};\njspb.Message.initPivotAndExtensionObject_=function(a,b){if(a.array.length){var c=a.array.length-1,d=a.array[c];if(d&&\"object\"==typeof d&&!jspb.Message.isArray_(d)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&d instanceof Uint8Array)){a.pivot_=jspb.Message.getFieldNumber_(a,c);a.extensionObject_=d;return}}-1<b?(a.pivot_=b,a.extensionObject_=null):a.pivot_=Number.MAX_VALUE};\njspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={})};jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};\njspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(null!=h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h}}};\njspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error(\"Message extension present that was generated without binary serialization support\");var h=d.call(a,g);if(null!=h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");\nelse f.binaryWriterFn.call(b,g.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];if(f){c=f.fieldInfo;if(!f.binaryReaderFn)throw Error(\"Deserializing extension whose generated code does not support binary format\");var g;c.isMessageType()?(g=new c.ctor,f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn)):g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g)}else b.skipField()};\njspb.Message.getField=function(a,b){if(b<a.pivot_){var c=jspb.Message.getIndex_(a,b),d=a.array[c];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[c]=[]:d}if(a.extensionObject_)return d=a.extensionObject_[b],d===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:d};\njspb.Message.getRepeatedField=function(a,b){if(b<a.pivot_){var c=jspb.Message.getIndex_(a,b),d=a.array[c];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[c]=[]:d}d=a.extensionObject_[b];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:d};jspb.Message.getOptionalFloatingPointField=function(a,b){var c=jspb.Message.getField(a,b);return null==c?c:+c};\njspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedFloatingPointFields_||(a.convertedFloatingPointFields_={});if(!a.convertedFloatingPointFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedFloatingPointFields_[b]=!0}return c};\njspb.Message.bytesAsB64=function(a){if(null==a||goog.isString(a))return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail(\"Cannot coerce to b64 string: \"+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if(goog.isString(a))return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail(\"Cannot coerce to Uint8Array: \"+goog.typeOf(a));return null};\njspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||goog.isString(a[0])?a:goog.array.map(a,jspb.Message.bytesAsB64)};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};\njspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \"+goog.typeOf(a)+\" expected \"+b)})}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;\njspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];if(!c)return c=jspb.Message.getField(a,b),c||(c=[],jspb.Message.setField(a,b,c)),a.wrappers_[b]=new jspb.Map(c,d)};jspb.Message.setField=function(a,b,c){b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[b]=c)};jspb.Message.setProto3IntField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};\njspb.Message.setProto3StringIntField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"0\")};jspb.Message.setProto3FloatField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setProto3BooleanField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,!1)};jspb.Message.setProto3StringField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"\")};jspb.Message.setProto3BytesField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"\")};\njspb.Message.setProto3EnumField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setFieldIgnoringDefault_=function(a,b,c,d){c!=d?jspb.Message.setField(a,b,c):a.array[jspb.Message.getIndex_(a,b)]=null};jspb.Message.addToRepeatedField=function(a,b,c,d){a=jspb.Message.getRepeatedField(a,b);void 0!=d?a.splice(d,0,c):a.push(c)};\njspb.Message.setOneofField=function(a,b,c,d){(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));jspb.Message.setField(a,b,d)};jspb.Message.computeOneofCase=function(a,b){for(var c,d,e=0;e<b.length;e++){var f=b[e],g=jspb.Message.getField(a,f);null!=g&&(c=f,d=g,jspb.Message.setField(a,f,void 0))}return c?(jspb.Message.setField(a,c,d),c):0};\njspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e)}return a.wrappers_[c]};jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};\njspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getRepeatedField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e}};jspb.Message.setWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};\njspb.Message.setOneofWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;jspb.Message.setOneofField(a,b,c,e)};jspb.Message.setRepeatedWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};\njspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getRepeatedField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};\njspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(goog.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray()}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()});\njspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return!this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};\njspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};\njspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error(\"Messages have different types.\");var c=a.toArray(),d=b.toArray(),e=[],f=0,g=c.length>d.length?c.length:d.length;a.getJsPbMessageId()&&(e[0]=a.getJsPbMessageId(),f=1);for(;f<g;f++)jspb.Message.compareFields(c[f],d[f])||(e[f]=d[f]);return new a.constructor(e)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};\njspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return!1;return!0};\njspb.Message.compareFields=function(a,b){if(a==b)return!0;if(!goog.isObject(a)||!goog.isObject(b))return goog.isNumber(a)&&isNaN(a)||goog.isNumber(b)&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){for(var d=void 0,e=void 0,f=Math.max(a.length,b.length),c=0;c<f;c++){var g=a[c],h=b[c];g&&g.constructor==\nObject&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return!1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error(\"Invalid type in JSPB array\");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};\njspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};\njspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,\"Copy source and target message should have the same type.\");for(var c=jspb.Message.clone(a),d=b.toArray(),e=c.toArray(),f=d.length=0;f<e.length;f++)d[f]=e[f];b.wrappers_=c.wrappers_;b.extensionObject_=c.extensionObject_};\njspb.Message.clone_=function(a){var b;if(goog.isArray(a)){for(var c=Array(a.length),d=0;d<a.length;d++)b=a[d],null!=b&&(c[d]=\"object\"==typeof b?jspb.Message.clone_(goog.asserts.assert(b)):b);return c}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);c={};for(d in a)b=a[d],null!=b&&(c[d]=\"object\"==typeof b?jspb.Message.clone_(goog.asserts.assert(b)):b);return c};jspb.Message.registerMessageType=function(a,b){jspb.Message.registry_[a]=b;b.messageId=a};\njspb.Message.registry_={};jspb.Message.messageSetExtensions={};jspb.Message.messageSetExtensionsBinary={};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};\njspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};\njspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){for(var c=a&65535,d=a>>>16,e=b&65535,f=b>>>16,g=c*e+65536*(c*f&65535)+65536*(d*e&65535),c=d*f+(c*f>>>16)+(d*e>>>16);4294967296<=g;)g-=4294967296,c+=1;return new jspb.arith.UInt64(g>>>0,c>>>0)};\njspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};\njspb.arith.UInt64.prototype.div=function(a){if(0==a)return[];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return[b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a=\"\",b=this;!b.zero();)var b=b.div(10),c=b[0],a=b[1].lo+a,b=c;\"\"==a&&(a=\"0\");return a};\njspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if(\"0\">a[d]||\"9\"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c)}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b};\njspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};\njspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return(a?\"-\":\"\")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&\"-\"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryConstants={};jspb.ConstBinaryMessage=function(){};jspb.BinaryMessage=function(){};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};\njspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};\njspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;\njspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH=\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a};\njspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c};\njspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;var c;0===a?0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648):isNaN(a)?(jspb.utils.split64High=0,jspb.utils.split64Low=2147483647):a>jspb.BinaryConstants.FLOAT32_MAX?(jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0):a<jspb.BinaryConstants.FLOAT32_MIN?(a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|a)>>>0):(c=Math.floor(Math.log(a)/\nMath.LN2),a*=Math.pow(2,-c),a=Math.round(a*jspb.BinaryConstants.TWO_TO_23)&8388607,jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|c+127<<23|a)>>>0)};\njspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0}else{var d=\nMath.floor(Math.log(a)/Math.LN2);1024==d&&(d=1023);c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c}};\njspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+a};\njspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinZigzag64=function(a,b){var c=a&1;a=(a>>>1|b<<31)>>>0;b>>>=1;c&&(a=a+1>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinFloat32=function(a,b){var c=2*(a>>31)+1,d=a>>>23&255,e=a&8388607;return 255==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-149)*e:c*Math.pow(2,d-150)*(e+Math.pow(2,23))};\njspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047,e=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*e:c*Math.pow(2,d-1075)*(e+jspb.BinaryConstants.TWO_TO_52)};jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS=\"0123456789abcdef\".split(\"\");\njspb.utils.joinUnsignedDecimalString=function(a,b){function c(a){for(var b=1E7,c=0;7>c;c++){var b=b/10,d=a/b%10>>>0;if(0!=d||h)h=!0,k+=g[d]}}if(2097151>=b)return\"\"+(jspb.BinaryConstants.TWO_TO_32*b+a);var d=(a>>>24|b<<8)>>>0&16777215,e=b>>16&65535,f=(a&16777215)+6777216*d+6710656*e,d=d+8147497*e,e=2*e;1E7<=f&&(d+=Math.floor(f/1E7),f%=1E7);1E7<=d&&(e+=Math.floor(d/1E7),d%=1E7);var g=jspb.utils.DIGITS,h=!1,k=\"\";(e||h)&&c(e);(d||h)&&c(d);(f||h)&&c(f);return k};\njspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);var d=jspb.utils.joinUnsignedDecimalString(a,b);return c?\"-\"+d:d};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(c,d):jspb.utils.joinUnsignedDecimalString(c,d)};\njspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};\njspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++){var d=a*e[c]+b;e[c]=d&255;b=d>>>8}}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255}goog.asserts.assert(0<a.length);var d=!1;\"-\"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,jspb.utils.DIGITS.indexOf(a[f]));d&&(c(),b(1,1));return goog.crypt.byteArrayToString(e)};jspb.utils.splitDecimalString=function(a){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a))};\njspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]=\"0\";b[1]=\"x\";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.DIGITS[d>>4];b[2*c+3]=jspb.utils.DIGITS[d&15]}return b.join(\"\")};jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert(\"0\"==a[0]);goog.asserts.assert(\"x\"==a[1]);for(var b=\"\",c=0;8>c;c++)var d=jspb.utils.DIGITS.indexOf(a[2*c+2]),e=jspb.utils.DIGITS.indexOf(a[2*c+3]),b=String.fromCharCode(16*d+e)+b;return b};\njspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinInt64(c,d):jspb.utils.joinUint64(c,d)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};\njspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7}if(a[b++]!=g)break;f++;b+=e}return f};\njspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};\njspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='\"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+=\"\\\\x\",16>a[c]&&(b+=\"0\"),b+=a[c].toString(16)}return b+'\"'};\njspb.utils.debugScalarToTextFormat=function(a){return goog.isString(a)?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error(\"Conversion error: string contains codepoint outside of byte range\");b[c]=d}return b};\njspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||a.constructor===Buffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail(\"Type not convertible to Uint8Array.\");return new Uint8Array(0)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};\njspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a)};\njspb.BinaryEncoder.prototype.writeSplitFixed64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);this.writeUint32(a);this.writeUint32(b)};\njspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a)};\njspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else{for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1)}};\njspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(a){this.writeZigzagVarint64(parseInt(a,10))};jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};\njspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};\njspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};\njspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeInt64String=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(+a>=-jspb.BinaryConstants.TWO_TO_63&&+a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low)};\njspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert(goog.isBoolean(a)||goog.isNumber(a));this.buffer_.push(a?1:0)};\njspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a)};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.buffer_.push(d);else if(2048>d)this.buffer_.push(d>>6|192),this.buffer_.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var e=a.charCodeAt(c+1);56320<=e&&57343>=e&&(d=1024*(d-55296)+e-56320+65536,this.buffer_.push(d>>18|240),this.buffer_.push(d>>12&63|128),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128),c++)}else this.buffer_.push(d>>\n12|224),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128)}return this.buffer_.length-b};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length};\njspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop(),b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++};\njspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[]};\njspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(a){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),a)};\njspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b)};\njspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail(\"Group field type not supported in writeAny()\");\nbreak;case d.MESSAGE:goog.asserts.fail(\"Message field type not supported in writeAny()\");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail(\"Invalid field type in writeAny()\")}};\njspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b))};\njspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b))};\njspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(b))};jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeInt32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(c>=-jspb.BinaryConstants.TWO_TO_31&&c<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32_(a,c)}};jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b))};\njspb.BinaryWriter.prototype.writeInt64String=function(a,b){if(null!=b){var c=jspb.arith.Int64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeUint32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(0<=c&&c<jspb.BinaryConstants.TWO_TO_32);this.writeUnsignedVarint32_(a,c)}};jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b))};\njspb.BinaryWriter.prototype.writeUint64String=function(a,b){if(null!=b){var c=jspb.arith.UInt64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b))};jspb.BinaryWriter.prototype.writeSint64String=function(a,b){null!=b&&(goog.asserts.assert(+b>=-jspb.BinaryConstants.TWO_TO_63&&+b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64String_(a,b))};\njspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b))};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b))};\njspb.BinaryWriter.prototype.writeFixed64String=function(a,b){if(null!=b){var c=jspb.arith.UInt64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b))};\njspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b))};jspb.BinaryWriter.prototype.writeSfixed64String=function(a,b){if(null!=b){var c=jspb.arith.Int64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};\njspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b))};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b))};jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert(goog.isBoolean(b)||goog.isNumber(b)),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b))};\njspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeString=function(a,b){if(null!=b){var c=this.beginDelimited_(a);this.encoder_.writeString(b);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writeBytes=function(a,b){if(null!=b){var c=jspb.utils.byteSourceToUint8Array(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(c.length);this.appendUint8Array_(c)}};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a))};\njspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b))};\njspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b))};jspb.BinaryWriter.prototype.writeRepeatedInt32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedInt64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedSint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64String_(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e)}};\njspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c])};jspb.BinaryWriter.prototype.writePackedInt32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedInt64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint64(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.Int64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint64(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.UInt64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedSint32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedSint64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint64(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedSint64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint64(parseInt(b[d],10));this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint32(b[c])}};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint64(b[c])}};\njspb.BinaryWriter.prototype.writePackedFixed64String=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++){var d=jspb.arith.UInt64.fromString(b[c]);this.encoder_.writeSplitFixed64(d.lo,d.hi)}}};\njspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt32(b[c])}};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt64(b[c])}};\njspb.BinaryWriter.prototype.writePackedSfixed64String=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt64String(b[c])}};jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFloat(b[c])}};\njspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeDouble(b[c])}};jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(b.length);for(var c=0;c<b.length;c++)this.encoder_.writeBool(b[c])}};\njspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeEnum(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFixedHash64(b[c])}};\njspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeVarintHash64(b[d]);this.endDelimited_(c)}};jspb.BinaryIterator=function(a,b,c){this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0;this.init_(a,b,c)};jspb.BinaryIterator.prototype.init_=function(a,b,c){a&&b&&(this.decoder_=a,this.nextMethod_=b);this.elements_=c||null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!this.decoder_&&!this.elements_;this.next()};jspb.BinaryIterator.instanceCache_=[];\njspb.BinaryIterator.alloc=function(a,b,c){if(jspb.BinaryIterator.instanceCache_.length){var d=jspb.BinaryIterator.instanceCache_.pop();d.init_(a,b,c);return d}return new jspb.BinaryIterator(a,b,c)};jspb.BinaryIterator.prototype.free=function(){this.clear();100>jspb.BinaryIterator.instanceCache_.length&&jspb.BinaryIterator.instanceCache_.push(this)};\njspb.BinaryIterator.prototype.clear=function(){this.decoder_&&this.decoder_.free();this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0};jspb.BinaryIterator.prototype.get=function(){return this.nextValue_};jspb.BinaryIterator.prototype.atEnd=function(){return this.atEnd_};\njspb.BinaryIterator.prototype.next=function(){var a=this.nextValue_;this.decoder_?this.decoder_.atEnd()?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.nextMethod_.call(this.decoder_):this.elements_&&(this.cursor_==this.elements_.length?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.elements_[this.cursor_++]);return a};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.tempHigh_=this.tempLow_=this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c)};\njspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};\njspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=goog.isDef(b)?b:0;this.end_=goog.isDef(c)?this.start_+c:this.bytes_.length;this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};\njspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};\njspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};\njspb.BinaryDecoder.prototype.readSplitVarint64_=function(){for(var a,b=0,c,d=0;4>d;d++)if(a=this.bytes_[this.cursor_++],b|=(a&127)<<7*d,128>a){this.tempLow_=b>>>0;this.tempHigh_=0;return}a=this.bytes_[this.cursor_++];b|=(a&127)<<28;c=0|(a&127)>>4;if(128>a)this.tempLow_=b>>>0,this.tempHigh_=c>>>0;else{for(d=0;5>d;d++)if(a=this.bytes_[this.cursor_++],c|=(a&127)<<7*d+3,128>a){this.tempLow_=b>>>0;this.tempHigh_=c>>>0;return}goog.asserts.fail(\"Failed to read varint, encoding is invalid.\");this.error_=\n!0}};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--};\njspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a,b=this.bytes_;a=b[this.cursor_+0];var c=a&127;if(128>a)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+1];c|=(a&127)<<7;if(128>a)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+2];c|=(a&127)<<14;if(128>a)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+3];c|=(a&127)<<21;if(128>a)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=\nthis.end_),c;a=b[this.cursor_+4];c|=(a&15)<<28;if(128>a)return this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;this.cursor_+=5;128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&goog.asserts.assert(!1);goog.asserts.assert(this.cursor_<=this.end_);return c};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};\njspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinUint64(this.tempLow_,this.tempHigh_)};\njspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinUnsignedDecimalString(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readSignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinInt64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinSignedDecimalString(this.tempLow_,this.tempHigh_)};\njspb.BinaryDecoder.prototype.readZigzagVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinZigzag64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readZigzagVarint64().toString()};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};\njspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8|c<<16|d<<24)>>>0};\njspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};jspb.BinaryDecoder.prototype.readUint64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUnsignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};\njspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};\njspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readInt64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinSignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};\njspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};\njspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[],e=\"\";c<a;){var f=b[c++];if(128>f)d.push(f);else if(192>f)continue;else if(224>f){var g=b[c++];d.push((f&31)<<6|g&63)}else if(240>f){var g=b[c++],h=b[c++];d.push((f&15)<<12|(g&63)<<6|h&63)}else if(248>f){var g=b[c++],h=b[c++],k=b[c++],f=(f&7)<<18|(g&63)<<12|(h&63)<<6|k&63,f=f-65536;d.push((f>>10&1023)+55296,(f&1023)+56320)}8192<=d.length&&(e+=String.fromCharCode.apply(null,d),d.length=0)}e+=goog.crypt.byteArrayToString(d);\nthis.cursor_=c;return e};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail(\"Invalid byte length!\"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};\njspb.BinaryDecoder.prototype.readVarintHash64=function(){this.readSplitVarint64_();return jspb.utils.joinHash64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6],a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];\njspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;\njspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};\njspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};\njspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a)};\njspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail(\"Decoder hit an error\"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3,a=a&7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail(\"Invalid wire type\"),\nthis.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return!0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};\njspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail(\"Invalid wire type for skipVarintField\"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"),this.skipField();else{var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a)}};\njspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"),this.skipField()):this.decoder_.advance(8)};\njspb.BinaryReader.prototype.skipGroup=function(){var a=[this.nextField_];do{if(!this.nextField()){goog.asserts.fail(\"Unmatched start-group tag: stream EOF\");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP)a.push(this.nextField_);else if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP&&this.nextField_!=a.pop()){goog.asserts.fail(\"Unmatched end-group tag\");this.error_=!0;break}}while(0<a.length)};\njspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail(\"Invalid wire encoding for field.\")}};\njspb.BinaryReader.prototype.registerReadCallback=function(a,b){goog.isNull(this.readCallbacks_)&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(!goog.isNull(this.readCallbacks_));a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};\njspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();\ncase b.GROUP:goog.asserts.fail(\"Group field type not supported in readAny()\");case b.MESSAGE:goog.asserts.fail(\"Message field type not supported in readAny()\");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();\ndefault:goog.asserts.fail(\"Invalid field type in readAny()\")}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32(),d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c)};\njspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"),this.error_=!0)};\njspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a,a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};\njspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};\njspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};\njspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};\njspb.BinaryReader.prototype.readSint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};\njspb.BinaryReader.prototype.readFixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32().toString()};\njspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};\njspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};\njspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};\njspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};\njspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);for(var b=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor()+b,c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};\njspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};\njspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};\njspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};\njspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};\njspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};\njspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.Export={};exports.Map=jspb.Map;exports.Message=jspb.Message;exports.BinaryReader=jspb.BinaryReader;exports.BinaryWriter=jspb.BinaryWriter;exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo;exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo;exports.exportSymbol=goog.exportSymbol;exports.inherits=goog.inherits;exports.object={extend:goog.object.extend};exports.typeOf=goog.typeOf;\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.google.protobuf.DescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.DescriptorProto.ExtensionRange', null, global);\ngoog.exportSymbol('proto.google.protobuf.DescriptorProto.ReservedRange', null, global);\ngoog.exportSymbol('proto.google.protobuf.EnumDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.EnumDescriptorProto.EnumReservedRange', null, global);\ngoog.exportSymbol('proto.google.protobuf.EnumOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.EnumValueDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.EnumValueOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.ExtensionRangeOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldDescriptorProto.Label', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldDescriptorProto.Type', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldOptions.CType', null, global);\ngoog.exportSymbol('proto.google.protobuf.FieldOptions.JSType', null, global);\ngoog.exportSymbol('proto.google.protobuf.FileDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.FileDescriptorSet', null, global);\ngoog.exportSymbol('proto.google.protobuf.FileOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.FileOptions.OptimizeMode', null, global);\ngoog.exportSymbol('proto.google.protobuf.GeneratedCodeInfo', null, global);\ngoog.exportSymbol('proto.google.protobuf.GeneratedCodeInfo.Annotation', null, global);\ngoog.exportSymbol('proto.google.protobuf.MessageOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.MethodDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.MethodOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.MethodOptions.IdempotencyLevel', null, global);\ngoog.exportSymbol('proto.google.protobuf.OneofDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.OneofOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.ServiceDescriptorProto', null, global);\ngoog.exportSymbol('proto.google.protobuf.ServiceOptions', null, global);\ngoog.exportSymbol('proto.google.protobuf.SourceCodeInfo', null, global);\ngoog.exportSymbol('proto.google.protobuf.SourceCodeInfo.Location', null, global);\ngoog.exportSymbol('proto.google.protobuf.UninterpretedOption', null, global);\ngoog.exportSymbol('proto.google.protobuf.UninterpretedOption.NamePart', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.FileDescriptorSet = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.FileDescriptorSet.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.FileDescriptorSet, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.FileDescriptorSet.displayName = 'proto.google.protobuf.FileDescriptorSet';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.FileDescriptorSet.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.FileDescriptorSet.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.FileDescriptorSet.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.FileDescriptorSet} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileDescriptorSet.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fileList: jspb.Message.toObjectList(msg.getFileList(),\n    proto.google.protobuf.FileDescriptorProto.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.FileDescriptorSet}\n */\nproto.google.protobuf.FileDescriptorSet.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.FileDescriptorSet;\n  return proto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.FileDescriptorSet} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.FileDescriptorSet}\n */\nproto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.google.protobuf.FileDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader);\n      msg.addFile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.FileDescriptorSet.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.FileDescriptorSet} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFileList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated FileDescriptorProto file = 1;\n * @return {!Array<!proto.google.protobuf.FileDescriptorProto>}\n */\nproto.google.protobuf.FileDescriptorSet.prototype.getFileList = function() {\n  return /** @type{!Array<!proto.google.protobuf.FileDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.FileDescriptorProto, 1));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.FileDescriptorProto>} value */\nproto.google.protobuf.FileDescriptorSet.prototype.setFileList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.FileDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.FileDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorSet.prototype.addFile = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.FileDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorSet.prototype.clearFileList = function() {\n  this.setFileList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.FileDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.FileDescriptorProto.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.FileDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.FileDescriptorProto.displayName = 'proto.google.protobuf.FileDescriptorProto';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.FileDescriptorProto.repeatedFields_ = [3,10,11,4,5,6,7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.FileDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.FileDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    pb_package: jspb.Message.getField(msg, 2),\n    dependencyList: jspb.Message.getRepeatedField(msg, 3),\n    publicDependencyList: jspb.Message.getRepeatedField(msg, 10),\n    weakDependencyList: jspb.Message.getRepeatedField(msg, 11),\n    messageTypeList: jspb.Message.toObjectList(msg.getMessageTypeList(),\n    proto.google.protobuf.DescriptorProto.toObject, includeInstance),\n    enumTypeList: jspb.Message.toObjectList(msg.getEnumTypeList(),\n    proto.google.protobuf.EnumDescriptorProto.toObject, includeInstance),\n    serviceList: jspb.Message.toObjectList(msg.getServiceList(),\n    proto.google.protobuf.ServiceDescriptorProto.toObject, includeInstance),\n    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),\n    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),\n    options: (f = msg.getOptions()) && proto.google.protobuf.FileOptions.toObject(includeInstance, f),\n    sourceCodeInfo: (f = msg.getSourceCodeInfo()) && proto.google.protobuf.SourceCodeInfo.toObject(includeInstance, f),\n    syntax: jspb.Message.getField(msg, 12)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.FileDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.FileDescriptorProto;\n  return proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.FileDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.FileDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPackage(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addDependency(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.addPublicDependency(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.addWeakDependency(value);\n      break;\n    case 4:\n      var value = new proto.google.protobuf.DescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader);\n      msg.addMessageType(value);\n      break;\n    case 5:\n      var value = new proto.google.protobuf.EnumDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader);\n      msg.addEnumType(value);\n      break;\n    case 6:\n      var value = new proto.google.protobuf.ServiceDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader);\n      msg.addService(value);\n      break;\n    case 7:\n      var value = new proto.google.protobuf.FieldDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);\n      msg.addExtension$(value);\n      break;\n    case 8:\n      var value = new proto.google.protobuf.FileOptions;\n      reader.readMessage(value,proto.google.protobuf.FileOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 9:\n      var value = new proto.google.protobuf.SourceCodeInfo;\n      reader.readMessage(value,proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader);\n      msg.setSourceCodeInfo(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSyntax(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.FileDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDependencyList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n  f = message.getPublicDependencyList();\n  if (f.length > 0) {\n    writer.writeRepeatedInt32(\n      10,\n      f\n    );\n  }\n  f = message.getWeakDependencyList();\n  if (f.length > 0) {\n    writer.writeRepeatedInt32(\n      11,\n      f\n    );\n  }\n  f = message.getMessageTypeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.google.protobuf.DescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getEnumTypeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getServiceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getExtensionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.google.protobuf.FileOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getSourceCodeInfo();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 12));\n  if (f != null) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string package = 2;\n * @return {string}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getPackage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setPackage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearPackage = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.hasPackage = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated string dependency = 3;\n * @return {!Array<string>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getDependencyList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/** @param {!Array<string>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setDependencyList = function(value) {\n  jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addDependency = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearDependencyList = function() {\n  this.setDependencyList([]);\n};\n\n\n/**\n * repeated int32 public_dependency = 10;\n * @return {!Array<number>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getPublicDependencyList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));\n};\n\n\n/** @param {!Array<number>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setPublicDependencyList = function(value) {\n  jspb.Message.setField(this, 10, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addPublicDependency = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 10, value, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearPublicDependencyList = function() {\n  this.setPublicDependencyList([]);\n};\n\n\n/**\n * repeated int32 weak_dependency = 11;\n * @return {!Array<number>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getWeakDependencyList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));\n};\n\n\n/** @param {!Array<number>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setWeakDependencyList = function(value) {\n  jspb.Message.setField(this, 11, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addWeakDependency = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 11, value, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearWeakDependencyList = function() {\n  this.setWeakDependencyList([]);\n};\n\n\n/**\n * repeated DescriptorProto message_type = 4;\n * @return {!Array<!proto.google.protobuf.DescriptorProto>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getMessageTypeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.DescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto, 4));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.DescriptorProto>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setMessageTypeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.DescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.DescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addMessageType = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.DescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearMessageTypeList = function() {\n  this.setMessageTypeList([]);\n};\n\n\n/**\n * repeated EnumDescriptorProto enum_type = 5;\n * @return {!Array<!proto.google.protobuf.EnumDescriptorProto>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getEnumTypeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto, 5));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.EnumDescriptorProto>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setEnumTypeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.EnumDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.EnumDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addEnumType = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.protobuf.EnumDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearEnumTypeList = function() {\n  this.setEnumTypeList([]);\n};\n\n\n/**\n * repeated ServiceDescriptorProto service = 6;\n * @return {!Array<!proto.google.protobuf.ServiceDescriptorProto>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getServiceList = function() {\n  return /** @type{!Array<!proto.google.protobuf.ServiceDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.ServiceDescriptorProto, 6));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.ServiceDescriptorProto>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setServiceList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.ServiceDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.ServiceDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addService = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.ServiceDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearServiceList = function() {\n  this.setServiceList([]);\n};\n\n\n/**\n * repeated FieldDescriptorProto extension = 7;\n * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getExtensionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 7));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setExtensionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.FieldDescriptorProto}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.addExtension$ = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearExtensionList = function() {\n  this.setExtensionList([]);\n};\n\n\n/**\n * optional FileOptions options = 8;\n * @return {?proto.google.protobuf.FileOptions}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.FileOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.FileOptions, 8));\n};\n\n\n/** @param {?proto.google.protobuf.FileOptions|undefined} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional SourceCodeInfo source_code_info = 9;\n * @return {?proto.google.protobuf.SourceCodeInfo}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getSourceCodeInfo = function() {\n  return /** @type{?proto.google.protobuf.SourceCodeInfo} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.SourceCodeInfo, 9));\n};\n\n\n/** @param {?proto.google.protobuf.SourceCodeInfo|undefined} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setSourceCodeInfo = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearSourceCodeInfo = function() {\n  this.setSourceCodeInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.hasSourceCodeInfo = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional string syntax = 12;\n * @return {string}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.getSyntax = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileDescriptorProto.prototype.setSyntax = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\nproto.google.protobuf.FileDescriptorProto.prototype.clearSyntax = function() {\n  jspb.Message.setField(this, 12, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileDescriptorProto.prototype.hasSyntax = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.DescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.DescriptorProto.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.DescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.DescriptorProto.displayName = 'proto.google.protobuf.DescriptorProto';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.DescriptorProto.repeatedFields_ = [2,6,3,4,5,8,9,10];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.DescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.DescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.DescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    fieldList: jspb.Message.toObjectList(msg.getFieldList(),\n    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),\n    extensionList: jspb.Message.toObjectList(msg.getExtensionList(),\n    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),\n    nestedTypeList: jspb.Message.toObjectList(msg.getNestedTypeList(),\n    proto.google.protobuf.DescriptorProto.toObject, includeInstance),\n    enumTypeList: jspb.Message.toObjectList(msg.getEnumTypeList(),\n    proto.google.protobuf.EnumDescriptorProto.toObject, includeInstance),\n    extensionRangeList: jspb.Message.toObjectList(msg.getExtensionRangeList(),\n    proto.google.protobuf.DescriptorProto.ExtensionRange.toObject, includeInstance),\n    oneofDeclList: jspb.Message.toObjectList(msg.getOneofDeclList(),\n    proto.google.protobuf.OneofDescriptorProto.toObject, includeInstance),\n    options: (f = msg.getOptions()) && proto.google.protobuf.MessageOptions.toObject(includeInstance, f),\n    reservedRangeList: jspb.Message.toObjectList(msg.getReservedRangeList(),\n    proto.google.protobuf.DescriptorProto.ReservedRange.toObject, includeInstance),\n    reservedNameList: jspb.Message.getRepeatedField(msg, 10)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.DescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.DescriptorProto;\n  return proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.DescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.DescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.google.protobuf.FieldDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);\n      msg.addField(value);\n      break;\n    case 6:\n      var value = new proto.google.protobuf.FieldDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);\n      msg.addExtension$(value);\n      break;\n    case 3:\n      var value = new proto.google.protobuf.DescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader);\n      msg.addNestedType(value);\n      break;\n    case 4:\n      var value = new proto.google.protobuf.EnumDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader);\n      msg.addEnumType(value);\n      break;\n    case 5:\n      var value = new proto.google.protobuf.DescriptorProto.ExtensionRange;\n      reader.readMessage(value,proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader);\n      msg.addExtensionRange(value);\n      break;\n    case 8:\n      var value = new proto.google.protobuf.OneofDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader);\n      msg.addOneofDecl(value);\n      break;\n    case 7:\n      var value = new proto.google.protobuf.MessageOptions;\n      reader.readMessage(value,proto.google.protobuf.MessageOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 9:\n      var value = new proto.google.protobuf.DescriptorProto.ReservedRange;\n      reader.readMessage(value,proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader);\n      msg.addReservedRange(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addReservedName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.DescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.DescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.DescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFieldList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getExtensionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getNestedTypeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.google.protobuf.DescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getEnumTypeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getExtensionRangeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter\n    );\n  }\n  f = message.getOneofDeclList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.google.protobuf.MessageOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getReservedRangeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      9,\n      f,\n      proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter\n    );\n  }\n  f = message.getReservedNameList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      10,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.DescriptorProto.ExtensionRange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.DescriptorProto.ExtensionRange.displayName = 'proto.google.protobuf.DescriptorProto.ExtensionRange';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.DescriptorProto.ExtensionRange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: jspb.Message.getField(msg, 1),\n    end: jspb.Message.getField(msg, 2),\n    options: (f = msg.getOptions()) && proto.google.protobuf.ExtensionRangeOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.DescriptorProto.ExtensionRange;\n  return proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEnd(value);\n      break;\n    case 3:\n      var value = new proto.google.protobuf.ExtensionRangeOptions;\n      reader.readMessage(value,proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 start = 1;\n * @return {number}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearStart = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasStart = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 end = 2;\n * @return {number}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getEnd = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearEnd = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasEnd = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional ExtensionRangeOptions options = 3;\n * @return {?proto.google.protobuf.ExtensionRangeOptions}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.ExtensionRangeOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.ExtensionRangeOptions, 3));\n};\n\n\n/** @param {?proto.google.protobuf.ExtensionRangeOptions|undefined} value */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.DescriptorProto.ReservedRange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.DescriptorProto.ReservedRange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.DescriptorProto.ReservedRange.displayName = 'proto.google.protobuf.DescriptorProto.ReservedRange';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.DescriptorProto.ReservedRange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: jspb.Message.getField(msg, 1),\n    end: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.DescriptorProto.ReservedRange;\n  return proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEnd(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start = 1;\n * @return {number}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearStart = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasStart = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 end = 2;\n * @return {number}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.getEnd = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearEnd = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasEnd = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.DescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.DescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated FieldDescriptorProto field = 2;\n * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getFieldList = function() {\n  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 2));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value */\nproto.google.protobuf.DescriptorProto.prototype.setFieldList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.FieldDescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.prototype.addField = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearFieldList = function() {\n  this.setFieldList([]);\n};\n\n\n/**\n * repeated FieldDescriptorProto extension = 6;\n * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getExtensionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 6));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value */\nproto.google.protobuf.DescriptorProto.prototype.setExtensionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.FieldDescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.prototype.addExtension$ = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearExtensionList = function() {\n  this.setExtensionList([]);\n};\n\n\n/**\n * repeated DescriptorProto nested_type = 3;\n * @return {!Array<!proto.google.protobuf.DescriptorProto>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getNestedTypeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.DescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto, 3));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.DescriptorProto>} value */\nproto.google.protobuf.DescriptorProto.prototype.setNestedTypeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.DescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.DescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.prototype.addNestedType = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.DescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearNestedTypeList = function() {\n  this.setNestedTypeList([]);\n};\n\n\n/**\n * repeated EnumDescriptorProto enum_type = 4;\n * @return {!Array<!proto.google.protobuf.EnumDescriptorProto>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getEnumTypeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto, 4));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.EnumDescriptorProto>} value */\nproto.google.protobuf.DescriptorProto.prototype.setEnumTypeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.EnumDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.EnumDescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.prototype.addEnumType = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.EnumDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearEnumTypeList = function() {\n  this.setEnumTypeList([]);\n};\n\n\n/**\n * repeated ExtensionRange extension_range = 5;\n * @return {!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getExtensionRangeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto.ExtensionRange, 5));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>} value */\nproto.google.protobuf.DescriptorProto.prototype.setExtensionRangeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}\n */\nproto.google.protobuf.DescriptorProto.prototype.addExtensionRange = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.protobuf.DescriptorProto.ExtensionRange, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearExtensionRangeList = function() {\n  this.setExtensionRangeList([]);\n};\n\n\n/**\n * repeated OneofDescriptorProto oneof_decl = 8;\n * @return {!Array<!proto.google.protobuf.OneofDescriptorProto>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getOneofDeclList = function() {\n  return /** @type{!Array<!proto.google.protobuf.OneofDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.OneofDescriptorProto, 8));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.OneofDescriptorProto>} value */\nproto.google.protobuf.DescriptorProto.prototype.setOneofDeclList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.OneofDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.OneofDescriptorProto}\n */\nproto.google.protobuf.DescriptorProto.prototype.addOneofDecl = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.protobuf.OneofDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearOneofDeclList = function() {\n  this.setOneofDeclList([]);\n};\n\n\n/**\n * optional MessageOptions options = 7;\n * @return {?proto.google.protobuf.MessageOptions}\n */\nproto.google.protobuf.DescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.MessageOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.MessageOptions, 7));\n};\n\n\n/** @param {?proto.google.protobuf.MessageOptions|undefined} value */\nproto.google.protobuf.DescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.DescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * repeated ReservedRange reserved_range = 9;\n * @return {!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getReservedRangeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto.ReservedRange, 9));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>} value */\nproto.google.protobuf.DescriptorProto.prototype.setReservedRangeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 9, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.DescriptorProto.ReservedRange=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}\n */\nproto.google.protobuf.DescriptorProto.prototype.addReservedRange = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.protobuf.DescriptorProto.ReservedRange, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearReservedRangeList = function() {\n  this.setReservedRangeList([]);\n};\n\n\n/**\n * repeated string reserved_name = 10;\n * @return {!Array<string>}\n */\nproto.google.protobuf.DescriptorProto.prototype.getReservedNameList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));\n};\n\n\n/** @param {!Array<string>} value */\nproto.google.protobuf.DescriptorProto.prototype.setReservedNameList = function(value) {\n  jspb.Message.setField(this, 10, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.DescriptorProto.prototype.addReservedName = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 10, value, opt_index);\n};\n\n\nproto.google.protobuf.DescriptorProto.prototype.clearReservedNameList = function() {\n  this.setReservedNameList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.ExtensionRangeOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.ExtensionRangeOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.ExtensionRangeOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.ExtensionRangeOptions.displayName = 'proto.google.protobuf.ExtensionRangeOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.ExtensionRangeOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.ExtensionRangeOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.ExtensionRangeOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.ExtensionRangeOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ExtensionRangeOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.ExtensionRangeOptions.extensions, proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.ExtensionRangeOptions}\n */\nproto.google.protobuf.ExtensionRangeOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.ExtensionRangeOptions;\n  return proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.ExtensionRangeOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.ExtensionRangeOptions}\n */\nproto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.ExtensionRangeOptions.extensionsBinary,\n        proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,\n        proto.google.protobuf.ExtensionRangeOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.ExtensionRangeOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.ExtensionRangeOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.ExtensionRangeOptions.extensionsBinary, proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension);\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.ExtensionRangeOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.ExtensionRangeOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.ExtensionRangeOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.ExtensionRangeOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.ExtensionRangeOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.ExtensionRangeOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.FieldDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.FieldDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.FieldDescriptorProto.displayName = 'proto.google.protobuf.FieldDescriptorProto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.FieldDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.FieldDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FieldDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    number: jspb.Message.getField(msg, 3),\n    label: jspb.Message.getField(msg, 4),\n    type: jspb.Message.getField(msg, 5),\n    typeName: jspb.Message.getField(msg, 6),\n    extendee: jspb.Message.getField(msg, 2),\n    defaultValue: jspb.Message.getField(msg, 7),\n    oneofIndex: jspb.Message.getField(msg, 9),\n    jsonName: jspb.Message.getField(msg, 10),\n    options: (f = msg.getOptions()) && proto.google.protobuf.FieldOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.FieldDescriptorProto}\n */\nproto.google.protobuf.FieldDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.FieldDescriptorProto;\n  return proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.FieldDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.FieldDescriptorProto}\n */\nproto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (reader.readEnum());\n      msg.setLabel(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTypeName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setExtendee(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDefaultValue(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOneofIndex(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJsonName(value);\n      break;\n    case 8:\n      var value = new proto.google.protobuf.FieldOptions;\n      reader.readMessage(value,proto.google.protobuf.FieldOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.FieldDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeInt32(\n      9,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.google.protobuf.FieldOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.FieldDescriptorProto.Type = {\n  TYPE_DOUBLE: 1,\n  TYPE_FLOAT: 2,\n  TYPE_INT64: 3,\n  TYPE_UINT64: 4,\n  TYPE_INT32: 5,\n  TYPE_FIXED64: 6,\n  TYPE_FIXED32: 7,\n  TYPE_BOOL: 8,\n  TYPE_STRING: 9,\n  TYPE_GROUP: 10,\n  TYPE_MESSAGE: 11,\n  TYPE_BYTES: 12,\n  TYPE_UINT32: 13,\n  TYPE_ENUM: 14,\n  TYPE_SFIXED32: 15,\n  TYPE_SFIXED64: 16,\n  TYPE_SINT32: 17,\n  TYPE_SINT64: 18\n};\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.FieldDescriptorProto.Label = {\n  LABEL_OPTIONAL: 1,\n  LABEL_REQUIRED: 2,\n  LABEL_REPEATED: 3\n};\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 number = 3;\n * @return {number}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setNumber = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearNumber = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasNumber = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Label label = 4;\n * @return {!proto.google.protobuf.FieldDescriptorProto.Label}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getLabel = function() {\n  return /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (jspb.Message.getFieldWithDefault(this, 4, 1));\n};\n\n\n/** @param {!proto.google.protobuf.FieldDescriptorProto.Label} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearLabel = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasLabel = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Type type = 5;\n * @return {!proto.google.protobuf.FieldDescriptorProto.Type}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getType = function() {\n  return /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (jspb.Message.getFieldWithDefault(this, 5, 1));\n};\n\n\n/** @param {!proto.google.protobuf.FieldDescriptorProto.Type} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearType = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasType = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string type_name = 6;\n * @return {string}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getTypeName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setTypeName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearTypeName = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasTypeName = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional string extendee = 2;\n * @return {string}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getExtendee = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setExtendee = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearExtendee = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasExtendee = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string default_value = 7;\n * @return {string}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getDefaultValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setDefaultValue = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearDefaultValue = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasDefaultValue = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional int32 oneof_index = 9;\n * @return {number}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getOneofIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setOneofIndex = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearOneofIndex = function() {\n  jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasOneofIndex = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional string json_name = 10;\n * @return {string}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getJsonName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setJsonName = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearJsonName = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasJsonName = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional FieldOptions options = 8;\n * @return {?proto.google.protobuf.FieldOptions}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.FieldOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.FieldOptions, 8));\n};\n\n\n/** @param {?proto.google.protobuf.FieldOptions|undefined} value */\nproto.google.protobuf.FieldDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.google.protobuf.FieldDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.OneofDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.OneofDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.OneofDescriptorProto.displayName = 'proto.google.protobuf.OneofDescriptorProto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.OneofDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.OneofDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.OneofDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    options: (f = msg.getOptions()) && proto.google.protobuf.OneofOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.OneofDescriptorProto}\n */\nproto.google.protobuf.OneofDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.OneofDescriptorProto;\n  return proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.OneofDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.OneofDescriptorProto}\n */\nproto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.google.protobuf.OneofOptions;\n      reader.readMessage(value,proto.google.protobuf.OneofOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.OneofDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.google.protobuf.OneofOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.OneofDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.OneofDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional OneofOptions options = 2;\n * @return {?proto.google.protobuf.OneofOptions}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.OneofOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.OneofOptions, 2));\n};\n\n\n/** @param {?proto.google.protobuf.OneofOptions|undefined} value */\nproto.google.protobuf.OneofDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.google.protobuf.OneofDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.OneofDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.EnumDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.EnumDescriptorProto.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.EnumDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.EnumDescriptorProto.displayName = 'proto.google.protobuf.EnumDescriptorProto';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.EnumDescriptorProto.repeatedFields_ = [2,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.EnumDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.EnumDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    valueList: jspb.Message.toObjectList(msg.getValueList(),\n    proto.google.protobuf.EnumValueDescriptorProto.toObject, includeInstance),\n    options: (f = msg.getOptions()) && proto.google.protobuf.EnumOptions.toObject(includeInstance, f),\n    reservedRangeList: jspb.Message.toObjectList(msg.getReservedRangeList(),\n    proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject, includeInstance),\n    reservedNameList: jspb.Message.getRepeatedField(msg, 5)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.EnumDescriptorProto}\n */\nproto.google.protobuf.EnumDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.EnumDescriptorProto;\n  return proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.EnumDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.EnumDescriptorProto}\n */\nproto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.google.protobuf.EnumValueDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader);\n      msg.addValue(value);\n      break;\n    case 3:\n      var value = new proto.google.protobuf.EnumOptions;\n      reader.readMessage(value,proto.google.protobuf.EnumOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 4:\n      var value = new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;\n      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader);\n      msg.addReservedRange(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addReservedName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.EnumDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValueList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.google.protobuf.EnumOptions.serializeBinaryToWriter\n    );\n  }\n  f = message.getReservedRangeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter\n    );\n  }\n  f = message.getReservedNameList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      5,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.displayName = 'proto.google.protobuf.EnumDescriptorProto.EnumReservedRange';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: jspb.Message.getField(msg, 1),\n    end: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;\n  return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEnd(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start = 1;\n * @return {number}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearStart = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasStart = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 end = 2;\n * @return {number}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getEnd = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearEnd = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasEnd = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.EnumDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated EnumValueDescriptorProto value = 2;\n * @return {!Array<!proto.google.protobuf.EnumValueDescriptorProto>}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.getValueList = function() {\n  return /** @type{!Array<!proto.google.protobuf.EnumValueDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumValueDescriptorProto, 2));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.EnumValueDescriptorProto>} value */\nproto.google.protobuf.EnumDescriptorProto.prototype.setValueList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.EnumValueDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.EnumValueDescriptorProto}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.addValue = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.EnumValueDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.prototype.clearValueList = function() {\n  this.setValueList([]);\n};\n\n\n/**\n * optional EnumOptions options = 3;\n * @return {?proto.google.protobuf.EnumOptions}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.EnumOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.EnumOptions, 3));\n};\n\n\n/** @param {?proto.google.protobuf.EnumOptions|undefined} value */\nproto.google.protobuf.EnumDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated EnumReservedRange reserved_range = 4;\n * @return {!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.getReservedRangeList = function() {\n  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, 4));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>} value */\nproto.google.protobuf.EnumDescriptorProto.prototype.setReservedRangeList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.addReservedRange = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, opt_index);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.prototype.clearReservedRangeList = function() {\n  this.setReservedRangeList([]);\n};\n\n\n/**\n * repeated string reserved_name = 5;\n * @return {!Array<string>}\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.getReservedNameList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));\n};\n\n\n/** @param {!Array<string>} value */\nproto.google.protobuf.EnumDescriptorProto.prototype.setReservedNameList = function(value) {\n  jspb.Message.setField(this, 5, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.EnumDescriptorProto.prototype.addReservedName = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n\n\nproto.google.protobuf.EnumDescriptorProto.prototype.clearReservedNameList = function() {\n  this.setReservedNameList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.EnumValueDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.EnumValueDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.EnumValueDescriptorProto.displayName = 'proto.google.protobuf.EnumValueDescriptorProto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.EnumValueDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.EnumValueDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumValueDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    number: jspb.Message.getField(msg, 2),\n    options: (f = msg.getOptions()) && proto.google.protobuf.EnumValueOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.EnumValueDescriptorProto}\n */\nproto.google.protobuf.EnumValueDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.EnumValueDescriptorProto;\n  return proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.EnumValueDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.EnumValueDescriptorProto}\n */\nproto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumber(value);\n      break;\n    case 3:\n      var value = new proto.google.protobuf.EnumValueOptions;\n      reader.readMessage(value,proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.EnumValueDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.EnumValueDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 number = 2;\n * @return {number}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.setNumber = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.EnumValueDescriptorProto.prototype.clearNumber = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.hasNumber = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional EnumValueOptions options = 3;\n * @return {?proto.google.protobuf.EnumValueOptions}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.EnumValueOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.EnumValueOptions, 3));\n};\n\n\n/** @param {?proto.google.protobuf.EnumValueOptions|undefined} value */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.google.protobuf.EnumValueDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumValueDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.ServiceDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.ServiceDescriptorProto.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.ServiceDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.ServiceDescriptorProto.displayName = 'proto.google.protobuf.ServiceDescriptorProto';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.ServiceDescriptorProto.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.ServiceDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.ServiceDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ServiceDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    methodList: jspb.Message.toObjectList(msg.getMethodList(),\n    proto.google.protobuf.MethodDescriptorProto.toObject, includeInstance),\n    options: (f = msg.getOptions()) && proto.google.protobuf.ServiceOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.ServiceDescriptorProto}\n */\nproto.google.protobuf.ServiceDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.ServiceDescriptorProto;\n  return proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.ServiceDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.ServiceDescriptorProto}\n */\nproto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = new proto.google.protobuf.MethodDescriptorProto;\n      reader.readMessage(value,proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader);\n      msg.addMethod(value);\n      break;\n    case 3:\n      var value = new proto.google.protobuf.ServiceOptions;\n      reader.readMessage(value,proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.ServiceDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMethodList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.google.protobuf.ServiceOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.ServiceDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.ServiceDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated MethodDescriptorProto method = 2;\n * @return {!Array<!proto.google.protobuf.MethodDescriptorProto>}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.getMethodList = function() {\n  return /** @type{!Array<!proto.google.protobuf.MethodDescriptorProto>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.MethodDescriptorProto, 2));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.MethodDescriptorProto>} value */\nproto.google.protobuf.ServiceDescriptorProto.prototype.setMethodList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.MethodDescriptorProto=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.MethodDescriptorProto}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.addMethod = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.MethodDescriptorProto, opt_index);\n};\n\n\nproto.google.protobuf.ServiceDescriptorProto.prototype.clearMethodList = function() {\n  this.setMethodList([]);\n};\n\n\n/**\n * optional ServiceOptions options = 3;\n * @return {?proto.google.protobuf.ServiceOptions}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.ServiceOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.ServiceOptions, 3));\n};\n\n\n/** @param {?proto.google.protobuf.ServiceOptions|undefined} value */\nproto.google.protobuf.ServiceDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.google.protobuf.ServiceDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.ServiceDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.MethodDescriptorProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.MethodDescriptorProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.MethodDescriptorProto.displayName = 'proto.google.protobuf.MethodDescriptorProto';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.MethodDescriptorProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.MethodDescriptorProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MethodDescriptorProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getField(msg, 1),\n    inputType: jspb.Message.getField(msg, 2),\n    outputType: jspb.Message.getField(msg, 3),\n    options: (f = msg.getOptions()) && proto.google.protobuf.MethodOptions.toObject(includeInstance, f),\n    clientStreaming: jspb.Message.getFieldWithDefault(msg, 5, false),\n    serverStreaming: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.MethodDescriptorProto}\n */\nproto.google.protobuf.MethodDescriptorProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.MethodDescriptorProto;\n  return proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.MethodDescriptorProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.MethodDescriptorProto}\n */\nproto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInputType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOutputType(value);\n      break;\n    case 4:\n      var value = new proto.google.protobuf.MethodOptions;\n      reader.readMessage(value,proto.google.protobuf.MethodOptions.deserializeBinaryFromReader);\n      msg.setOptions(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setClientStreaming(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setServerStreaming(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.MethodDescriptorProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getOptions();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.google.protobuf.MethodOptions.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearName = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasName = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string input_type = 2;\n * @return {string}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getInputType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setInputType = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearInputType = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasInputType = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string output_type = 3;\n * @return {string}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getOutputType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setOutputType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearOutputType = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasOutputType = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional MethodOptions options = 4;\n * @return {?proto.google.protobuf.MethodOptions}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getOptions = function() {\n  return /** @type{?proto.google.protobuf.MethodOptions} */ (\n    jspb.Message.getWrapperField(this, proto.google.protobuf.MethodOptions, 4));\n};\n\n\n/** @param {?proto.google.protobuf.MethodOptions|undefined} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setOptions = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearOptions = function() {\n  this.setOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasOptions = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bool client_streaming = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getClientStreaming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setClientStreaming = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearClientStreaming = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasClientStreaming = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bool server_streaming = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.getServerStreaming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MethodDescriptorProto.prototype.setServerStreaming = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.google.protobuf.MethodDescriptorProto.prototype.clearServerStreaming = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodDescriptorProto.prototype.hasServerStreaming = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.FileOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.FileOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.FileOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.FileOptions.displayName = 'proto.google.protobuf.FileOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.FileOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.FileOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.FileOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.FileOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    javaPackage: jspb.Message.getField(msg, 1),\n    javaOuterClassname: jspb.Message.getField(msg, 8),\n    javaMultipleFiles: jspb.Message.getFieldWithDefault(msg, 10, false),\n    javaGenerateEqualsAndHash: jspb.Message.getField(msg, 20),\n    javaStringCheckUtf8: jspb.Message.getFieldWithDefault(msg, 27, false),\n    optimizeFor: jspb.Message.getFieldWithDefault(msg, 9, 1),\n    goPackage: jspb.Message.getField(msg, 11),\n    ccGenericServices: jspb.Message.getFieldWithDefault(msg, 16, false),\n    javaGenericServices: jspb.Message.getFieldWithDefault(msg, 17, false),\n    pyGenericServices: jspb.Message.getFieldWithDefault(msg, 18, false),\n    phpGenericServices: jspb.Message.getFieldWithDefault(msg, 42, false),\n    deprecated: jspb.Message.getFieldWithDefault(msg, 23, false),\n    ccEnableArenas: jspb.Message.getFieldWithDefault(msg, 31, false),\n    objcClassPrefix: jspb.Message.getField(msg, 36),\n    csharpNamespace: jspb.Message.getField(msg, 37),\n    swiftPrefix: jspb.Message.getField(msg, 39),\n    phpClassPrefix: jspb.Message.getField(msg, 40),\n    phpNamespace: jspb.Message.getField(msg, 41),\n    phpMetadataNamespace: jspb.Message.getField(msg, 44),\n    rubyPackage: jspb.Message.getField(msg, 45),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.FileOptions.extensions, proto.google.protobuf.FileOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.FileOptions}\n */\nproto.google.protobuf.FileOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.FileOptions;\n  return proto.google.protobuf.FileOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.FileOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.FileOptions}\n */\nproto.google.protobuf.FileOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJavaPackage(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJavaOuterClassname(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setJavaMultipleFiles(value);\n      break;\n    case 20:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setJavaGenerateEqualsAndHash(value);\n      break;\n    case 27:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setJavaStringCheckUtf8(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (reader.readEnum());\n      msg.setOptimizeFor(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGoPackage(value);\n      break;\n    case 16:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCcGenericServices(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setJavaGenericServices(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPyGenericServices(value);\n      break;\n    case 42:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPhpGenericServices(value);\n      break;\n    case 23:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 31:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCcEnableArenas(value);\n      break;\n    case 36:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setObjcClassPrefix(value);\n      break;\n    case 37:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCsharpNamespace(value);\n      break;\n    case 39:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSwiftPrefix(value);\n      break;\n    case 40:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPhpClassPrefix(value);\n      break;\n    case 41:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPhpNamespace(value);\n      break;\n    case 44:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPhpMetadataNamespace(value);\n      break;\n    case 45:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRubyPackage(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.FileOptions.extensionsBinary,\n        proto.google.protobuf.FileOptions.prototype.getExtension,\n        proto.google.protobuf.FileOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.FileOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.FileOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.FileOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FileOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));\n  if (f != null) {\n    writer.writeBool(\n      20,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));\n  if (f != null) {\n    writer.writeBool(\n      27,\n      f\n    );\n  }\n  f = /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));\n  if (f != null) {\n    writer.writeBool(\n      16,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));\n  if (f != null) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));\n  if (f != null) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 42));\n  if (f != null) {\n    writer.writeBool(\n      42,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));\n  if (f != null) {\n    writer.writeBool(\n      23,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 31));\n  if (f != null) {\n    writer.writeBool(\n      31,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 36));\n  if (f != null) {\n    writer.writeString(\n      36,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 37));\n  if (f != null) {\n    writer.writeString(\n      37,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 39));\n  if (f != null) {\n    writer.writeString(\n      39,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 40));\n  if (f != null) {\n    writer.writeString(\n      40,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 41));\n  if (f != null) {\n    writer.writeString(\n      41,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 44));\n  if (f != null) {\n    writer.writeString(\n      44,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 45));\n  if (f != null) {\n    writer.writeString(\n      45,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.FileOptions.extensionsBinary, proto.google.protobuf.FileOptions.prototype.getExtension);\n};\n\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.FileOptions.OptimizeMode = {\n  SPEED: 1,\n  CODE_SIZE: 2,\n  LITE_RUNTIME: 3\n};\n\n/**\n * optional string java_package = 1;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaPackage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setJavaPackage = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaPackage = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaPackage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string java_outer_classname = 8;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaOuterClassname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setJavaOuterClassname = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaOuterClassname = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaOuterClassname = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional bool java_multiple_files = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaMultipleFiles = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setJavaMultipleFiles = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaMultipleFiles = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaMultipleFiles = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional bool java_generate_equals_and_hash = 20;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaGenerateEqualsAndHash = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setJavaGenerateEqualsAndHash = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaGenerateEqualsAndHash = function() {\n  jspb.Message.setField(this, 20, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaGenerateEqualsAndHash = function() {\n  return jspb.Message.getField(this, 20) != null;\n};\n\n\n/**\n * optional bool java_string_check_utf8 = 27;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaStringCheckUtf8 = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 27, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setJavaStringCheckUtf8 = function(value) {\n  jspb.Message.setField(this, 27, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaStringCheckUtf8 = function() {\n  jspb.Message.setField(this, 27, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaStringCheckUtf8 = function() {\n  return jspb.Message.getField(this, 27) != null;\n};\n\n\n/**\n * optional OptimizeMode optimize_for = 9;\n * @return {!proto.google.protobuf.FileOptions.OptimizeMode}\n */\nproto.google.protobuf.FileOptions.prototype.getOptimizeFor = function() {\n  return /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (jspb.Message.getFieldWithDefault(this, 9, 1));\n};\n\n\n/** @param {!proto.google.protobuf.FileOptions.OptimizeMode} value */\nproto.google.protobuf.FileOptions.prototype.setOptimizeFor = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearOptimizeFor = function() {\n  jspb.Message.setField(this, 9, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasOptimizeFor = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional string go_package = 11;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getGoPackage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setGoPackage = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearGoPackage = function() {\n  jspb.Message.setField(this, 11, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasGoPackage = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional bool cc_generic_services = 16;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getCcGenericServices = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setCcGenericServices = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearCcGenericServices = function() {\n  jspb.Message.setField(this, 16, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasCcGenericServices = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n/**\n * optional bool java_generic_services = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getJavaGenericServices = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setJavaGenericServices = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearJavaGenericServices = function() {\n  jspb.Message.setField(this, 17, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasJavaGenericServices = function() {\n  return jspb.Message.getField(this, 17) != null;\n};\n\n\n/**\n * optional bool py_generic_services = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getPyGenericServices = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setPyGenericServices = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearPyGenericServices = function() {\n  jspb.Message.setField(this, 18, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasPyGenericServices = function() {\n  return jspb.Message.getField(this, 18) != null;\n};\n\n\n/**\n * optional bool php_generic_services = 42;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getPhpGenericServices = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 42, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setPhpGenericServices = function(value) {\n  jspb.Message.setField(this, 42, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearPhpGenericServices = function() {\n  jspb.Message.setField(this, 42, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasPhpGenericServices = function() {\n  return jspb.Message.getField(this, 42) != null;\n};\n\n\n/**\n * optional bool deprecated = 23;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 23, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 23, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 23) != null;\n};\n\n\n/**\n * optional bool cc_enable_arenas = 31;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FileOptions.prototype.getCcEnableArenas = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 31, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FileOptions.prototype.setCcEnableArenas = function(value) {\n  jspb.Message.setField(this, 31, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearCcEnableArenas = function() {\n  jspb.Message.setField(this, 31, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasCcEnableArenas = function() {\n  return jspb.Message.getField(this, 31) != null;\n};\n\n\n/**\n * optional string objc_class_prefix = 36;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getObjcClassPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setObjcClassPrefix = function(value) {\n  jspb.Message.setField(this, 36, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearObjcClassPrefix = function() {\n  jspb.Message.setField(this, 36, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasObjcClassPrefix = function() {\n  return jspb.Message.getField(this, 36) != null;\n};\n\n\n/**\n * optional string csharp_namespace = 37;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getCsharpNamespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setCsharpNamespace = function(value) {\n  jspb.Message.setField(this, 37, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearCsharpNamespace = function() {\n  jspb.Message.setField(this, 37, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasCsharpNamespace = function() {\n  return jspb.Message.getField(this, 37) != null;\n};\n\n\n/**\n * optional string swift_prefix = 39;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getSwiftPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setSwiftPrefix = function(value) {\n  jspb.Message.setField(this, 39, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearSwiftPrefix = function() {\n  jspb.Message.setField(this, 39, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasSwiftPrefix = function() {\n  return jspb.Message.getField(this, 39) != null;\n};\n\n\n/**\n * optional string php_class_prefix = 40;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getPhpClassPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setPhpClassPrefix = function(value) {\n  jspb.Message.setField(this, 40, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearPhpClassPrefix = function() {\n  jspb.Message.setField(this, 40, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasPhpClassPrefix = function() {\n  return jspb.Message.getField(this, 40) != null;\n};\n\n\n/**\n * optional string php_namespace = 41;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getPhpNamespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setPhpNamespace = function(value) {\n  jspb.Message.setField(this, 41, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearPhpNamespace = function() {\n  jspb.Message.setField(this, 41, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasPhpNamespace = function() {\n  return jspb.Message.getField(this, 41) != null;\n};\n\n\n/**\n * optional string php_metadata_namespace = 44;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getPhpMetadataNamespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setPhpMetadataNamespace = function(value) {\n  jspb.Message.setField(this, 44, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearPhpMetadataNamespace = function() {\n  jspb.Message.setField(this, 44, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasPhpMetadataNamespace = function() {\n  return jspb.Message.getField(this, 44) != null;\n};\n\n\n/**\n * optional string ruby_package = 45;\n * @return {string}\n */\nproto.google.protobuf.FileOptions.prototype.getRubyPackage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.FileOptions.prototype.setRubyPackage = function(value) {\n  jspb.Message.setField(this, 45, value);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearRubyPackage = function() {\n  jspb.Message.setField(this, 45, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FileOptions.prototype.hasRubyPackage = function() {\n  return jspb.Message.getField(this, 45) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.FileOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.FileOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.FileOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.FileOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.FileOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.FileOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.MessageOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.MessageOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.MessageOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.MessageOptions.displayName = 'proto.google.protobuf.MessageOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.MessageOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.MessageOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.MessageOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.MessageOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MessageOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    messageSetWireFormat: jspb.Message.getFieldWithDefault(msg, 1, false),\n    noStandardDescriptorAccessor: jspb.Message.getFieldWithDefault(msg, 2, false),\n    deprecated: jspb.Message.getFieldWithDefault(msg, 3, false),\n    mapEntry: jspb.Message.getField(msg, 7),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.MessageOptions.extensions, proto.google.protobuf.MessageOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.MessageOptions}\n */\nproto.google.protobuf.MessageOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.MessageOptions;\n  return proto.google.protobuf.MessageOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.MessageOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.MessageOptions}\n */\nproto.google.protobuf.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMessageSetWireFormat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoStandardDescriptorAccessor(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMapEntry(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.MessageOptions.extensionsBinary,\n        proto.google.protobuf.MessageOptions.prototype.getExtension,\n        proto.google.protobuf.MessageOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.MessageOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.MessageOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.MessageOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MessageOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.MessageOptions.extensionsBinary, proto.google.protobuf.MessageOptions.prototype.getExtension);\n};\n\n\n/**\n * optional bool message_set_wire_format = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.getMessageSetWireFormat = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MessageOptions.prototype.setMessageSetWireFormat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.MessageOptions.prototype.clearMessageSetWireFormat = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.hasMessageSetWireFormat = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool no_standard_descriptor_accessor = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.getNoStandardDescriptorAccessor = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MessageOptions.prototype.setNoStandardDescriptorAccessor = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.MessageOptions.prototype.clearNoStandardDescriptorAccessor = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.hasNoStandardDescriptorAccessor = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool deprecated = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MessageOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.MessageOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool map_entry = 7;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.getMapEntry = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MessageOptions.prototype.setMapEntry = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.google.protobuf.MessageOptions.prototype.clearMapEntry = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MessageOptions.prototype.hasMapEntry = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.MessageOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.MessageOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.MessageOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.MessageOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.MessageOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.MessageOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.FieldOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.FieldOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.FieldOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.FieldOptions.displayName = 'proto.google.protobuf.FieldOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.FieldOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.FieldOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.FieldOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.FieldOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FieldOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ctype: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    packed: jspb.Message.getField(msg, 2),\n    jstype: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    lazy: jspb.Message.getFieldWithDefault(msg, 5, false),\n    deprecated: jspb.Message.getFieldWithDefault(msg, 3, false),\n    weak: jspb.Message.getFieldWithDefault(msg, 10, false),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.FieldOptions.extensions, proto.google.protobuf.FieldOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.FieldOptions}\n */\nproto.google.protobuf.FieldOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.FieldOptions;\n  return proto.google.protobuf.FieldOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.FieldOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.FieldOptions}\n */\nproto.google.protobuf.FieldOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.google.protobuf.FieldOptions.CType} */ (reader.readEnum());\n      msg.setCtype(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPacked(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (reader.readEnum());\n      msg.setJstype(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLazy(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setWeak(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.FieldOptions.extensionsBinary,\n        proto.google.protobuf.FieldOptions.prototype.getExtension,\n        proto.google.protobuf.FieldOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.FieldOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.FieldOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.FieldOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.FieldOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!proto.google.protobuf.FieldOptions.CType} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.FieldOptions.extensionsBinary, proto.google.protobuf.FieldOptions.prototype.getExtension);\n};\n\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.FieldOptions.CType = {\n  STRING: 0,\n  CORD: 1,\n  STRING_PIECE: 2\n};\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.FieldOptions.JSType = {\n  JS_NORMAL: 0,\n  JS_STRING: 1,\n  JS_NUMBER: 2\n};\n\n/**\n * optional CType ctype = 1;\n * @return {!proto.google.protobuf.FieldOptions.CType}\n */\nproto.google.protobuf.FieldOptions.prototype.getCtype = function() {\n  return /** @type {!proto.google.protobuf.FieldOptions.CType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.google.protobuf.FieldOptions.CType} value */\nproto.google.protobuf.FieldOptions.prototype.setCtype = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearCtype = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasCtype = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool packed = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.getPacked = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FieldOptions.prototype.setPacked = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearPacked = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasPacked = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional JSType jstype = 6;\n * @return {!proto.google.protobuf.FieldOptions.JSType}\n */\nproto.google.protobuf.FieldOptions.prototype.getJstype = function() {\n  return /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {!proto.google.protobuf.FieldOptions.JSType} value */\nproto.google.protobuf.FieldOptions.prototype.setJstype = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearJstype = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasJstype = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bool lazy = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.getLazy = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FieldOptions.prototype.setLazy = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearLazy = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasLazy = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bool deprecated = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FieldOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool weak = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.getWeak = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.FieldOptions.prototype.setWeak = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearWeak = function() {\n  jspb.Message.setField(this, 10, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.FieldOptions.prototype.hasWeak = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.FieldOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.FieldOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.FieldOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.FieldOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.FieldOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.FieldOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.OneofOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.OneofOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.OneofOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.OneofOptions.displayName = 'proto.google.protobuf.OneofOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.OneofOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.OneofOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.OneofOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.OneofOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.OneofOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.OneofOptions.extensions, proto.google.protobuf.OneofOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.OneofOptions}\n */\nproto.google.protobuf.OneofOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.OneofOptions;\n  return proto.google.protobuf.OneofOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.OneofOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.OneofOptions}\n */\nproto.google.protobuf.OneofOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.OneofOptions.extensionsBinary,\n        proto.google.protobuf.OneofOptions.prototype.getExtension,\n        proto.google.protobuf.OneofOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.OneofOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.OneofOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.OneofOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.OneofOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.OneofOptions.extensionsBinary, proto.google.protobuf.OneofOptions.prototype.getExtension);\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.OneofOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.OneofOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.OneofOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.OneofOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.OneofOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.OneofOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.EnumOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.EnumOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.EnumOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.EnumOptions.displayName = 'proto.google.protobuf.EnumOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.EnumOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.EnumOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.EnumOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.EnumOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    allowAlias: jspb.Message.getField(msg, 2),\n    deprecated: jspb.Message.getFieldWithDefault(msg, 3, false),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.EnumOptions.extensions, proto.google.protobuf.EnumOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.EnumOptions}\n */\nproto.google.protobuf.EnumOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.EnumOptions;\n  return proto.google.protobuf.EnumOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.EnumOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.EnumOptions}\n */\nproto.google.protobuf.EnumOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowAlias(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.EnumOptions.extensionsBinary,\n        proto.google.protobuf.EnumOptions.prototype.getExtension,\n        proto.google.protobuf.EnumOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.EnumOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.EnumOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.EnumOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.EnumOptions.extensionsBinary, proto.google.protobuf.EnumOptions.prototype.getExtension);\n};\n\n\n/**\n * optional bool allow_alias = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.EnumOptions.prototype.getAllowAlias = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.EnumOptions.prototype.setAllowAlias = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.EnumOptions.prototype.clearAllowAlias = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumOptions.prototype.hasAllowAlias = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bool deprecated = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.EnumOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.EnumOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.EnumOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.EnumOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.EnumOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.EnumOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.EnumOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.EnumOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.EnumOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.EnumValueOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.EnumValueOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.EnumValueOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.EnumValueOptions.displayName = 'proto.google.protobuf.EnumValueOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.EnumValueOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.EnumValueOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.EnumValueOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.EnumValueOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumValueOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deprecated: jspb.Message.getFieldWithDefault(msg, 1, false),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.EnumValueOptions.extensions, proto.google.protobuf.EnumValueOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.EnumValueOptions}\n */\nproto.google.protobuf.EnumValueOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.EnumValueOptions;\n  return proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.EnumValueOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.EnumValueOptions}\n */\nproto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.EnumValueOptions.extensionsBinary,\n        proto.google.protobuf.EnumValueOptions.prototype.getExtension,\n        proto.google.protobuf.EnumValueOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.EnumValueOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.EnumValueOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.EnumValueOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.EnumValueOptions.extensionsBinary, proto.google.protobuf.EnumValueOptions.prototype.getExtension);\n};\n\n\n/**\n * optional bool deprecated = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.EnumValueOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.EnumValueOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.EnumValueOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.EnumValueOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.EnumValueOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.EnumValueOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.EnumValueOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.EnumValueOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.EnumValueOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.EnumValueOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.ServiceOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.ServiceOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.ServiceOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.ServiceOptions.displayName = 'proto.google.protobuf.ServiceOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.ServiceOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.ServiceOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.ServiceOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.ServiceOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ServiceOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deprecated: jspb.Message.getFieldWithDefault(msg, 33, false),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.ServiceOptions.extensions, proto.google.protobuf.ServiceOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.ServiceOptions}\n */\nproto.google.protobuf.ServiceOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.ServiceOptions;\n  return proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.ServiceOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.ServiceOptions}\n */\nproto.google.protobuf.ServiceOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 33:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.ServiceOptions.extensionsBinary,\n        proto.google.protobuf.ServiceOptions.prototype.getExtension,\n        proto.google.protobuf.ServiceOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.ServiceOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.ServiceOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.ServiceOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.ServiceOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 33));\n  if (f != null) {\n    writer.writeBool(\n      33,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.ServiceOptions.extensionsBinary, proto.google.protobuf.ServiceOptions.prototype.getExtension);\n};\n\n\n/**\n * optional bool deprecated = 33;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.ServiceOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 33, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.ServiceOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 33, value);\n};\n\n\nproto.google.protobuf.ServiceOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 33, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.ServiceOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 33) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.ServiceOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.ServiceOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.ServiceOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.ServiceOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.ServiceOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.ServiceOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.MethodOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.MethodOptions.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.MethodOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.MethodOptions.displayName = 'proto.google.protobuf.MethodOptions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.MethodOptions.repeatedFields_ = [999];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.MethodOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.MethodOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.MethodOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MethodOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deprecated: jspb.Message.getFieldWithDefault(msg, 33, false),\n    idempotencyLevel: jspb.Message.getFieldWithDefault(msg, 34, 0),\n    uninterpretedOptionList: jspb.Message.toObjectList(msg.getUninterpretedOptionList(),\n    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)\n  };\n\n  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,\n      proto.google.protobuf.MethodOptions.extensions, proto.google.protobuf.MethodOptions.prototype.getExtension,\n      includeInstance);\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.MethodOptions}\n */\nproto.google.protobuf.MethodOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.MethodOptions;\n  return proto.google.protobuf.MethodOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.MethodOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.MethodOptions}\n */\nproto.google.protobuf.MethodOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 33:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeprecated(value);\n      break;\n    case 34:\n      var value = /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (reader.readEnum());\n      msg.setIdempotencyLevel(value);\n      break;\n    case 999:\n      var value = new proto.google.protobuf.UninterpretedOption;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);\n      msg.addUninterpretedOption(value);\n      break;\n    default:\n      jspb.Message.readBinaryExtension(msg, reader, proto.google.protobuf.MethodOptions.extensionsBinary,\n        proto.google.protobuf.MethodOptions.prototype.getExtension,\n        proto.google.protobuf.MethodOptions.prototype.setExtension);\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.MethodOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.MethodOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.MethodOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.MethodOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 33));\n  if (f != null) {\n    writer.writeBool(\n      33,\n      f\n    );\n  }\n  f = /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (jspb.Message.getField(message, 34));\n  if (f != null) {\n    writer.writeEnum(\n      34,\n      f\n    );\n  }\n  f = message.getUninterpretedOptionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      999,\n      f,\n      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter\n    );\n  }\n  jspb.Message.serializeBinaryExtensions(message, writer,\n    proto.google.protobuf.MethodOptions.extensionsBinary, proto.google.protobuf.MethodOptions.prototype.getExtension);\n};\n\n\n/**\n * @enum {number}\n */\nproto.google.protobuf.MethodOptions.IdempotencyLevel = {\n  IDEMPOTENCY_UNKNOWN: 0,\n  NO_SIDE_EFFECTS: 1,\n  IDEMPOTENT: 2\n};\n\n/**\n * optional bool deprecated = 33;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.MethodOptions.prototype.getDeprecated = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 33, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.MethodOptions.prototype.setDeprecated = function(value) {\n  jspb.Message.setField(this, 33, value);\n};\n\n\nproto.google.protobuf.MethodOptions.prototype.clearDeprecated = function() {\n  jspb.Message.setField(this, 33, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodOptions.prototype.hasDeprecated = function() {\n  return jspb.Message.getField(this, 33) != null;\n};\n\n\n/**\n * optional IdempotencyLevel idempotency_level = 34;\n * @return {!proto.google.protobuf.MethodOptions.IdempotencyLevel}\n */\nproto.google.protobuf.MethodOptions.prototype.getIdempotencyLevel = function() {\n  return /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (jspb.Message.getFieldWithDefault(this, 34, 0));\n};\n\n\n/** @param {!proto.google.protobuf.MethodOptions.IdempotencyLevel} value */\nproto.google.protobuf.MethodOptions.prototype.setIdempotencyLevel = function(value) {\n  jspb.Message.setField(this, 34, value);\n};\n\n\nproto.google.protobuf.MethodOptions.prototype.clearIdempotencyLevel = function() {\n  jspb.Message.setField(this, 34, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.MethodOptions.prototype.hasIdempotencyLevel = function() {\n  return jspb.Message.getField(this, 34) != null;\n};\n\n\n/**\n * repeated UninterpretedOption uninterpreted_option = 999;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption>}\n */\nproto.google.protobuf.MethodOptions.prototype.getUninterpretedOptionList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption>} value */\nproto.google.protobuf.MethodOptions.prototype.setUninterpretedOptionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 999, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.MethodOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);\n};\n\n\nproto.google.protobuf.MethodOptions.prototype.clearUninterpretedOptionList = function() {\n  this.setUninterpretedOptionList([]);\n};\n\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldInfo>}\n */\nproto.google.protobuf.MethodOptions.extensions = {};\n\n\n/**\n * The extensions registered with this message class. This is a map of\n * extension field number to fieldInfo object.\n *\n * For example:\n *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }\n *\n * fieldName contains the JsCompiler renamed field name property so that it\n * works in OPTIMIZED mode.\n *\n * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}\n */\nproto.google.protobuf.MethodOptions.extensionsBinary = {};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.UninterpretedOption = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.UninterpretedOption.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.UninterpretedOption, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.UninterpretedOption.displayName = 'proto.google.protobuf.UninterpretedOption';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.UninterpretedOption.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.UninterpretedOption.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.UninterpretedOption.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.UninterpretedOption} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.UninterpretedOption.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nameList: jspb.Message.toObjectList(msg.getNameList(),\n    proto.google.protobuf.UninterpretedOption.NamePart.toObject, includeInstance),\n    identifierValue: jspb.Message.getField(msg, 3),\n    positiveIntValue: jspb.Message.getField(msg, 4),\n    negativeIntValue: jspb.Message.getField(msg, 5),\n    doubleValue: jspb.Message.getOptionalFloatingPointField(msg, 6),\n    stringValue: msg.getStringValue_asB64(),\n    aggregateValue: jspb.Message.getField(msg, 8)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.UninterpretedOption.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.UninterpretedOption;\n  return proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.UninterpretedOption} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.UninterpretedOption}\n */\nproto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = new proto.google.protobuf.UninterpretedOption.NamePart;\n      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader);\n      msg.addName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentifierValue(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPositiveIntValue(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNegativeIntValue(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setDoubleValue(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStringValue(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAggregateValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.UninterpretedOption.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.UninterpretedOption} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.UninterpretedOption.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNameList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeDouble(\n      6,\n      f\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));\n  if (f != null) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 8));\n  if (f != null) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.UninterpretedOption.NamePart = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.UninterpretedOption.NamePart, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.UninterpretedOption.NamePart.displayName = 'proto.google.protobuf.UninterpretedOption.NamePart';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.UninterpretedOption.NamePart.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.UninterpretedOption.NamePart} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.UninterpretedOption.NamePart.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    namePart: jspb.Message.getField(msg, 1),\n    isExtension: jspb.Message.getField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.UninterpretedOption.NamePart}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.UninterpretedOption.NamePart;\n  return proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.UninterpretedOption.NamePart} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.UninterpretedOption.NamePart}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNamePart(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsExtension(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.UninterpretedOption.NamePart} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {string} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * required string name_part = 1;\n * @return {string}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.getNamePart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.setNamePart = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.clearNamePart = function() {\n  jspb.Message.setField(this, 1, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.hasNamePart = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * required bool is_extension = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.getIsExtension = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.setIsExtension = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.clearIsExtension = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.NamePart.prototype.hasIsExtension = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated NamePart name = 2;\n * @return {!Array<!proto.google.protobuf.UninterpretedOption.NamePart>}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getNameList = function() {\n  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption.NamePart>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption.NamePart, 2));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.UninterpretedOption.NamePart>} value */\nproto.google.protobuf.UninterpretedOption.prototype.setNameList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.UninterpretedOption.NamePart=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.UninterpretedOption.NamePart}\n */\nproto.google.protobuf.UninterpretedOption.prototype.addName = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.UninterpretedOption.NamePart, opt_index);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearNameList = function() {\n  this.setNameList([]);\n};\n\n\n/**\n * optional string identifier_value = 3;\n * @return {string}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getIdentifierValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.UninterpretedOption.prototype.setIdentifierValue = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearIdentifierValue = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasIdentifierValue = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 positive_int_value = 4;\n * @return {number}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getPositiveIntValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.UninterpretedOption.prototype.setPositiveIntValue = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearPositiveIntValue = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasPositiveIntValue = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional int64 negative_int_value = 5;\n * @return {number}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getNegativeIntValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.UninterpretedOption.prototype.setNegativeIntValue = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearNegativeIntValue = function() {\n  jspb.Message.setField(this, 5, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasNegativeIntValue = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional double double_value = 6;\n * @return {number}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getDoubleValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.UninterpretedOption.prototype.setDoubleValue = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearDoubleValue = function() {\n  jspb.Message.setField(this, 6, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasDoubleValue = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional bytes string_value = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getStringValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes string_value = 7;\n * This is a type-conversion wrapper around `getStringValue()`\n * @return {string}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getStringValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStringValue()));\n};\n\n\n/**\n * optional bytes string_value = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStringValue()`\n * @return {!Uint8Array}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getStringValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStringValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.google.protobuf.UninterpretedOption.prototype.setStringValue = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearStringValue = function() {\n  jspb.Message.setField(this, 7, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasStringValue = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional string aggregate_value = 8;\n * @return {string}\n */\nproto.google.protobuf.UninterpretedOption.prototype.getAggregateValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.UninterpretedOption.prototype.setAggregateValue = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\nproto.google.protobuf.UninterpretedOption.prototype.clearAggregateValue = function() {\n  jspb.Message.setField(this, 8, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.UninterpretedOption.prototype.hasAggregateValue = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.SourceCodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.SourceCodeInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.SourceCodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.SourceCodeInfo.displayName = 'proto.google.protobuf.SourceCodeInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.SourceCodeInfo.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.SourceCodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.SourceCodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.SourceCodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.SourceCodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    locationList: jspb.Message.toObjectList(msg.getLocationList(),\n    proto.google.protobuf.SourceCodeInfo.Location.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.SourceCodeInfo}\n */\nproto.google.protobuf.SourceCodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.SourceCodeInfo;\n  return proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.SourceCodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.SourceCodeInfo}\n */\nproto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.google.protobuf.SourceCodeInfo.Location;\n      reader.readMessage(value,proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader);\n      msg.addLocation(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.SourceCodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.SourceCodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLocationList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.SourceCodeInfo.Location = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.SourceCodeInfo.Location.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.SourceCodeInfo.Location, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.SourceCodeInfo.Location.displayName = 'proto.google.protobuf.SourceCodeInfo.Location';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.SourceCodeInfo.Location.repeatedFields_ = [1,2,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.SourceCodeInfo.Location.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.SourceCodeInfo.Location} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.SourceCodeInfo.Location.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pathList: jspb.Message.getRepeatedField(msg, 1),\n    spanList: jspb.Message.getRepeatedField(msg, 2),\n    leadingComments: jspb.Message.getField(msg, 3),\n    trailingComments: jspb.Message.getField(msg, 4),\n    leadingDetachedCommentsList: jspb.Message.getRepeatedField(msg, 6)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.SourceCodeInfo.Location}\n */\nproto.google.protobuf.SourceCodeInfo.Location.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.SourceCodeInfo.Location;\n  return proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.SourceCodeInfo.Location} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.SourceCodeInfo.Location}\n */\nproto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());\n      msg.setPathList(value);\n      break;\n    case 2:\n      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());\n      msg.setSpanList(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLeadingComments(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTrailingComments(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addLeadingDetachedComments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.SourceCodeInfo.Location} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPathList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSpanList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getLeadingDetachedCommentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int32 path = 1;\n * @return {!Array<number>}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.getPathList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<number>} value */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.setPathList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.addPath = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.Location.prototype.clearPathList = function() {\n  this.setPathList([]);\n};\n\n\n/**\n * repeated int32 span = 2;\n * @return {!Array<number>}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.getSpanList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array<number>} value */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.setSpanList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.addSpan = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.Location.prototype.clearSpanList = function() {\n  this.setSpanList([]);\n};\n\n\n/**\n * optional string leading_comments = 3;\n * @return {string}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingComments = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingComments = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingComments = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.hasLeadingComments = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string trailing_comments = 4;\n * @return {string}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.getTrailingComments = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.setTrailingComments = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.Location.prototype.clearTrailingComments = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.hasTrailingComments = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * repeated string leading_detached_comments = 6;\n * @return {!Array<string>}\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingDetachedCommentsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/** @param {!Array<string>} value */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingDetachedCommentsList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.SourceCodeInfo.Location.prototype.addLeadingDetachedComments = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingDetachedCommentsList = function() {\n  this.setLeadingDetachedCommentsList([]);\n};\n\n\n/**\n * repeated Location location = 1;\n * @return {!Array<!proto.google.protobuf.SourceCodeInfo.Location>}\n */\nproto.google.protobuf.SourceCodeInfo.prototype.getLocationList = function() {\n  return /** @type{!Array<!proto.google.protobuf.SourceCodeInfo.Location>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.SourceCodeInfo.Location, 1));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.SourceCodeInfo.Location>} value */\nproto.google.protobuf.SourceCodeInfo.prototype.setLocationList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.SourceCodeInfo.Location=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.SourceCodeInfo.Location}\n */\nproto.google.protobuf.SourceCodeInfo.prototype.addLocation = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.SourceCodeInfo.Location, opt_index);\n};\n\n\nproto.google.protobuf.SourceCodeInfo.prototype.clearLocationList = function() {\n  this.setLocationList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.GeneratedCodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.GeneratedCodeInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.GeneratedCodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.GeneratedCodeInfo.displayName = 'proto.google.protobuf.GeneratedCodeInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.GeneratedCodeInfo.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.GeneratedCodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.GeneratedCodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.GeneratedCodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.GeneratedCodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    annotationList: jspb.Message.toObjectList(msg.getAnnotationList(),\n    proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.GeneratedCodeInfo}\n */\nproto.google.protobuf.GeneratedCodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.GeneratedCodeInfo;\n  return proto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.GeneratedCodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.GeneratedCodeInfo}\n */\nproto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.google.protobuf.GeneratedCodeInfo.Annotation;\n      reader.readMessage(value,proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader);\n      msg.addAnnotation(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.GeneratedCodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.GeneratedCodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAnnotationList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_, null);\n};\ngoog.inherits(proto.google.protobuf.GeneratedCodeInfo.Annotation, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.GeneratedCodeInfo.Annotation.displayName = 'proto.google.protobuf.GeneratedCodeInfo.Annotation';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pathList: jspb.Message.getRepeatedField(msg, 1),\n    sourceFile: jspb.Message.getField(msg, 2),\n    begin: jspb.Message.getField(msg, 3),\n    end: jspb.Message.getField(msg, 4)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.GeneratedCodeInfo.Annotation;\n  return proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());\n      msg.setPathList(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSourceFile(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBegin(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEnd(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPathList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int32 path = 1;\n * @return {!Array<number>}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getPathList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<number>} value */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setPathList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.addPath = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearPathList = function() {\n  this.setPathList([]);\n};\n\n\n/**\n * optional string source_file = 2;\n * @return {string}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getSourceFile = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setSourceFile = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearSourceFile = function() {\n  jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasSourceFile = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int32 begin = 3;\n * @return {number}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getBegin = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setBegin = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearBegin = function() {\n  jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasBegin = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional int32 end = 4;\n * @return {number}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getEnd = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearEnd = function() {\n  jspb.Message.setField(this, 4, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasEnd = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * repeated Annotation annotation = 1;\n * @return {!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>}\n */\nproto.google.protobuf.GeneratedCodeInfo.prototype.getAnnotationList = function() {\n  return /** @type{!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.GeneratedCodeInfo.Annotation, 1));\n};\n\n\n/** @param {!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>} value */\nproto.google.protobuf.GeneratedCodeInfo.prototype.setAnnotationList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}\n */\nproto.google.protobuf.GeneratedCodeInfo.prototype.addAnnotation = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.GeneratedCodeInfo.Annotation, opt_index);\n};\n\n\nproto.google.protobuf.GeneratedCodeInfo.prototype.clearAnnotationList = function() {\n  this.setAnnotationList([]);\n};\n\n\ngoog.object.extend(exports, proto.google.protobuf);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.google.protobuf.Timestamp', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.Timestamp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.Timestamp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.Timestamp.displayName = 'proto.google.protobuf.Timestamp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.Timestamp.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.Timestamp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.Timestamp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Timestamp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Timestamp}\n */\nproto.google.protobuf.Timestamp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.Timestamp;\n  return proto.google.protobuf.Timestamp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Timestamp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Timestamp}\n */\nproto.google.protobuf.Timestamp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSeconds(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNanos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Timestamp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.Timestamp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Timestamp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Timestamp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSeconds();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getNanos();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 seconds = 1;\n * @return {number}\n */\nproto.google.protobuf.Timestamp.prototype.getSeconds = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.Timestamp.prototype.setSeconds = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 nanos = 2;\n * @return {number}\n */\nproto.google.protobuf.Timestamp.prototype.getNanos = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.google.protobuf.Timestamp.prototype.setNanos = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.google.protobuf);\n/* This code will be inserted into generated code for\n * google/protobuf/timestamp.proto. */\n\n/**\n * Returns a JavaScript 'Date' object corresponding to this Timestamp.\n * @return {!Date}\n */\nproto.google.protobuf.Timestamp.prototype.toDate = function() {\n  var seconds = this.getSeconds();\n  var nanos = this.getNanos();\n\n  return new Date((seconds * 1000) + (nanos / 1000000));\n};\n\n\n/**\n * Sets the value of this Timestamp object to be the given Date.\n * @param {!Date} value The value to set.\n */\nproto.google.protobuf.Timestamp.prototype.fromDate = function(value) {\n  this.setSeconds(Math.floor(value.getTime() / 1000));\n  this.setNanos(value.getMilliseconds() * 1000000);\n};\n","/**\n * A function for converting hex <-> dec w/o loss of precision.\n *\n * The problem is that parseInt(\"0x12345...\") isn't precise enough to convert\n * 64-bit integers correctly.\n *\n * Internally, this uses arrays to encode decimal digits starting with the least\n * significant:\n * 8 = [8]\n * 16 = [6, 1]\n * 1024 = [4, 2, 0, 1]\n *\n * Source: http://www.danvk.org/hex2dec.html\n */\n\n// Adds two arrays for the given base (10 or 16), returning the result.\n// This turns out to be the only \"primitive\" operation we need.\nfunction add(x, y, base) {\n  var z = [];\n  var n = Math.max(x.length, y.length);\n  var carry = 0;\n  var i = 0;\n  while (i < n || carry) {\n    var xi = i < x.length ? x[i] : 0;\n    var yi = i < y.length ? y[i] : 0;\n    var zi = carry + xi + yi;\n    z.push(zi % base);\n    carry = Math.floor(zi / base);\n    i++;\n  }\n  return z;\n}\n\n// Returns a*x, where x is an array of decimal digits and a is an ordinary\n// JavaScript number. base is the number base of the array x.\nfunction multiplyByNumber(num, x, base) {\n  if (num < 0) return null;\n  if (num == 0) return [];\n\n  var result = [];\n  var power = x;\n  while (true) {\n    if (num & 1) {\n      result = add(result, power, base);\n    }\n    num = num >> 1;\n    if (num === 0) break;\n    power = add(power, power, base);\n  }\n\n  return result;\n}\n\nfunction parseToDigitsArray(str, base) {\n  var digits = str.split('');\n  var ary = [];\n  for (var i = digits.length - 1; i >= 0; i--) {\n    var n = parseInt(digits[i], base);\n    if (isNaN(n)) return null;\n    ary.push(n);\n  }\n  return ary;\n}\n\nfunction convertBase(str, fromBase, toBase) {\n  var digits = parseToDigitsArray(str, fromBase);\n  if (digits === null) return null;\n\n  var outArray = [];\n  var power = [1];\n  for (var i = 0; i < digits.length; i++) {\n    // invariant: at this point, fromBase^i = power\n    if (digits[i]) {\n      outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);\n    }\n    power = multiplyByNumber(fromBase, power, toBase);\n  }\n\n  var out = '';\n  for (var i = outArray.length - 1; i >= 0; i--) {\n    out += outArray[i].toString(toBase);\n  }\n  return out;\n}\n\nfunction decToHex(decStr) {\n  var hex = convertBase(decStr, 10, 16);\n  return hex ? '0x' + hex : null;\n}\n\nfunction hexToDec(hexStr) {\n  if (hexStr.substring(0, 2) === '0x') hexStr = hexStr.substring(2);\n  hexStr = hexStr.toLowerCase();\n  return convertBase(hexStr, 16, 10);\n}\n\nmodule.exports = {\n  hexToDec: hexToDec,\n  decToHex: decToHex\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convenience class to use as a binary carrier.\n *\n * Any valid Object with a field named `buffer` may be used as a binary carrier;\n * this class is only one such type of object that can be used.\n */\nvar BinaryCarrier = /** @class */ (function () {\n    function BinaryCarrier(buffer) {\n        this.buffer = buffer;\n    }\n    return BinaryCarrier;\n}());\nexports.default = BinaryCarrier;\n//# sourceMappingURL=binary_carrier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The FORMAT_BINARY format represents SpanContexts in an opaque binary\n * carrier.\n *\n * Tracer.inject() will set the buffer field to an Array-like (Array,\n * ArrayBuffer, or TypedBuffer) object containing the injected binary data.\n * Any valid Object can be used as long as the buffer field of the object\n * can be set.\n *\n * Tracer.extract() will look for `carrier.buffer`, and that field is\n * expected to be an Array-like object (Array, ArrayBuffer, or\n * TypedBuffer).\n */\nexports.FORMAT_BINARY = 'binary';\n/**\n * The FORMAT_TEXT_MAP format represents SpanContexts using a\n * string->string map (backed by a Javascript Object) as a carrier.\n *\n * NOTE: Unlike FORMAT_HTTP_HEADERS, FORMAT_TEXT_MAP places no restrictions\n * on the characters used in either the keys or the values of the map\n * entries.\n *\n * The FORMAT_TEXT_MAP carrier map may contain unrelated data (e.g.,\n * arbitrary gRPC metadata); as such, the Tracer implementation should use\n * a prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_TEXT_MAP = 'text_map';\n/**\n * The FORMAT_HTTP_HEADERS format represents SpanContexts using a\n * character-restricted string->string map (backed by a Javascript Object)\n * as a carrier.\n *\n * Keys and values in the FORMAT_HTTP_HEADERS carrier must be suitable for\n * use as HTTP headers (without modification or further escaping). That is,\n * the keys have a greatly restricted character set, casing for the keys\n * may not be preserved by various intermediaries, and the values should be\n * URL-escaped.\n *\n * The FORMAT_HTTP_HEADERS carrier map may contain unrelated data (e.g.,\n * arbitrary HTTP headers); as such, the Tracer implementation should use a\n * prefix or other convention to distinguish Tracer-specific key:value\n * pairs.\n */\nexports.FORMAT_HTTP_HEADERS = 'http_headers';\n/**\n * A Span may be the \"child of\" a parent Span. In a “child of” reference,\n * the parent Span depends on the child Span in some capacity.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_CHILD_OF = 'child_of';\n/**\n * Some parent Spans do not depend in any way on the result of their child\n * Spans. In these cases, we say merely that the child Span “follows from”\n * the parent Span in a causal sense.\n *\n * See more about reference types at https://github.com/opentracing/specification\n */\nexports.REFERENCE_FOLLOWS_FROM = 'follows_from';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** SPAN_KIND hints at relationship between spans, e.g. client/server */\nexports.SPAN_KIND = 'span.kind';\n/** Marks a span representing the client-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_CLIENT = 'client';\n/** Marks a span representing the server-side of an RPC or other remote call */\nexports.SPAN_KIND_RPC_SERVER = 'server';\n/** Marks a span representing the producing-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_PRODUCER = 'producer';\n/** Marks a span representing the consuming-side within a messaging system or other remote call */\nexports.SPAN_KIND_MESSAGING_CONSUMER = 'consumer';\n/**\n * ERROR (boolean) true if and only if the application considers the operation\n * represented by the Span to have failed\n */\nexports.ERROR = 'error';\n/**\n * COMPONENT (string) ia s low-cardinality identifier of the module, library,\n * or package that is generating a span.\n */\nexports.COMPONENT = 'component';\n/**\n * SAMPLING_PRIORITY (number) determines the priority of sampling this Span.\n * If greater than 0, a hint to the Tracer to do its best to capture the trace.\n * If 0, a hint to the trace to not-capture the trace. If absent, the Tracer\n * should use its default sampling mechanism.\n */\nexports.SAMPLING_PRIORITY = 'sampling.priority';\n// ---------------------------------------------------------------------------\n// PEER_* tags can be emitted by either client-side of server-side to describe\n// the other side/service in a peer-to-peer communications, like an RPC call.\n// ---------------------------------------------------------------------------\n/**\n * PEER_SERVICE (string) Remote service name (for some unspecified\n * definition of \"service\"). E.g., \"elasticsearch\", \"a_custom_microservice\", \"memcache\"\n */\nexports.PEER_SERVICE = 'peer.service';\n/** PEER_HOSTNAME (string) Remote hostname. E.g., \"opentracing.io\", \"internal.dns.name\" */\nexports.PEER_HOSTNAME = 'peer.hostname';\n/**\n * PEER_ADDRESS (string) Remote \"address\", suitable for use in a\n * networking client library. This may be a \"ip:port\", a bare\n * \"hostname\", a FQDN, or even a JDBC substring like \"mysql://prod-db:3306\"\n */\nexports.PEER_ADDRESS = 'peer.address';\n/**\n * PEER_HOST_IPV4 (number) Remote IPv4 address as a .-separated tuple.\n * E.g., \"127.0.0.1\"\n */\nexports.PEER_HOST_IPV4 = 'peer.ipv4';\n// PEER_HOST_IPV6 (string) Remote IPv6 address as a string of\n// colon-separated 4-char hex tuples. E.g., \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\nexports.PEER_HOST_IPV6 = 'peer.ipv6';\n// PEER_PORT (number) Remote port. E.g., 80\nexports.PEER_PORT = 'peer.port';\n// ---------------------------------------------------------------------------\n// HTTP tags\n// ---------------------------------------------------------------------------\n/**\n * HTTP_URL (string) URL of the request being handled in this segment of the\n * trace, in standard URI format. E.g., \"https://domain.net/path/to?resource=here\"\n */\nexports.HTTP_URL = 'http.url';\n/**\n * HTTP_METHOD (string) HTTP method of the request for the associated Span. E.g.,\n * \"GET\", \"POST\"\n */\nexports.HTTP_METHOD = 'http.method';\n/**\n * HTTP_STATUS_CODE (number) HTTP response status code for the associated Span.\n * E.g., 200, 503, 404\n */\nexports.HTTP_STATUS_CODE = 'http.status_code';\n// -------------------------------------------------------------------------\n// Messaging tags\n// -------------------------------------------------------------------------\n/**\n * MESSAGE_BUS_DESTINATION (string) An address at which messages can be exchanged.\n * E.g. A Kafka record has an associated \"topic name\" that can be extracted\n * by the instrumented producer or consumer and stored using this tag.\n */\nexports.MESSAGE_BUS_DESTINATION = 'message_bus.destination';\n// --------------------------------------------------------------------------\n// Database tags\n// --------------------------------------------------------------------------\n/**\n * DB_INSTANCE (string) Database instance name. E.g., In java, if the\n * jdbc.url=\"jdbc:mysql://127.0.0.1:3306/customers\", the instance name is \"customers\".\n */\nexports.DB_INSTANCE = 'db.instance';\n/**\n * DB_STATEMENT (string) A database statement for the given database type.\n * E.g., for db.type=\"SQL\", \"SELECT * FROM wuser_table\";\n * for db.type=\"redis\", \"SET mykey 'WuValue'\".\n */\nexports.DB_STATEMENT = 'db.statement';\n/**\n * DB_TYPE (string) Database type. For any SQL database, \"sql\". For others,\n * the lower-case database category, e.g. \"cassandra\", \"hbase\", or \"redis\".\n */\nexports.DB_TYPE = 'db.type';\n/**\n * DB_USER (string) Username for accessing database. E.g., \"readonly_user\"\n * or \"reporting_user\"\n */\nexports.DB_USER = 'db.user';\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n//# sourceMappingURL=functions.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n//# sourceMappingURL=global_tracer.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binary_carrier_1 = require(\"./binary_carrier\");\nexports.BinaryCarrier = binary_carrier_1.default;\nvar Tags = require(\"./ext/tags\");\nexports.Tags = Tags;\nvar Noop = require(\"./noop\");\nvar reference_1 = require(\"./reference\");\nexports.Reference = reference_1.default;\nvar span_1 = require(\"./span\");\nexports.Span = span_1.default;\nvar span_context_1 = require(\"./span_context\");\nexports.SpanContext = span_context_1.default;\nvar tracer_1 = require(\"./tracer\");\nexports.Tracer = tracer_1.Tracer;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.MockTracer;\n__export(require(\"./global_tracer\"));\n__export(require(\"./constants\"));\n__export(require(\"./functions\"));\n// Initialize the noops last to avoid a dependecy cycle between the classes.\nNoop.initialize();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mock_context_1 = require(\"./mock_context\");\nexports.MockContext = mock_context_1.default;\nvar mock_span_1 = require(\"./mock_span\");\nexports.MockSpan = mock_span_1.default;\nvar mock_tracer_1 = require(\"./mock_tracer\");\nexports.MockTracer = mock_tracer_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\n/**\n * OpenTracing Context implementation designed for use in\n * unit tests.\n */\nvar MockContext = /** @class */ (function (_super) {\n    __extends(MockContext, _super);\n    function MockContext(span) {\n        var _this = _super.call(this) || this;\n        // Store a reference to the span itself since this is a mock tracer\n        // intended to make debugging and unit testing easier.\n        _this._span = span;\n        return _this;\n    }\n    MockContext.prototype.span = function () {\n        return this._span;\n    };\n    return MockContext;\n}(opentracing.SpanContext));\nexports.MockContext = MockContext;\nexports.default = MockContext;\n//# sourceMappingURL=mock_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Index a collection of reported MockSpans in a way that's easy to run unit\n * test assertions against.\n */\nvar MockReport = /** @class */ (function () {\n    function MockReport(spans) {\n        var _this = this;\n        this.spans = spans;\n        this.spansByUUID = {};\n        this.spansByTag = {};\n        this.debugSpans = [];\n        this.unfinishedSpans = [];\n        spans.forEach(function (span) {\n            if (span._finishMs === 0) {\n                _this.unfinishedSpans.push(span);\n            }\n            _this.spansByUUID[span.uuid()] = span;\n            _this.debugSpans.push(span.debug());\n            var tags = span.tags();\n            Object.keys(tags).forEach(function (key) {\n                var val = tags[key];\n                _this.spansByTag[key] = _this.spansByTag[key] || {};\n                _this.spansByTag[key][val] = _this.spansByTag[key][val] || [];\n                _this.spansByTag[key][val].push(span);\n            });\n        });\n    }\n    MockReport.prototype.firstSpanWithTagValue = function (key, val) {\n        var m = this.spansByTag[key];\n        if (!m) {\n            return null;\n        }\n        var n = m[val];\n        if (!n) {\n            return null;\n        }\n        return n[0];\n    };\n    return MockReport;\n}());\nexports.MockReport = MockReport;\nexports.default = MockReport;\n//# sourceMappingURL=mock_report.js.map","\"use strict\";\n/* eslint-disable import/no-extraneous-dependencies */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar opentracing = require(\"../index\");\nvar mock_context_1 = require(\"./mock_context\");\n/**\n * OpenTracing Span implementation designed for use in unit tests.\n */\nvar MockSpan = /** @class */ (function (_super) {\n    __extends(MockSpan, _super);\n    //------------------------------------------------------------------------//\n    // MockSpan-specific\n    //------------------------------------------------------------------------//\n    function MockSpan(tracer) {\n        var _this = _super.call(this) || this;\n        _this._mockTracer = tracer;\n        _this._uuid = _this._generateUUID();\n        _this._startMs = Date.now();\n        _this._finishMs = 0;\n        _this._operationName = '';\n        _this._tags = {};\n        _this._logs = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockSpan.prototype._context = function () {\n        return new mock_context_1.default(this);\n    };\n    MockSpan.prototype._setOperationName = function (name) {\n        this._operationName = name;\n    };\n    MockSpan.prototype._addTags = function (set) {\n        var keys = Object.keys(set);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this._tags[key] = set[key];\n        }\n    };\n    MockSpan.prototype._log = function (fields, timestamp) {\n        this._logs.push({\n            fields: fields,\n            timestamp: timestamp\n        });\n    };\n    MockSpan.prototype._finish = function (finishTime) {\n        this._finishMs = finishTime || Date.now();\n    };\n    MockSpan.prototype.uuid = function () {\n        return this._uuid;\n    };\n    MockSpan.prototype.operationName = function () {\n        return this._operationName;\n    };\n    MockSpan.prototype.durationMs = function () {\n        return this._finishMs - this._startMs;\n    };\n    MockSpan.prototype.tags = function () {\n        return this._tags;\n    };\n    MockSpan.prototype.tracer = function () {\n        return this._mockTracer;\n    };\n    MockSpan.prototype._generateUUID = function () {\n        var p0 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        var p1 = (\"00000000\" + Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)).substr(-8);\n        return \"\" + p0 + p1;\n    };\n    MockSpan.prototype.addReference = function (ref) {\n    };\n    /**\n     * Returns a simplified object better for console.log()'ing.\n     */\n    MockSpan.prototype.debug = function () {\n        var obj = {\n            uuid: this._uuid,\n            operation: this._operationName,\n            millis: [this._finishMs - this._startMs, this._startMs, this._finishMs]\n        };\n        if (Object.keys(this._tags).length) {\n            obj.tags = this._tags;\n        }\n        return obj;\n    };\n    return MockSpan;\n}(opentracing.Span));\nexports.MockSpan = MockSpan;\nexports.default = MockSpan;\n//# sourceMappingURL=mock_span.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Move mock-tracer to its own NPM package once it is complete and tested.\nvar opentracing = require(\"../index\");\nvar mock_report_1 = require(\"./mock_report\");\nvar mock_span_1 = require(\"./mock_span\");\n/**\n * OpenTracing Tracer implementation designed for use in unit tests.\n */\nvar MockTracer = /** @class */ (function (_super) {\n    __extends(MockTracer, _super);\n    //------------------------------------------------------------------------//\n    // MockTracer-specific\n    //------------------------------------------------------------------------//\n    function MockTracer() {\n        var _this = _super.call(this) || this;\n        _this._spans = [];\n        return _this;\n    }\n    //------------------------------------------------------------------------//\n    // OpenTracing implementation\n    //------------------------------------------------------------------------//\n    MockTracer.prototype._startSpan = function (name, fields) {\n        // _allocSpan is given it's own method so that derived classes can\n        // allocate any type of object they want, but not have to duplicate\n        // the other common logic in startSpan().\n        var span = this._allocSpan();\n        span.setOperationName(name);\n        this._spans.push(span);\n        if (fields.references) {\n            for (var _i = 0, _a = fields.references; _i < _a.length; _i++) {\n                var ref = _a[_i];\n                span.addReference(ref);\n            }\n        }\n        // Capture the stack at the time the span started\n        span._startStack = new Error().stack;\n        return span;\n    };\n    MockTracer.prototype._inject = function (span, format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._extract = function (format, carrier) {\n        throw new Error('NOT YET IMPLEMENTED');\n    };\n    MockTracer.prototype._allocSpan = function () {\n        return new mock_span_1.default(this);\n    };\n    /**\n     * Discard any buffered data.\n     */\n    MockTracer.prototype.clear = function () {\n        this._spans = [];\n    };\n    /**\n     * Return the buffered data in a format convenient for making unit test\n     * assertions.\n     */\n    MockTracer.prototype.report = function () {\n        return new mock_report_1.default(this._spans);\n    };\n    return MockTracer;\n}(opentracing.Tracer));\nexports.MockTracer = MockTracer;\nexports.default = MockTracer;\n//# sourceMappingURL=mock_tracer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\nvar span_context_1 = require(\"./span_context\");\nvar tracer_1 = require(\"./tracer\");\nexports.tracer = null;\nexports.spanContext = null;\nexports.span = null;\n// Deferred initialization to avoid a dependency cycle where Tracer depends on\n// Span which depends on the noop tracer.\nfunction initialize() {\n    exports.tracer = new tracer_1.default();\n    exports.span = new span_1.default();\n    exports.spanContext = new span_context_1.default();\n}\nexports.initialize = initialize;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n//# sourceMappingURL=reference.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop = require(\"./noop\");\n/**\n * Span represents a logical unit of work as part of a broader Trace. Examples\n * of span might include remote procedure calls or a in-process function calls\n * to sub-components. A Trace has a single, top-level \"root\" Span that in turn\n * may have zero or more child Spans, which in turn may have children.\n */\nvar Span = /** @class */ (function () {\n    function Span() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Returns the SpanContext object associated with this Span.\n     *\n     * @return {SpanContext}\n     */\n    Span.prototype.context = function () {\n        return this._context();\n    };\n    /**\n     * Returns the Tracer object used to create this Span.\n     *\n     * @return {Tracer}\n     */\n    Span.prototype.tracer = function () {\n        return this._tracer();\n    };\n    /**\n     * Sets the string name for the logical operation this span represents.\n     *\n     * @param {string} name\n     */\n    Span.prototype.setOperationName = function (name) {\n        this._setOperationName(name);\n        return this;\n    };\n    /**\n     * Sets a key:value pair on this Span that also propagates to future\n     * children of the associated Span.\n     *\n     * setBaggageItem() enables powerful functionality given a full-stack\n     * opentracing integration (e.g., arbitrary application data from a web\n     * client can make it, transparently, all the way into the depths of a\n     * storage system), and with it some powerful costs: use this feature with\n     * care.\n     *\n     * IMPORTANT NOTE #1: setBaggageItem() will only propagate baggage items to\n     * *future* causal descendants of the associated Span.\n     *\n     * IMPORTANT NOTE #2: Use this thoughtfully and with care. Every key and\n     * value is copied into every local *and remote* child of the associated\n     * Span, and that can add up to a lot of network and cpu overhead.\n     *\n     * @param {string} key\n     * @param {string} value\n     */\n    Span.prototype.setBaggageItem = function (key, value) {\n        this._setBaggageItem(key, value);\n        return this;\n    };\n    /**\n     * Returns the value for a baggage item given its key.\n     *\n     * @param  {string} key\n     *         The key for the given trace attribute.\n     * @return {string}\n     *         String value for the given key, or undefined if the key does not\n     *         correspond to a set trace attribute.\n     */\n    Span.prototype.getBaggageItem = function (key) {\n        return this._getBaggageItem(key);\n    };\n    /**\n     * Adds a single tag to the span.  See `addTags()` for details.\n     *\n     * @param {string} key\n     * @param {any} value\n     */\n    Span.prototype.setTag = function (key, value) {\n        var _a;\n        // NOTE: the call is normalized to a call to _addTags()\n        this._addTags((_a = {}, _a[key] = value, _a));\n        return this;\n    };\n    /**\n     * Adds the given key value pairs to the set of span tags.\n     *\n     * Multiple calls to addTags() results in the tags being the superset of\n     * all calls.\n     *\n     * The behavior of setting the same key multiple times on the same span\n     * is undefined.\n     *\n     * The supported type of the values is implementation-dependent.\n     * Implementations are expected to safely handle all types of values but\n     * may choose to ignore unrecognized / unhandle-able values (e.g. objects\n     * with cyclic references, function objects).\n     *\n     * @return {[type]} [description]\n     */\n    Span.prototype.addTags = function (keyValueMap) {\n        this._addTags(keyValueMap);\n        return this;\n    };\n    /**\n     * Add a log record to this Span, optionally at a user-provided timestamp.\n     *\n     * For example:\n     *\n     *     span.log({\n     *         size: rpc.size(),  // numeric value\n     *         URI: rpc.URI(),  // string value\n     *         payload: rpc.payload(),  // Object value\n     *         \"keys can be arbitrary strings\": rpc.foo(),\n     *     });\n     *\n     *     span.log({\n     *         \"error.description\": someError.description(),\n     *     }, someError.timestampMillis());\n     *\n     * @param {object} keyValuePairs\n     *        An object mapping string keys to arbitrary value types. All\n     *        Tracer implementations should support bool, string, and numeric\n     *        value types, and some may also support Object values.\n     * @param {number} timestamp\n     *        An optional parameter specifying the timestamp in milliseconds\n     *        since the Unix epoch. Fractional values are allowed so that\n     *        timestamps with sub-millisecond accuracy can be represented. If\n     *        not specified, the implementation is expected to use its notion\n     *        of the current time of the call.\n     */\n    Span.prototype.log = function (keyValuePairs, timestamp) {\n        this._log(keyValuePairs, timestamp);\n        return this;\n    };\n    /**\n     * DEPRECATED\n     */\n    Span.prototype.logEvent = function (eventName, payload) {\n        return this._log({ event: eventName, payload: payload });\n    };\n    /**\n     * Sets the end timestamp and finalizes Span state.\n     *\n     * With the exception of calls to Span.context() (which are always allowed),\n     * finish() must be the last call made to any span instance, and to do\n     * otherwise leads to undefined behavior.\n     *\n     * @param  {number} finishTime\n     *         Optional finish time in milliseconds as a Unix timestamp. Decimal\n     *         values are supported for timestamps with sub-millisecond accuracy.\n     *         If not specified, the current time (as defined by the\n     *         implementation) will be used.\n     */\n    Span.prototype.finish = function (finishTime) {\n        this._finish(finishTime);\n        // Do not return `this`. The Span generally should not be used after it\n        // is finished so chaining is not desired in this context.\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // By default returns a no-op SpanContext.\n    Span.prototype._context = function () {\n        return noop.spanContext;\n    };\n    // By default returns a no-op tracer.\n    //\n    // The base class could store the tracer that created it, but it does not\n    // in order to ensure the no-op span implementation has zero members,\n    // which allows V8 to aggressively optimize calls to such objects.\n    Span.prototype._tracer = function () {\n        return noop.tracer;\n    };\n    // By default does nothing\n    Span.prototype._setOperationName = function (name) {\n    };\n    // By default does nothing\n    Span.prototype._setBaggageItem = function (key, value) {\n    };\n    // By default does nothing\n    Span.prototype._getBaggageItem = function (key) {\n        return undefined;\n    };\n    // By default does nothing\n    //\n    // NOTE: both setTag() and addTags() map to this function. keyValuePairs\n    // will always be an associative array.\n    Span.prototype._addTags = function (keyValuePairs) {\n    };\n    // By default does nothing\n    Span.prototype._log = function (keyValuePairs, timestamp) {\n    };\n    // By default does nothing\n    //\n    // finishTime is expected to be either a number or undefined.\n    Span.prototype._finish = function (finishTime) {\n    };\n    return Span;\n}());\nexports.Span = Span;\nexports.default = Span;\n//# sourceMappingURL=span.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * SpanContext represents Span state that must propagate to descendant Spans\n * and across process boundaries.\n *\n * SpanContext is logically divided into two pieces: the user-level \"Baggage\"\n * (see setBaggageItem and getBaggageItem) that propagates across Span\n * boundaries and any Tracer-implementation-specific fields that are needed to\n * identify or otherwise contextualize the associated Span instance (e.g., a\n * <trace_id, span_id, sampled> tuple).\n */\nvar SpanContext = /** @class */ (function () {\n    function SpanContext() {\n    }\n    // The SpanContext is entirely implementation dependent\n    /**\n     * Returns a string representation of the implementation internal trace ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toTraceId = function () {\n        return '';\n    };\n    /**\n     * Returns a string representation of the implementation internal span ID.\n     *\n     * @returns {string}\n     */\n    SpanContext.prototype.toSpanId = function () {\n        return '';\n    };\n    return SpanContext;\n}());\nexports.SpanContext = SpanContext;\nexports.default = SpanContext;\n//# sourceMappingURL=span_context.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Functions = require(\"./functions\");\nvar Noop = require(\"./noop\");\nvar span_1 = require(\"./span\");\n/**\n * Tracer is the entry-point between the instrumentation API and the tracing\n * implementation.\n *\n * The default object acts as a no-op implementation.\n *\n * Note to implementators: derived classes can choose to directly implement the\n * methods in the \"OpenTracing API methods\" section, or optionally the subset of\n * underscore-prefixed methods to pick up the argument checking and handling\n * automatically from the base class.\n */\nvar Tracer = /** @class */ (function () {\n    function Tracer() {\n    }\n    // ---------------------------------------------------------------------- //\n    // OpenTracing API methods\n    // ---------------------------------------------------------------------- //\n    /**\n     * Starts and returns a new Span representing a logical unit of work.\n     *\n     * For example:\n     *\n     *     // Start a new (parentless) root Span:\n     *     var parent = Tracer.startSpan('DoWork');\n     *\n     *     // Start a new (child) Span:\n     *     var child = Tracer.startSpan('load-from-db', {\n     *         childOf: parent.context(),\n     *     });\n     *\n     *     // Start a new async (FollowsFrom) Span:\n     *     var child = Tracer.startSpan('async-cache-write', {\n     *         references: [\n     *             opentracing.followsFrom(parent.context())\n     *         ],\n     *     });\n     *\n     * @param {string} name - the name of the operation (REQUIRED).\n     * @param {SpanOptions} [options] - options for the newly created span.\n     * @return {Span} - a new Span object.\n     */\n    Tracer.prototype.startSpan = function (name, options) {\n        if (options === void 0) { options = {}; }\n        // Convert options.childOf to fields.references as needed.\n        if (options.childOf) {\n            // Convert from a Span or a SpanContext into a Reference.\n            var childOf = Functions.childOf(options.childOf);\n            if (options.references) {\n                options.references.push(childOf);\n            }\n            else {\n                options.references = [childOf];\n            }\n            delete (options.childOf);\n        }\n        return this._startSpan(name, options);\n    };\n    /**\n     * Injects the given SpanContext instance for cross-process propagation\n     * within `carrier`. The expected type of `carrier` depends on the value of\n     * `format.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     var clientSpan = ...;\n     *     ...\n     *     // Inject clientSpan into a text carrier.\n     *     var headersCarrier = {};\n     *     Tracer.inject(clientSpan.context(), Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     // Incorporate the textCarrier into the outbound HTTP request header\n     *     // map.\n     *     Object.assign(outboundHTTPReq.headers, headersCarrier);\n     *     // ... send the httpReq\n     *\n     * @param  {SpanContext} spanContext - the SpanContext to inject into the\n     *         carrier object. As a convenience, a Span instance may be passed\n     *         in instead (in which case its .context() is used for the\n     *         inject()).\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - see the documentation for the chosen `format`\n     *         for a description of the carrier object.\n     */\n    Tracer.prototype.inject = function (spanContext, format, carrier) {\n        // Allow the user to pass a Span instead of a SpanContext\n        if (spanContext instanceof span_1.default) {\n            spanContext = spanContext.context();\n        }\n        return this._inject(spanContext, format, carrier);\n    };\n    /**\n     * Returns a SpanContext instance extracted from `carrier` in the given\n     * `format`.\n     *\n     * OpenTracing defines a common set of `format` values (see\n     * FORMAT_TEXT_MAP, FORMAT_HTTP_HEADERS, and FORMAT_BINARY), and each has\n     * an expected carrier type.\n     *\n     * Consider this pseudocode example:\n     *\n     *     // Use the inbound HTTP request's headers as a text map carrier.\n     *     var headersCarrier = inboundHTTPReq.headers;\n     *     var wireCtx = Tracer.extract(Tracer.FORMAT_HTTP_HEADERS, headersCarrier);\n     *     var serverSpan = Tracer.startSpan('...', { childOf : wireCtx });\n     *\n     * @param  {string} format - the format of the carrier.\n     * @param  {any} carrier - the type of the carrier object is determined by\n     *         the format.\n     * @return {SpanContext}\n     *         The extracted SpanContext, or null if no such SpanContext could\n     *         be found in `carrier`\n     */\n    Tracer.prototype.extract = function (format, carrier) {\n        return this._extract(format, carrier);\n    };\n    // ---------------------------------------------------------------------- //\n    // Derived classes can choose to implement the below\n    // ---------------------------------------------------------------------- //\n    // NOTE: the input to this method is *always* an associative array. The\n    // public-facing startSpan() method normalizes the arguments so that\n    // all N implementations do not need to worry about variations in the call\n    // signature.\n    //\n    // The default behavior returns a no-op span.\n    Tracer.prototype._startSpan = function (name, fields) {\n        return Noop.span;\n    };\n    // The default behavior is a no-op.\n    Tracer.prototype._inject = function (spanContext, format, carrier) {\n    };\n    // The default behavior is to return a no-op SpanContext.\n    Tracer.prototype._extract = function (format, carrier) {\n        return Noop.spanContext;\n    };\n    return Tracer;\n}());\nexports.Tracer = Tracer;\nexports.default = Tracer;\n//# sourceMappingURL=tracer.js.map","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\n                (\"default:\");\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n */\nfunction Enum(name, values, options, comment, comments) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"  , this.options,\n        \"values\"   , this.values,\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"  , keepComments ? this.comment : undefined,\n        \"comments\" , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\n */\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"optional\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"optional\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {};\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.substr(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        if (skip(\"{\", true)) { // { a: \"foo\" b { c: \"bar\" } }\n            var result = {};\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next()))\n                    throw illegal(token, \"name\");\n\n                var value;\n                var propName = token;\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else {\n                    skip(\":\");\n                    if (peek() === \"{\")\n                        value = parseOptionValue(parent, name + \".\" + token);\n                    else {\n                        value = readValue(true);\n                        setOption(parent, name + \".\" + token, value);\n                    }\n                }\n                var prevValue = result[propName];\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n                result[propName] = value;\n                skip(\",\", true);\n            }\n            return result;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                case \"optional\":\n                    parseField(parent, token, reference);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        var cb = callback;\n        callback = null;\n        if (sync)\n            throw err;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        commentType = null,\n        commentText = null,\n        commentLine = 0,\n        commentLineEmpty = false,\n        commentIsLeading = false;\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        commentType = source.charAt(start++);\n        commentLine = line;\n        commentLineEmpty = false;\n        commentIsLeading = isLeading;\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                commentLineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        commentText = lines\n            .join(\"\\n\")\n            .trim();\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        // look for 1 or 2 slashes since startOffset would already point past\n        // the first slash that started the comment.\n        var isComment = /^\\s*\\/{1,2}/.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        if (trailingLine === undefined) {\n            if (commentLine === line - 1 && (alternateCommentMode || commentType === \"*\" || commentLineEmpty)) {\n                ret = commentIsLeading ? commentText : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (commentLine < trailingLine) {\n                peek();\n            }\n            if (commentLine === trailingLine && !commentLineEmpty && (alternateCommentMode || commentType === \"/\")) {\n                ret = commentIsLeading ? null : commentText;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].substr(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.substr(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Underscore.js-like wrapper to iterate object key-values. Note that even for completely\n// internal objects, packages may modify default Object prototypes and properties\n// (e.g. Ember.js) so it's almost never safe to assume a particular object can\n// iterated with for-in.\n// TODO: remove this function and replace with Object.keys, Object.values, ... (spread) or other.\nexport default function _each(obj, cb) {\n    if (!obj) {\n        return;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    for (let key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            cb(obj[key], key);\n        }\n    }\n}\n","// Underscore.js-like wrapper to left pad a string to a certain length with a character\nexport default function _leftpad(str, len, ch) {\n    str = String(str);\n    let i = -1;\n    if (!ch && ch !== 0) ch = ' ';\n    len -= str.length;\n    while (++i < len) {\n        str = ch + str;\n    }\n    return str;\n}\n","\nexport const LOG_INFO = 0;\nexport const LOG_WARN = 1;\nexport const LOG_ERROR = 2;\nexport const LOG_FATAL = 3;\n\nexport const LOG_LEVEL_TO_STRING = {\n    LOG_INFO  : 'I',\n    LOG_WARN  : 'W',\n    LOG_ERROR : 'E',\n    LOG_FATAL : 'F',\n};\nexport const LOG_STRING_TO_LEVEL = {\n    I : LOG_INFO,\n    W : LOG_WARN,\n    E : LOG_ERROR,\n    F : LOG_FATAL,\n};\n\n// The report interval for empty reports used to sample the clock skew\nexport const CLOCK_STATE_REFRESH_INTERVAL_MS = 350;\n\nexport const LIGHTSTEP_APP_URL_PREFIX = 'https://app.lightstep.com';\n\nexport const JOIN_ID_PREFIX = 'join:';\n\nexport const LS_META_EVENT_KEY = 'lightstep.meta_event';\nexport const LS_META_PROPAGATION_KEY = 'lightstep.propagation_format';\nexport const LS_META_TRACE_KEY = 'lightstep.trace_id';\nexport const LS_META_SPAN_KEY = 'lightstep.span_id';\nexport const LS_META_TRACER_GUID_KEY = 'lightstep.tracer_guid';\nexport const LS_META_EXTRACT = 'lightstep.extract_span';\nexport const LS_META_INJECT = 'lightstep.inject_span';\nexport const LS_META_SP_START = 'lightstep.span_start';\nexport const LS_META_SP_FINISH = 'lightstep.span_finish';\nexport const LS_META_TRACER_CREATE = 'lightstep.tracer_create';\n\nexport const FORMAT_B3 = 'format.b3';\n","// eslint-disable-next-line camelcase\nimport { crouton_thrift } from '../platform_abstraction_layer';\n\nlet proto = require('./generated_proto/collector_pb.js');\n\nexport default class AuthImp {\n    constructor(accessToken) {\n        this._accessToken = accessToken;\n    }\n\n    getAccessToken() {\n        if (typeof this._accessToken === 'undefined' || this._accessToken === null || this._accessToken.length === 0) {\n            return 'empty';\n        }\n\n        return this._accessToken;\n    }\n\n    toThrift() {\n        return new crouton_thrift.Auth({\n            access_token : this._accessToken,\n        });\n    }\n\n    toProto() {\n        let authProto = new proto.Auth();\n        authProto.setAccessToken(this._accessToken);\n        return authProto;\n    }\n}\n","\nexport function toString(value) {\n    return '' + value; // eslint-disable-line prefer-template\n}\n\nexport function toNumber(value) {\n    return Number(value);\n}\n\nexport function toBoolean(value) {\n    return !!value;\n}\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\nvar google_api_annotations_pb = require('./google/api/annotations_pb.js');\ngoog.exportSymbol('proto.lightstep.collector.Auth', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Command', null, global);\ngoog.exportSymbol('proto.lightstep.collector.InternalMetrics', null, global);\ngoog.exportSymbol('proto.lightstep.collector.KeyValue', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Log', null, global);\ngoog.exportSymbol('proto.lightstep.collector.MetricsSample', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Reference', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Reference.Relationship', null, global);\ngoog.exportSymbol('proto.lightstep.collector.ReportRequest', null, global);\ngoog.exportSymbol('proto.lightstep.collector.ReportResponse', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Reporter', null, global);\ngoog.exportSymbol('proto.lightstep.collector.Span', null, global);\ngoog.exportSymbol('proto.lightstep.collector.SpanContext', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.SpanContext = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lightstep.collector.SpanContext, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.SpanContext.displayName = 'proto.lightstep.collector.SpanContext';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.SpanContext.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.SpanContext.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.SpanContext} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.SpanContext.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    traceId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    spanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    baggageMap: (f = msg.getBaggageMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.SpanContext}\n */\nproto.lightstep.collector.SpanContext.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.SpanContext;\n  return proto.lightstep.collector.SpanContext.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.SpanContext} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.SpanContext}\n */\nproto.lightstep.collector.SpanContext.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setTraceId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setSpanId(value);\n      break;\n    case 3:\n      var value = msg.getBaggageMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, \"\");\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.SpanContext.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.SpanContext.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.SpanContext} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.SpanContext.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTraceId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getSpanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getBaggageMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);\n  }\n};\n\n\n/**\n * optional uint64 trace_id = 1;\n * @return {string}\n */\nproto.lightstep.collector.SpanContext.prototype.getTraceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.SpanContext.prototype.setTraceId = function(value) {\n  jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 span_id = 2;\n * @return {string}\n */\nproto.lightstep.collector.SpanContext.prototype.getSpanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.SpanContext.prototype.setSpanId = function(value) {\n  jspb.Message.setProto3StringIntField(this, 2, value);\n};\n\n\n/**\n * map<string, string> baggage = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,string>}\n */\nproto.lightstep.collector.SpanContext.prototype.getBaggageMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,string>} */ (\n      jspb.Message.getMapField(this, 3, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lightstep.collector.SpanContext.prototype.clearBaggageMap = function() {\n  this.getBaggageMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.KeyValue = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lightstep.collector.KeyValue.oneofGroups_);\n};\ngoog.inherits(proto.lightstep.collector.KeyValue, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.KeyValue.displayName = 'proto.lightstep.collector.KeyValue';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lightstep.collector.KeyValue.oneofGroups_ = [[2,3,4,5,6]];\n\n/**\n * @enum {number}\n */\nproto.lightstep.collector.KeyValue.ValueCase = {\n  VALUE_NOT_SET: 0,\n  STRING_VALUE: 2,\n  INT_VALUE: 3,\n  DOUBLE_VALUE: 4,\n  BOOL_VALUE: 5,\n  JSON_VALUE: 6\n};\n\n/**\n * @return {proto.lightstep.collector.KeyValue.ValueCase}\n */\nproto.lightstep.collector.KeyValue.prototype.getValueCase = function() {\n  return /** @type {proto.lightstep.collector.KeyValue.ValueCase} */(jspb.Message.computeOneofCase(this, proto.lightstep.collector.KeyValue.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.KeyValue.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.KeyValue.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.KeyValue} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.KeyValue.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    stringValue: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    intValue: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\n    doubleValue: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),\n    boolValue: jspb.Message.getFieldWithDefault(msg, 5, false),\n    jsonValue: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.KeyValue}\n */\nproto.lightstep.collector.KeyValue.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.KeyValue;\n  return proto.lightstep.collector.KeyValue.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.KeyValue} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.KeyValue}\n */\nproto.lightstep.collector.KeyValue.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStringValue(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readInt64String());\n      msg.setIntValue(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setDoubleValue(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBoolValue(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJsonValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.KeyValue.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.KeyValue.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.KeyValue} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.KeyValue.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64String(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key = 1;\n * @return {string}\n */\nproto.lightstep.collector.KeyValue.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.KeyValue.prototype.setKey = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string string_value = 2;\n * @return {string}\n */\nproto.lightstep.collector.KeyValue.prototype.getStringValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.KeyValue.prototype.setStringValue = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lightstep.collector.KeyValue.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.KeyValue.prototype.clearStringValue = function() {\n  jspb.Message.setOneofField(this, 2, proto.lightstep.collector.KeyValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.hasStringValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 int_value = 3;\n * @return {string}\n */\nproto.lightstep.collector.KeyValue.prototype.getIntValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.KeyValue.prototype.setIntValue = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.lightstep.collector.KeyValue.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.KeyValue.prototype.clearIntValue = function() {\n  jspb.Message.setOneofField(this, 3, proto.lightstep.collector.KeyValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.hasIntValue = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional double double_value = 4;\n * @return {number}\n */\nproto.lightstep.collector.KeyValue.prototype.getDoubleValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lightstep.collector.KeyValue.prototype.setDoubleValue = function(value) {\n  jspb.Message.setOneofField(this, 4, proto.lightstep.collector.KeyValue.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.KeyValue.prototype.clearDoubleValue = function() {\n  jspb.Message.setOneofField(this, 4, proto.lightstep.collector.KeyValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.hasDoubleValue = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional bool bool_value = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.getBoolValue = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lightstep.collector.KeyValue.prototype.setBoolValue = function(value) {\n  jspb.Message.setOneofField(this, 5, proto.lightstep.collector.KeyValue.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.KeyValue.prototype.clearBoolValue = function() {\n  jspb.Message.setOneofField(this, 5, proto.lightstep.collector.KeyValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.hasBoolValue = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string json_value = 6;\n * @return {string}\n */\nproto.lightstep.collector.KeyValue.prototype.getJsonValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.KeyValue.prototype.setJsonValue = function(value) {\n  jspb.Message.setOneofField(this, 6, proto.lightstep.collector.KeyValue.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.KeyValue.prototype.clearJsonValue = function() {\n  jspb.Message.setOneofField(this, 6, proto.lightstep.collector.KeyValue.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.KeyValue.prototype.hasJsonValue = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Log = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.Log.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.Log, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Log.displayName = 'proto.lightstep.collector.Log';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.Log.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Log.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Log.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Log} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Log.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),\n    proto.lightstep.collector.KeyValue.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Log}\n */\nproto.lightstep.collector.Log.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Log;\n  return proto.lightstep.collector.Log.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Log} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Log}\n */\nproto.lightstep.collector.Log.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = new proto.lightstep.collector.KeyValue;\n      reader.readMessage(value,proto.lightstep.collector.KeyValue.deserializeBinaryFromReader);\n      msg.addFields(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Log.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Log.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Log} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Log.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getFieldsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lightstep.collector.KeyValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional google.protobuf.Timestamp timestamp = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.lightstep.collector.Log.prototype.getTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.lightstep.collector.Log.prototype.setTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lightstep.collector.Log.prototype.clearTimestamp = function() {\n  this.setTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.Log.prototype.hasTimestamp = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated KeyValue fields = 2;\n * @return {!Array<!proto.lightstep.collector.KeyValue>}\n */\nproto.lightstep.collector.Log.prototype.getFieldsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.KeyValue>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.KeyValue, 2));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.KeyValue>} value */\nproto.lightstep.collector.Log.prototype.setFieldsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.KeyValue=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.KeyValue}\n */\nproto.lightstep.collector.Log.prototype.addFields = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lightstep.collector.KeyValue, opt_index);\n};\n\n\nproto.lightstep.collector.Log.prototype.clearFieldsList = function() {\n  this.setFieldsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Reference = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lightstep.collector.Reference, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Reference.displayName = 'proto.lightstep.collector.Reference';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Reference.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Reference.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Reference} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Reference.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    relationship: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    spanContext: (f = msg.getSpanContext()) && proto.lightstep.collector.SpanContext.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Reference}\n */\nproto.lightstep.collector.Reference.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Reference;\n  return proto.lightstep.collector.Reference.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Reference} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Reference}\n */\nproto.lightstep.collector.Reference.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lightstep.collector.Reference.Relationship} */ (reader.readEnum());\n      msg.setRelationship(value);\n      break;\n    case 2:\n      var value = new proto.lightstep.collector.SpanContext;\n      reader.readMessage(value,proto.lightstep.collector.SpanContext.deserializeBinaryFromReader);\n      msg.setSpanContext(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Reference.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Reference.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Reference} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Reference.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRelationship();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getSpanContext();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lightstep.collector.SpanContext.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lightstep.collector.Reference.Relationship = {\n  CHILD_OF: 0,\n  FOLLOWS_FROM: 1\n};\n\n/**\n * optional Relationship relationship = 1;\n * @return {!proto.lightstep.collector.Reference.Relationship}\n */\nproto.lightstep.collector.Reference.prototype.getRelationship = function() {\n  return /** @type {!proto.lightstep.collector.Reference.Relationship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lightstep.collector.Reference.Relationship} value */\nproto.lightstep.collector.Reference.prototype.setRelationship = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional SpanContext span_context = 2;\n * @return {?proto.lightstep.collector.SpanContext}\n */\nproto.lightstep.collector.Reference.prototype.getSpanContext = function() {\n  return /** @type{?proto.lightstep.collector.SpanContext} */ (\n    jspb.Message.getWrapperField(this, proto.lightstep.collector.SpanContext, 2));\n};\n\n\n/** @param {?proto.lightstep.collector.SpanContext|undefined} value */\nproto.lightstep.collector.Reference.prototype.setSpanContext = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lightstep.collector.Reference.prototype.clearSpanContext = function() {\n  this.setSpanContext(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.Reference.prototype.hasSpanContext = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Span = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.Span.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.Span, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Span.displayName = 'proto.lightstep.collector.Span';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.Span.repeatedFields_ = [3,6,7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Span.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Span.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Span} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Span.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    spanContext: (f = msg.getSpanContext()) && proto.lightstep.collector.SpanContext.toObject(includeInstance, f),\n    operationName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    referencesList: jspb.Message.toObjectList(msg.getReferencesList(),\n    proto.lightstep.collector.Reference.toObject, includeInstance),\n    startTimestamp: (f = msg.getStartTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    durationMicros: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    tagsList: jspb.Message.toObjectList(msg.getTagsList(),\n    proto.lightstep.collector.KeyValue.toObject, includeInstance),\n    logsList: jspb.Message.toObjectList(msg.getLogsList(),\n    proto.lightstep.collector.Log.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Span}\n */\nproto.lightstep.collector.Span.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Span;\n  return proto.lightstep.collector.Span.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Span} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Span}\n */\nproto.lightstep.collector.Span.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lightstep.collector.SpanContext;\n      reader.readMessage(value,proto.lightstep.collector.SpanContext.deserializeBinaryFromReader);\n      msg.setSpanContext(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOperationName(value);\n      break;\n    case 3:\n      var value = new proto.lightstep.collector.Reference;\n      reader.readMessage(value,proto.lightstep.collector.Reference.deserializeBinaryFromReader);\n      msg.addReferences(value);\n      break;\n    case 4:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setStartTimestamp(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setDurationMicros(value);\n      break;\n    case 6:\n      var value = new proto.lightstep.collector.KeyValue;\n      reader.readMessage(value,proto.lightstep.collector.KeyValue.deserializeBinaryFromReader);\n      msg.addTags(value);\n      break;\n    case 7:\n      var value = new proto.lightstep.collector.Log;\n      reader.readMessage(value,proto.lightstep.collector.Log.deserializeBinaryFromReader);\n      msg.addLogs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Span.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Span.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Span} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Span.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSpanContext();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lightstep.collector.SpanContext.serializeBinaryToWriter\n    );\n  }\n  f = message.getOperationName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReferencesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lightstep.collector.Reference.serializeBinaryToWriter\n    );\n  }\n  f = message.getStartTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getDurationMicros();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getTagsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.lightstep.collector.KeyValue.serializeBinaryToWriter\n    );\n  }\n  f = message.getLogsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.lightstep.collector.Log.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SpanContext span_context = 1;\n * @return {?proto.lightstep.collector.SpanContext}\n */\nproto.lightstep.collector.Span.prototype.getSpanContext = function() {\n  return /** @type{?proto.lightstep.collector.SpanContext} */ (\n    jspb.Message.getWrapperField(this, proto.lightstep.collector.SpanContext, 1));\n};\n\n\n/** @param {?proto.lightstep.collector.SpanContext|undefined} value */\nproto.lightstep.collector.Span.prototype.setSpanContext = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lightstep.collector.Span.prototype.clearSpanContext = function() {\n  this.setSpanContext(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.Span.prototype.hasSpanContext = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string operation_name = 2;\n * @return {string}\n */\nproto.lightstep.collector.Span.prototype.getOperationName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.Span.prototype.setOperationName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated Reference references = 3;\n * @return {!Array<!proto.lightstep.collector.Reference>}\n */\nproto.lightstep.collector.Span.prototype.getReferencesList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.Reference>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.Reference, 3));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.Reference>} value */\nproto.lightstep.collector.Span.prototype.setReferencesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.Reference=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.Reference}\n */\nproto.lightstep.collector.Span.prototype.addReferences = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lightstep.collector.Reference, opt_index);\n};\n\n\nproto.lightstep.collector.Span.prototype.clearReferencesList = function() {\n  this.setReferencesList([]);\n};\n\n\n/**\n * optional google.protobuf.Timestamp start_timestamp = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.lightstep.collector.Span.prototype.getStartTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.lightstep.collector.Span.prototype.setStartTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lightstep.collector.Span.prototype.clearStartTimestamp = function() {\n  this.setStartTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.Span.prototype.hasStartTimestamp = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional uint64 duration_micros = 5;\n * @return {string}\n */\nproto.lightstep.collector.Span.prototype.getDurationMicros = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.Span.prototype.setDurationMicros = function(value) {\n  jspb.Message.setProto3StringIntField(this, 5, value);\n};\n\n\n/**\n * repeated KeyValue tags = 6;\n * @return {!Array<!proto.lightstep.collector.KeyValue>}\n */\nproto.lightstep.collector.Span.prototype.getTagsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.KeyValue>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.KeyValue, 6));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.KeyValue>} value */\nproto.lightstep.collector.Span.prototype.setTagsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.KeyValue=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.KeyValue}\n */\nproto.lightstep.collector.Span.prototype.addTags = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.lightstep.collector.KeyValue, opt_index);\n};\n\n\nproto.lightstep.collector.Span.prototype.clearTagsList = function() {\n  this.setTagsList([]);\n};\n\n\n/**\n * repeated Log logs = 7;\n * @return {!Array<!proto.lightstep.collector.Log>}\n */\nproto.lightstep.collector.Span.prototype.getLogsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.Log>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.Log, 7));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.Log>} value */\nproto.lightstep.collector.Span.prototype.setLogsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.Log}\n */\nproto.lightstep.collector.Span.prototype.addLogs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.lightstep.collector.Log, opt_index);\n};\n\n\nproto.lightstep.collector.Span.prototype.clearLogsList = function() {\n  this.setLogsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Reporter = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.Reporter.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.Reporter, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Reporter.displayName = 'proto.lightstep.collector.Reporter';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.Reporter.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Reporter.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Reporter.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Reporter} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Reporter.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    reporterId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    tagsList: jspb.Message.toObjectList(msg.getTagsList(),\n    proto.lightstep.collector.KeyValue.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Reporter}\n */\nproto.lightstep.collector.Reporter.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Reporter;\n  return proto.lightstep.collector.Reporter.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Reporter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Reporter}\n */\nproto.lightstep.collector.Reporter.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setReporterId(value);\n      break;\n    case 4:\n      var value = new proto.lightstep.collector.KeyValue;\n      reader.readMessage(value,proto.lightstep.collector.KeyValue.deserializeBinaryFromReader);\n      msg.addTags(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Reporter.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Reporter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Reporter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Reporter.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReporterId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getTagsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lightstep.collector.KeyValue.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 reporter_id = 1;\n * @return {string}\n */\nproto.lightstep.collector.Reporter.prototype.getReporterId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.Reporter.prototype.setReporterId = function(value) {\n  jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * repeated KeyValue tags = 4;\n * @return {!Array<!proto.lightstep.collector.KeyValue>}\n */\nproto.lightstep.collector.Reporter.prototype.getTagsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.KeyValue>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.KeyValue, 4));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.KeyValue>} value */\nproto.lightstep.collector.Reporter.prototype.setTagsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.KeyValue=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.KeyValue}\n */\nproto.lightstep.collector.Reporter.prototype.addTags = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lightstep.collector.KeyValue, opt_index);\n};\n\n\nproto.lightstep.collector.Reporter.prototype.clearTagsList = function() {\n  this.setTagsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.MetricsSample = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lightstep.collector.MetricsSample.oneofGroups_);\n};\ngoog.inherits(proto.lightstep.collector.MetricsSample, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.MetricsSample.displayName = 'proto.lightstep.collector.MetricsSample';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lightstep.collector.MetricsSample.oneofGroups_ = [[2,3]];\n\n/**\n * @enum {number}\n */\nproto.lightstep.collector.MetricsSample.ValueCase = {\n  VALUE_NOT_SET: 0,\n  INT_VALUE: 2,\n  DOUBLE_VALUE: 3\n};\n\n/**\n * @return {proto.lightstep.collector.MetricsSample.ValueCase}\n */\nproto.lightstep.collector.MetricsSample.prototype.getValueCase = function() {\n  return /** @type {proto.lightstep.collector.MetricsSample.ValueCase} */(jspb.Message.computeOneofCase(this, proto.lightstep.collector.MetricsSample.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.MetricsSample.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.MetricsSample.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.MetricsSample} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.MetricsSample.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    intValue: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    doubleValue: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.MetricsSample}\n */\nproto.lightstep.collector.MetricsSample.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.MetricsSample;\n  return proto.lightstep.collector.MetricsSample.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.MetricsSample} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.MetricsSample}\n */\nproto.lightstep.collector.MetricsSample.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readInt64String());\n      msg.setIntValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setDoubleValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.MetricsSample.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.MetricsSample.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.MetricsSample} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.MetricsSample.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64String(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeDouble(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.lightstep.collector.MetricsSample.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.MetricsSample.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 int_value = 2;\n * @return {string}\n */\nproto.lightstep.collector.MetricsSample.prototype.getIntValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.MetricsSample.prototype.setIntValue = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lightstep.collector.MetricsSample.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.MetricsSample.prototype.clearIntValue = function() {\n  jspb.Message.setOneofField(this, 2, proto.lightstep.collector.MetricsSample.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.MetricsSample.prototype.hasIntValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional double double_value = 3;\n * @return {number}\n */\nproto.lightstep.collector.MetricsSample.prototype.getDoubleValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lightstep.collector.MetricsSample.prototype.setDoubleValue = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.lightstep.collector.MetricsSample.oneofGroups_[0], value);\n};\n\n\nproto.lightstep.collector.MetricsSample.prototype.clearDoubleValue = function() {\n  jspb.Message.setOneofField(this, 3, proto.lightstep.collector.MetricsSample.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.MetricsSample.prototype.hasDoubleValue = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.InternalMetrics = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.InternalMetrics.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.InternalMetrics, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.InternalMetrics.displayName = 'proto.lightstep.collector.InternalMetrics';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.InternalMetrics.repeatedFields_ = [3,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.InternalMetrics.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.InternalMetrics.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.InternalMetrics} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.InternalMetrics.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startTimestamp: (f = msg.getStartTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    durationMicros: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    logsList: jspb.Message.toObjectList(msg.getLogsList(),\n    proto.lightstep.collector.Log.toObject, includeInstance),\n    countsList: jspb.Message.toObjectList(msg.getCountsList(),\n    proto.lightstep.collector.MetricsSample.toObject, includeInstance),\n    gaugesList: jspb.Message.toObjectList(msg.getGaugesList(),\n    proto.lightstep.collector.MetricsSample.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.InternalMetrics}\n */\nproto.lightstep.collector.InternalMetrics.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.InternalMetrics;\n  return proto.lightstep.collector.InternalMetrics.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.InternalMetrics} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.InternalMetrics}\n */\nproto.lightstep.collector.InternalMetrics.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setStartTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setDurationMicros(value);\n      break;\n    case 3:\n      var value = new proto.lightstep.collector.Log;\n      reader.readMessage(value,proto.lightstep.collector.Log.deserializeBinaryFromReader);\n      msg.addLogs(value);\n      break;\n    case 4:\n      var value = new proto.lightstep.collector.MetricsSample;\n      reader.readMessage(value,proto.lightstep.collector.MetricsSample.deserializeBinaryFromReader);\n      msg.addCounts(value);\n      break;\n    case 5:\n      var value = new proto.lightstep.collector.MetricsSample;\n      reader.readMessage(value,proto.lightstep.collector.MetricsSample.deserializeBinaryFromReader);\n      msg.addGauges(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.InternalMetrics.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.InternalMetrics.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.InternalMetrics} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.InternalMetrics.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getDurationMicros();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getLogsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lightstep.collector.Log.serializeBinaryToWriter\n    );\n  }\n  f = message.getCountsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lightstep.collector.MetricsSample.serializeBinaryToWriter\n    );\n  }\n  f = message.getGaugesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.lightstep.collector.MetricsSample.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional google.protobuf.Timestamp start_timestamp = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.lightstep.collector.InternalMetrics.prototype.getStartTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.lightstep.collector.InternalMetrics.prototype.setStartTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lightstep.collector.InternalMetrics.prototype.clearStartTimestamp = function() {\n  this.setStartTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.InternalMetrics.prototype.hasStartTimestamp = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 duration_micros = 2;\n * @return {string}\n */\nproto.lightstep.collector.InternalMetrics.prototype.getDurationMicros = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.InternalMetrics.prototype.setDurationMicros = function(value) {\n  jspb.Message.setProto3StringIntField(this, 2, value);\n};\n\n\n/**\n * repeated Log logs = 3;\n * @return {!Array<!proto.lightstep.collector.Log>}\n */\nproto.lightstep.collector.InternalMetrics.prototype.getLogsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.Log>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.Log, 3));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.Log>} value */\nproto.lightstep.collector.InternalMetrics.prototype.setLogsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.Log}\n */\nproto.lightstep.collector.InternalMetrics.prototype.addLogs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lightstep.collector.Log, opt_index);\n};\n\n\nproto.lightstep.collector.InternalMetrics.prototype.clearLogsList = function() {\n  this.setLogsList([]);\n};\n\n\n/**\n * repeated MetricsSample counts = 4;\n * @return {!Array<!proto.lightstep.collector.MetricsSample>}\n */\nproto.lightstep.collector.InternalMetrics.prototype.getCountsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.MetricsSample>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.MetricsSample, 4));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.MetricsSample>} value */\nproto.lightstep.collector.InternalMetrics.prototype.setCountsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.MetricsSample=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.MetricsSample}\n */\nproto.lightstep.collector.InternalMetrics.prototype.addCounts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lightstep.collector.MetricsSample, opt_index);\n};\n\n\nproto.lightstep.collector.InternalMetrics.prototype.clearCountsList = function() {\n  this.setCountsList([]);\n};\n\n\n/**\n * repeated MetricsSample gauges = 5;\n * @return {!Array<!proto.lightstep.collector.MetricsSample>}\n */\nproto.lightstep.collector.InternalMetrics.prototype.getGaugesList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.MetricsSample>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.MetricsSample, 5));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.MetricsSample>} value */\nproto.lightstep.collector.InternalMetrics.prototype.setGaugesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.MetricsSample=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.MetricsSample}\n */\nproto.lightstep.collector.InternalMetrics.prototype.addGauges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.lightstep.collector.MetricsSample, opt_index);\n};\n\n\nproto.lightstep.collector.InternalMetrics.prototype.clearGaugesList = function() {\n  this.setGaugesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Auth = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lightstep.collector.Auth, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Auth.displayName = 'proto.lightstep.collector.Auth';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Auth.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Auth.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Auth} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Auth.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accessToken: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Auth}\n */\nproto.lightstep.collector.Auth.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Auth;\n  return proto.lightstep.collector.Auth.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Auth} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Auth}\n */\nproto.lightstep.collector.Auth.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccessToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Auth.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Auth.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Auth} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Auth.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccessToken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string access_token = 1;\n * @return {string}\n */\nproto.lightstep.collector.Auth.prototype.getAccessToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.Auth.prototype.setAccessToken = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.ReportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.ReportRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.ReportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.ReportRequest.displayName = 'proto.lightstep.collector.ReportRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.ReportRequest.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.ReportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.ReportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.ReportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.ReportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    reporter: (f = msg.getReporter()) && proto.lightstep.collector.Reporter.toObject(includeInstance, f),\n    auth: (f = msg.getAuth()) && proto.lightstep.collector.Auth.toObject(includeInstance, f),\n    spansList: jspb.Message.toObjectList(msg.getSpansList(),\n    proto.lightstep.collector.Span.toObject, includeInstance),\n    timestampOffsetMicros: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    internalMetrics: (f = msg.getInternalMetrics()) && proto.lightstep.collector.InternalMetrics.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.ReportRequest}\n */\nproto.lightstep.collector.ReportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.ReportRequest;\n  return proto.lightstep.collector.ReportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.ReportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.ReportRequest}\n */\nproto.lightstep.collector.ReportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lightstep.collector.Reporter;\n      reader.readMessage(value,proto.lightstep.collector.Reporter.deserializeBinaryFromReader);\n      msg.setReporter(value);\n      break;\n    case 2:\n      var value = new proto.lightstep.collector.Auth;\n      reader.readMessage(value,proto.lightstep.collector.Auth.deserializeBinaryFromReader);\n      msg.setAuth(value);\n      break;\n    case 3:\n      var value = new proto.lightstep.collector.Span;\n      reader.readMessage(value,proto.lightstep.collector.Span.deserializeBinaryFromReader);\n      msg.addSpans(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readInt64String());\n      msg.setTimestampOffsetMicros(value);\n      break;\n    case 6:\n      var value = new proto.lightstep.collector.InternalMetrics;\n      reader.readMessage(value,proto.lightstep.collector.InternalMetrics.deserializeBinaryFromReader);\n      msg.setInternalMetrics(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.ReportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.ReportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.ReportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.ReportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReporter();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lightstep.collector.Reporter.serializeBinaryToWriter\n    );\n  }\n  f = message.getAuth();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lightstep.collector.Auth.serializeBinaryToWriter\n    );\n  }\n  f = message.getSpansList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lightstep.collector.Span.serializeBinaryToWriter\n    );\n  }\n  f = message.getTimestampOffsetMicros();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeInt64String(\n      5,\n      f\n    );\n  }\n  f = message.getInternalMetrics();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lightstep.collector.InternalMetrics.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Reporter reporter = 1;\n * @return {?proto.lightstep.collector.Reporter}\n */\nproto.lightstep.collector.ReportRequest.prototype.getReporter = function() {\n  return /** @type{?proto.lightstep.collector.Reporter} */ (\n    jspb.Message.getWrapperField(this, proto.lightstep.collector.Reporter, 1));\n};\n\n\n/** @param {?proto.lightstep.collector.Reporter|undefined} value */\nproto.lightstep.collector.ReportRequest.prototype.setReporter = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lightstep.collector.ReportRequest.prototype.clearReporter = function() {\n  this.setReporter(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.ReportRequest.prototype.hasReporter = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Auth auth = 2;\n * @return {?proto.lightstep.collector.Auth}\n */\nproto.lightstep.collector.ReportRequest.prototype.getAuth = function() {\n  return /** @type{?proto.lightstep.collector.Auth} */ (\n    jspb.Message.getWrapperField(this, proto.lightstep.collector.Auth, 2));\n};\n\n\n/** @param {?proto.lightstep.collector.Auth|undefined} value */\nproto.lightstep.collector.ReportRequest.prototype.setAuth = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lightstep.collector.ReportRequest.prototype.clearAuth = function() {\n  this.setAuth(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.ReportRequest.prototype.hasAuth = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated Span spans = 3;\n * @return {!Array<!proto.lightstep.collector.Span>}\n */\nproto.lightstep.collector.ReportRequest.prototype.getSpansList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.Span>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.Span, 3));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.Span>} value */\nproto.lightstep.collector.ReportRequest.prototype.setSpansList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.Span=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.Span}\n */\nproto.lightstep.collector.ReportRequest.prototype.addSpans = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lightstep.collector.Span, opt_index);\n};\n\n\nproto.lightstep.collector.ReportRequest.prototype.clearSpansList = function() {\n  this.setSpansList([]);\n};\n\n\n/**\n * optional int64 timestamp_offset_micros = 5;\n * @return {string}\n */\nproto.lightstep.collector.ReportRequest.prototype.getTimestampOffsetMicros = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lightstep.collector.ReportRequest.prototype.setTimestampOffsetMicros = function(value) {\n  jspb.Message.setProto3StringIntField(this, 5, value);\n};\n\n\n/**\n * optional InternalMetrics internal_metrics = 6;\n * @return {?proto.lightstep.collector.InternalMetrics}\n */\nproto.lightstep.collector.ReportRequest.prototype.getInternalMetrics = function() {\n  return /** @type{?proto.lightstep.collector.InternalMetrics} */ (\n    jspb.Message.getWrapperField(this, proto.lightstep.collector.InternalMetrics, 6));\n};\n\n\n/** @param {?proto.lightstep.collector.InternalMetrics|undefined} value */\nproto.lightstep.collector.ReportRequest.prototype.setInternalMetrics = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.lightstep.collector.ReportRequest.prototype.clearInternalMetrics = function() {\n  this.setInternalMetrics(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.ReportRequest.prototype.hasInternalMetrics = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.Command = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lightstep.collector.Command, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.Command.displayName = 'proto.lightstep.collector.Command';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.Command.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.Command.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.Command} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Command.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    disable: jspb.Message.getFieldWithDefault(msg, 1, false),\n    devMode: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.Command}\n */\nproto.lightstep.collector.Command.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.Command;\n  return proto.lightstep.collector.Command.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.Command} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.Command}\n */\nproto.lightstep.collector.Command.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisable(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDevMode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.Command.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.Command.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.Command} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.Command.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDisable();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getDevMode();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool disable = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lightstep.collector.Command.prototype.getDisable = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lightstep.collector.Command.prototype.setDisable = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool dev_mode = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lightstep.collector.Command.prototype.getDevMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lightstep.collector.Command.prototype.setDevMode = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lightstep.collector.ReportResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lightstep.collector.ReportResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lightstep.collector.ReportResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lightstep.collector.ReportResponse.displayName = 'proto.lightstep.collector.ReportResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lightstep.collector.ReportResponse.repeatedFields_ = [1,4,5,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lightstep.collector.ReportResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lightstep.collector.ReportResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lightstep.collector.ReportResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.ReportResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),\n    proto.lightstep.collector.Command.toObject, includeInstance),\n    receiveTimestamp: (f = msg.getReceiveTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    transmitTimestamp: (f = msg.getTransmitTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    errorsList: jspb.Message.getRepeatedField(msg, 4),\n    warningsList: jspb.Message.getRepeatedField(msg, 5),\n    infosList: jspb.Message.getRepeatedField(msg, 6)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lightstep.collector.ReportResponse}\n */\nproto.lightstep.collector.ReportResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lightstep.collector.ReportResponse;\n  return proto.lightstep.collector.ReportResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lightstep.collector.ReportResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lightstep.collector.ReportResponse}\n */\nproto.lightstep.collector.ReportResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lightstep.collector.Command;\n      reader.readMessage(value,proto.lightstep.collector.Command.deserializeBinaryFromReader);\n      msg.addCommands(value);\n      break;\n    case 2:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setReceiveTimestamp(value);\n      break;\n    case 3:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTransmitTimestamp(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addErrors(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addWarnings(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addInfos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lightstep.collector.ReportResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lightstep.collector.ReportResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lightstep.collector.ReportResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lightstep.collector.ReportResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCommandsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lightstep.collector.Command.serializeBinaryToWriter\n    );\n  }\n  f = message.getReceiveTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransmitTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      4,\n      f\n    );\n  }\n  f = message.getWarningsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      5,\n      f\n    );\n  }\n  f = message.getInfosList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Command commands = 1;\n * @return {!Array<!proto.lightstep.collector.Command>}\n */\nproto.lightstep.collector.ReportResponse.prototype.getCommandsList = function() {\n  return /** @type{!Array<!proto.lightstep.collector.Command>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lightstep.collector.Command, 1));\n};\n\n\n/** @param {!Array<!proto.lightstep.collector.Command>} value */\nproto.lightstep.collector.ReportResponse.prototype.setCommandsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lightstep.collector.Command=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lightstep.collector.Command}\n */\nproto.lightstep.collector.ReportResponse.prototype.addCommands = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lightstep.collector.Command, opt_index);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearCommandsList = function() {\n  this.setCommandsList([]);\n};\n\n\n/**\n * optional google.protobuf.Timestamp receive_timestamp = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.lightstep.collector.ReportResponse.prototype.getReceiveTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.lightstep.collector.ReportResponse.prototype.setReceiveTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearReceiveTimestamp = function() {\n  this.setReceiveTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.ReportResponse.prototype.hasReceiveTimestamp = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional google.protobuf.Timestamp transmit_timestamp = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.lightstep.collector.ReportResponse.prototype.getTransmitTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.lightstep.collector.ReportResponse.prototype.setTransmitTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearTransmitTimestamp = function() {\n  this.setTransmitTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lightstep.collector.ReportResponse.prototype.hasTransmitTimestamp = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated string errors = 4;\n * @return {!Array<string>}\n */\nproto.lightstep.collector.ReportResponse.prototype.getErrorsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));\n};\n\n\n/** @param {!Array<string>} value */\nproto.lightstep.collector.ReportResponse.prototype.setErrorsList = function(value) {\n  jspb.Message.setField(this, 4, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lightstep.collector.ReportResponse.prototype.addErrors = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 4, value, opt_index);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearErrorsList = function() {\n  this.setErrorsList([]);\n};\n\n\n/**\n * repeated string warnings = 5;\n * @return {!Array<string>}\n */\nproto.lightstep.collector.ReportResponse.prototype.getWarningsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));\n};\n\n\n/** @param {!Array<string>} value */\nproto.lightstep.collector.ReportResponse.prototype.setWarningsList = function(value) {\n  jspb.Message.setField(this, 5, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lightstep.collector.ReportResponse.prototype.addWarnings = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearWarningsList = function() {\n  this.setWarningsList([]);\n};\n\n\n/**\n * repeated string infos = 6;\n * @return {!Array<string>}\n */\nproto.lightstep.collector.ReportResponse.prototype.getInfosList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/** @param {!Array<string>} value */\nproto.lightstep.collector.ReportResponse.prototype.setInfosList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lightstep.collector.ReportResponse.prototype.addInfos = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.lightstep.collector.ReportResponse.prototype.clearInfosList = function() {\n  this.setInfosList([]);\n};\n\n\ngoog.object.extend(exports, proto.lightstep.collector);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_api_http_pb = require('../../google/api/http_pb.js');\nvar google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');\ngoog.exportSymbol('proto.google.api.http', null, global);\n\n/**\n * A tuple of {field number, class constructor} for the extension\n * field named `http`.\n * @type {!jspb.ExtensionFieldInfo<!proto.google.api.HttpRule>}\n */\nproto.google.api.http = new jspb.ExtensionFieldInfo(\n    72295728,\n    {http: 0},\n    google_api_http_pb.HttpRule,\n     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (\n         google_api_http_pb.HttpRule.toObject),\n    0);\n\ngoogle_protobuf_descriptor_pb.MethodOptions.extensionsBinary[72295728] = new jspb.ExtensionFieldBinaryInfo(\n    proto.google.api.http,\n    jspb.BinaryReader.prototype.readMessage,\n    jspb.BinaryWriter.prototype.writeMessage,\n    google_api_http_pb.HttpRule.serializeBinaryToWriter,\n    google_api_http_pb.HttpRule.deserializeBinaryFromReader,\n    false);\n// This registers the extension field with the extended class, so that\n// toObject() will function correctly.\ngoogle_protobuf_descriptor_pb.MethodOptions.extensions[72295728] = proto.google.api.http;\n\ngoog.object.extend(exports, proto.google.api);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.google.api.CustomHttpPattern', null, global);\ngoog.exportSymbol('proto.google.api.Http', null, global);\ngoog.exportSymbol('proto.google.api.HttpRule', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.api.Http = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.api.Http.repeatedFields_, null);\n};\ngoog.inherits(proto.google.api.Http, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.api.Http.displayName = 'proto.google.api.Http';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.api.Http.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.api.Http.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.api.Http.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.api.Http} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.Http.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rulesList: jspb.Message.toObjectList(msg.getRulesList(),\n    proto.google.api.HttpRule.toObject, includeInstance),\n    fullyDecodeReservedExpansion: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.api.Http}\n */\nproto.google.api.Http.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.api.Http;\n  return proto.google.api.Http.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.api.Http} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.api.Http}\n */\nproto.google.api.Http.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.google.api.HttpRule;\n      reader.readMessage(value,proto.google.api.HttpRule.deserializeBinaryFromReader);\n      msg.addRules(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFullyDecodeReservedExpansion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.api.Http.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.api.Http.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.api.Http} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.Http.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRulesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.google.api.HttpRule.serializeBinaryToWriter\n    );\n  }\n  f = message.getFullyDecodeReservedExpansion();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated HttpRule rules = 1;\n * @return {!Array<!proto.google.api.HttpRule>}\n */\nproto.google.api.Http.prototype.getRulesList = function() {\n  return /** @type{!Array<!proto.google.api.HttpRule>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.api.HttpRule, 1));\n};\n\n\n/** @param {!Array<!proto.google.api.HttpRule>} value */\nproto.google.api.Http.prototype.setRulesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.google.api.HttpRule=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.api.HttpRule}\n */\nproto.google.api.Http.prototype.addRules = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.api.HttpRule, opt_index);\n};\n\n\nproto.google.api.Http.prototype.clearRulesList = function() {\n  this.setRulesList([]);\n};\n\n\n/**\n * optional bool fully_decode_reserved_expansion = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.google.api.Http.prototype.getFullyDecodeReservedExpansion = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.google.api.Http.prototype.setFullyDecodeReservedExpansion = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.api.HttpRule = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.api.HttpRule.repeatedFields_, proto.google.api.HttpRule.oneofGroups_);\n};\ngoog.inherits(proto.google.api.HttpRule, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.api.HttpRule.displayName = 'proto.google.api.HttpRule';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.google.api.HttpRule.repeatedFields_ = [11];\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.google.api.HttpRule.oneofGroups_ = [[2,3,4,5,6,8]];\n\n/**\n * @enum {number}\n */\nproto.google.api.HttpRule.PatternCase = {\n  PATTERN_NOT_SET: 0,\n  GET: 2,\n  PUT: 3,\n  POST: 4,\n  DELETE: 5,\n  PATCH: 6,\n  CUSTOM: 8\n};\n\n/**\n * @return {proto.google.api.HttpRule.PatternCase}\n */\nproto.google.api.HttpRule.prototype.getPatternCase = function() {\n  return /** @type {proto.google.api.HttpRule.PatternCase} */(jspb.Message.computeOneofCase(this, proto.google.api.HttpRule.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.api.HttpRule.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.api.HttpRule.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.api.HttpRule} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.HttpRule.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    selector: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    get: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    put: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    post: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    pb_delete: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    patch: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    custom: (f = msg.getCustom()) && proto.google.api.CustomHttpPattern.toObject(includeInstance, f),\n    body: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    responseBody: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n    additionalBindingsList: jspb.Message.toObjectList(msg.getAdditionalBindingsList(),\n    proto.google.api.HttpRule.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.api.HttpRule}\n */\nproto.google.api.HttpRule.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.api.HttpRule;\n  return proto.google.api.HttpRule.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.api.HttpRule} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.api.HttpRule}\n */\nproto.google.api.HttpRule.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSelector(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGet(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPut(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPost(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDelete(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPatch(value);\n      break;\n    case 8:\n      var value = new proto.google.api.CustomHttpPattern;\n      reader.readMessage(value,proto.google.api.CustomHttpPattern.deserializeBinaryFromReader);\n      msg.setCustom(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBody(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponseBody(value);\n      break;\n    case 11:\n      var value = new proto.google.api.HttpRule;\n      reader.readMessage(value,proto.google.api.HttpRule.deserializeBinaryFromReader);\n      msg.addAdditionalBindings(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.api.HttpRule.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.api.HttpRule.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.api.HttpRule} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.HttpRule.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSelector();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 4));\n  if (f != null) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 5));\n  if (f != null) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 6));\n  if (f != null) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getCustom();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.google.api.CustomHttpPattern.serializeBinaryToWriter\n    );\n  }\n  f = message.getBody();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getResponseBody();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getAdditionalBindingsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.google.api.HttpRule.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string selector = 1;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getSelector = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setSelector = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string get = 2;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getGet = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setGet = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearGet = function() {\n  jspb.Message.setOneofField(this, 2, proto.google.api.HttpRule.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasGet = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional string put = 3;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getPut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setPut = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearPut = function() {\n  jspb.Message.setOneofField(this, 3, proto.google.api.HttpRule.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasPut = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string post = 4;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getPost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setPost = function(value) {\n  jspb.Message.setOneofField(this, 4, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearPost = function() {\n  jspb.Message.setOneofField(this, 4, proto.google.api.HttpRule.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasPost = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string delete = 5;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getDelete = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setDelete = function(value) {\n  jspb.Message.setOneofField(this, 5, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearDelete = function() {\n  jspb.Message.setOneofField(this, 5, proto.google.api.HttpRule.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasDelete = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional string patch = 6;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getPatch = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setPatch = function(value) {\n  jspb.Message.setOneofField(this, 6, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearPatch = function() {\n  jspb.Message.setOneofField(this, 6, proto.google.api.HttpRule.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasPatch = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional CustomHttpPattern custom = 8;\n * @return {?proto.google.api.CustomHttpPattern}\n */\nproto.google.api.HttpRule.prototype.getCustom = function() {\n  return /** @type{?proto.google.api.CustomHttpPattern} */ (\n    jspb.Message.getWrapperField(this, proto.google.api.CustomHttpPattern, 8));\n};\n\n\n/** @param {?proto.google.api.CustomHttpPattern|undefined} value */\nproto.google.api.HttpRule.prototype.setCustom = function(value) {\n  jspb.Message.setOneofWrapperField(this, 8, proto.google.api.HttpRule.oneofGroups_[0], value);\n};\n\n\nproto.google.api.HttpRule.prototype.clearCustom = function() {\n  this.setCustom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.google.api.HttpRule.prototype.hasCustom = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional string body = 7;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getBody = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setBody = function(value) {\n  jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string response_body = 12;\n * @return {string}\n */\nproto.google.api.HttpRule.prototype.getResponseBody = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.HttpRule.prototype.setResponseBody = function(value) {\n  jspb.Message.setProto3StringField(this, 12, value);\n};\n\n\n/**\n * repeated HttpRule additional_bindings = 11;\n * @return {!Array<!proto.google.api.HttpRule>}\n */\nproto.google.api.HttpRule.prototype.getAdditionalBindingsList = function() {\n  return /** @type{!Array<!proto.google.api.HttpRule>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.google.api.HttpRule, 11));\n};\n\n\n/** @param {!Array<!proto.google.api.HttpRule>} value */\nproto.google.api.HttpRule.prototype.setAdditionalBindingsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.google.api.HttpRule=} opt_value\n * @param {number=} opt_index\n * @return {!proto.google.api.HttpRule}\n */\nproto.google.api.HttpRule.prototype.addAdditionalBindings = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.google.api.HttpRule, opt_index);\n};\n\n\nproto.google.api.HttpRule.prototype.clearAdditionalBindingsList = function() {\n  this.setAdditionalBindingsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.api.CustomHttpPattern = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.api.CustomHttpPattern, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.api.CustomHttpPattern.displayName = 'proto.google.api.CustomHttpPattern';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.api.CustomHttpPattern.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.api.CustomHttpPattern.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.api.CustomHttpPattern} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.CustomHttpPattern.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    kind: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    path: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.api.CustomHttpPattern}\n */\nproto.google.api.CustomHttpPattern.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.api.CustomHttpPattern;\n  return proto.google.api.CustomHttpPattern.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.api.CustomHttpPattern} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.api.CustomHttpPattern}\n */\nproto.google.api.CustomHttpPattern.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKind(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.api.CustomHttpPattern.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.api.CustomHttpPattern.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.api.CustomHttpPattern} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.api.CustomHttpPattern.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKind();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string kind = 1;\n * @return {string}\n */\nproto.google.api.CustomHttpPattern.prototype.getKind = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.CustomHttpPattern.prototype.setKind = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string path = 2;\n * @return {string}\n */\nproto.google.api.CustomHttpPattern.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.api.CustomHttpPattern.prototype.setPath = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.google.api);\n","import _each from '../_each';\n\nclass PackageGlobals {\n    constructor() {\n        this.options = {};\n    }\n\n    setOptions(opts) {\n        _each(opts, (val, key) => {\n            this.options[key] = val;\n        });\n    }\n}\n\nmodule.exports = new PackageGlobals();\n","// eslint-disable-next-line camelcase\nimport { crouton_thrift } from '../platform_abstraction_layer';\n\nconst constants = require('../constants');\nconst coerce    = require('./coerce');\n\n// Facade on the thrift log data structure to make constructing log records more\n// convenient.\nclass LogBuilder {\n    constructor(runtime) {\n        this._runtime = runtime;\n        this._record = new crouton_thrift.LogRecord({\n            timestamp_micros : runtime._platform.nowMicros(),\n            runtime_guid     : null,\n            span_guid        : null,\n            stable_name      : null,\n            message          : null,\n            level            : null,\n            thread_id        : null,\n            filename         : null,\n            line_number      : null,\n            stack_frames     : null,\n            payload_json     : null,\n            error_flag       : null,\n        });\n    }\n\n    record() {\n        return this._record;\n    }\n\n    end() {\n        this._runtime._addLogRecord(this._record);\n    }\n\n    timestamp(micros) {\n        this._record.timestamp_micros = coerce.toNumber(micros);\n        return this;\n    }\n\n    message(msg) {\n        this._record.message = coerce.toString(msg);\n        return this;\n    }\n\n    level(num) {\n        this._record.level = constants.LOG_LEVEL_TO_STRING[num] || null;\n        if (num >= constants.LOG_ERROR) {\n            this.error(true);\n        }\n        return this;\n    }\n\n    span(guid) {\n        if (guid !== undefined) {\n            this._record.span_guid = coerce.toString(guid);\n        }\n        return this;\n    }\n\n    name(stableName) {\n        this._record.stable_name = coerce.toString(stableName);\n        return this;\n    }\n\n    error(flag) {\n        this._record.error_flag = coerce.toBoolean(flag);\n        return this;\n    }\n\n    payload(data) {\n        if (data !== undefined) {\n            this._record.payload_json = this._encodePayload(data);\n        }\n        return this;\n    }\n\n    _encodePayload(data) {\n        let payloadJSON = null;\n        try {\n            payloadJSON = JSON.stringify(data);\n        } catch (_ignored) {\n            // TODO: this should log an internal warning that a payload could\n            // not be encoded as JSON.\n            return undefined;\n        }\n        return payloadJSON;\n    }\n}\n\nmodule.exports = LogBuilder;\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each';\nimport * as coerce from './coerce';\n// eslint-disable-line camelcase\nlet googleProtobufTimestampPB = require('google-protobuf/google/protobuf/timestamp_pb.js');\nlet proto = require('./generated_proto/collector_pb.js');\n\nexport default class LogRecordImp {\n    constructor(logFieldKeyHardLimit, logFieldValueHardLimit, timestampMicros, fields) {\n        if (fields instanceof Error) {\n            fields = {\n                stack   : fields.stack,\n                message : fields.message,\n            };\n        }\n\n        this._logFieldKeyHardLimit = logFieldKeyHardLimit;\n        this._logFieldValueHardLimit = logFieldValueHardLimit;\n        this._timestampMicros = timestampMicros;\n        this._fields = fields;\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    _clearOverLimits() {\n        this._keysOverLimit = 0;\n        this._valuesOverLimit = 0;\n    }\n\n    getNumKeysOverLimit() {\n        return this._keysOverLimit;\n    }\n\n    getNumValuesOverLimit() {\n        return this._valuesOverLimit;\n    }\n\n    toThrift() {\n        this._clearOverLimits();\n        let thriftFields = [];\n        _each(this._fields, (value, key) => {\n            if (!key || !value) {\n                return;\n            }\n            let keyStr = this.getFieldKey(key);\n            let valStr = this.getFieldValue(value);\n            thriftFields.push(new crouton_thrift.KeyValue({\n                Key   : keyStr,\n                Value : valStr,\n            }));\n        });\n\n        return new crouton_thrift.LogRecord({\n            timestamp_micros : this._timestampMicros,\n            fields           : thriftFields,\n        });\n    }\n\n    getFieldKey(key) {\n        let keyStr = coerce.toString(key);\n        if (keyStr.length > this._logFieldKeyHardLimit) {\n            this._keysOverLimit += 1;\n            keyStr = `${keyStr.substr(0, this._logFieldKeyHardLimit)}...`;\n        }\n        return keyStr;\n    }\n\n    getFieldValue(value) {\n        let valStr = null;\n        if (value instanceof Error) {\n            try {\n                // https://stackoverflow.com/a/26199752/9778850\n                valStr = JSON.stringify(value, Object.getOwnPropertyNames(value));\n            } catch (e) {\n                valStr = `Could not encode value. Exception: ${e}`;\n            }\n        } else if (value instanceof Object) {\n            try {\n                valStr = JSON.stringify(value, null, '  ');\n            } catch (e) {\n                valStr = `Could not encode value. Exception: ${e}`;\n            }\n        } else {\n            valStr = coerce.toString(value);\n        }\n        if (valStr.length > this._logFieldValueHardLimit) {\n            this._valuesOverLimit += 1;\n            valStr = `${valStr.substr(0, this._logFieldValueHardLimit)}...`;\n        }\n        return valStr;\n    }\n\n    toProto() {\n        this._clearOverLimits();\n        let log = new proto.Log();\n        let ts = new googleProtobufTimestampPB.Timestamp();\n        let secs = Math.floor(this._timestampMicros / 1000000);\n        let nanos = (this._timestampMicros % 1000000) * 1000;\n        ts.setSeconds(secs);\n        ts.setNanos(nanos);\n        log.setTimestamp(ts);\n        let keyValues = [];\n        _each(this._fields, (value, key) => {\n            if (!key || !value) {\n                return;\n            }\n            let keyStr = this.getFieldKey(key);\n            let valStr = this.getFieldValue(value);\n\n            let keyValue = new proto.KeyValue();\n            keyValue.setKey(keyStr);\n            keyValue.setStringValue(valStr);\n            keyValues.push(keyValue);\n        });\n\n        log.setFieldsList(keyValues);\n\n        return log;\n    }\n}\n","module.exports = require('./generated/thrift_all.js').crouton_thrift;\n","//\n// GENERATED FILE - DO NOT EDIT DIRECTLY\n//\n// See scripts/build_browser_thrift_lib.js\n//\n//\n(function() {\nvar Thrift = {};\nvar crouton_thrift = {};\n//\n// Autogenerated by Thrift Compiler (0.9.2)\n//\n// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING\n//\n\n\nif (typeof crouton_thrift === 'undefined') {\n  crouton_thrift = {};\n}\ncrouton_thrift.KeyValue = function(args) {\n  this.Key = null;\n  this.Value = null;\n  if (args) {\n    if (args.Key !== undefined) {\n      this.Key = args.Key;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Key is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.KeyValue.prototype = {};\ncrouton_thrift.KeyValue.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Key = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.KeyValue.prototype.write = false && function(output) {\n  output.writeStructBegin('KeyValue');\n  if (this.Key !== null && this.Key !== undefined) {\n    output.writeFieldBegin('Key', Thrift.Type.STRING, 1);\n    output.writeString(this.Key);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter = function(args) {\n  this.Name = null;\n  this.Value = null;\n  if (args) {\n    if (args.Name !== undefined) {\n      this.Name = args.Name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Name is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.NamedCounter.prototype = {};\ncrouton_thrift.NamedCounter.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.Name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.Value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.NamedCounter.prototype.write = false && function(output) {\n  output.writeStructBegin('NamedCounter');\n  if (this.Name !== null && this.Name !== undefined) {\n    output.writeFieldBegin('Name', Thrift.Type.STRING, 1);\n    output.writeString(this.Name);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.I64, 2);\n    output.writeI64(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime = function(args) {\n  this.guid = null;\n  this.start_micros = null;\n  this.group_name = null;\n  this.attrs = null;\n  if (args) {\n    if (args.guid !== undefined) {\n      this.guid = args.guid;\n    }\n    if (args.start_micros !== undefined) {\n      this.start_micros = args.start_micros;\n    }\n    if (args.group_name !== undefined) {\n      this.group_name = args.group_name;\n    }\n    if (args.attrs !== undefined) {\n      this.attrs = args.attrs;\n    }\n  }\n};\ncrouton_thrift.Runtime.prototype = {};\ncrouton_thrift.Runtime.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.start_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.group_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size0 = 0;\n        var _rtmp34;\n        this.attrs = [];\n        var _etype3 = 0;\n        _rtmp34 = input.readListBegin();\n        _etype3 = _rtmp34.etype;\n        _size0 = _rtmp34.size;\n        for (var _i5 = 0; _i5 < _size0; ++_i5)\n        {\n          var elem6 = null;\n          elem6 = new crouton_thrift.KeyValue();\n          elem6.read(input);\n          this.attrs.push(elem6);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Runtime.prototype.write = false && function(output) {\n  output.writeStructBegin('Runtime');\n  if (this.guid !== null && this.guid !== undefined) {\n    output.writeFieldBegin('guid', Thrift.Type.STRING, 1);\n    output.writeString(this.guid);\n    output.writeFieldEnd();\n  }\n  if (this.start_micros !== null && this.start_micros !== undefined) {\n    output.writeFieldBegin('start_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.start_micros);\n    output.writeFieldEnd();\n  }\n  if (this.group_name !== null && this.group_name !== undefined) {\n    output.writeFieldBegin('group_name', Thrift.Type.STRING, 3);\n    output.writeString(this.group_name);\n    output.writeFieldEnd();\n  }\n  if (this.attrs !== null && this.attrs !== undefined) {\n    output.writeFieldBegin('attrs', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attrs.length);\n    for (var iter7 in this.attrs)\n    {\n      if (this.attrs.hasOwnProperty(iter7))\n      {\n        iter7 = this.attrs[iter7];\n        iter7.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord = function(args) {\n  this.timestamp_micros = null;\n  this.fields = null;\n  this.runtime_guid = null;\n  this.span_guid = null;\n  this.stable_name = null;\n  this.message = null;\n  this.level = null;\n  this.thread_id = null;\n  this.filename = null;\n  this.line_number = null;\n  this.stack_frames = null;\n  this.payload_json = null;\n  this.error_flag = null;\n  if (args) {\n    if (args.timestamp_micros !== undefined) {\n      this.timestamp_micros = args.timestamp_micros;\n    }\n    if (args.fields !== undefined) {\n      this.fields = args.fields;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.stable_name !== undefined) {\n      this.stable_name = args.stable_name;\n    }\n    if (args.message !== undefined) {\n      this.message = args.message;\n    }\n    if (args.level !== undefined) {\n      this.level = args.level;\n    }\n    if (args.thread_id !== undefined) {\n      this.thread_id = args.thread_id;\n    }\n    if (args.filename !== undefined) {\n      this.filename = args.filename;\n    }\n    if (args.line_number !== undefined) {\n      this.line_number = args.line_number;\n    }\n    if (args.stack_frames !== undefined) {\n      this.stack_frames = args.stack_frames;\n    }\n    if (args.payload_json !== undefined) {\n      this.payload_json = args.payload_json;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n  }\n};\ncrouton_thrift.LogRecord.prototype = {};\ncrouton_thrift.LogRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 13:\n      if (ftype == Thrift.Type.LIST) {\n        var _size8 = 0;\n        var _rtmp312;\n        this.fields = [];\n        var _etype11 = 0;\n        _rtmp312 = input.readListBegin();\n        _etype11 = _rtmp312.etype;\n        _size8 = _rtmp312.size;\n        for (var _i13 = 0; _i13 < _size8; ++_i13)\n        {\n          var elem14 = null;\n          elem14 = new crouton_thrift.KeyValue();\n          elem14.read(input);\n          this.fields.push(elem14);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.STRING) {\n        this.stable_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.STRING) {\n        this.message = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.STRING) {\n        this.level = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.thread_id = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.STRING) {\n        this.filename = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.I64) {\n        this.line_number = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size15 = 0;\n        var _rtmp319;\n        this.stack_frames = [];\n        var _etype18 = 0;\n        _rtmp319 = input.readListBegin();\n        _etype18 = _rtmp319.etype;\n        _size15 = _rtmp319.size;\n        for (var _i20 = 0; _i20 < _size15; ++_i20)\n        {\n          var elem21 = null;\n          elem21 = input.readString().value;\n          this.stack_frames.push(elem21);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.payload_json = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 12:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.LogRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('LogRecord');\n  if (this.timestamp_micros !== null && this.timestamp_micros !== undefined) {\n    output.writeFieldBegin('timestamp_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.timestamp_micros);\n    output.writeFieldEnd();\n  }\n  if (this.fields !== null && this.fields !== undefined) {\n    output.writeFieldBegin('fields', Thrift.Type.LIST, 13);\n    output.writeListBegin(Thrift.Type.STRUCT, this.fields.length);\n    for (var iter22 in this.fields)\n    {\n      if (this.fields.hasOwnProperty(iter22))\n      {\n        iter22 = this.fields[iter22];\n        iter22.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 3);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.stable_name !== null && this.stable_name !== undefined) {\n    output.writeFieldBegin('stable_name', Thrift.Type.STRING, 4);\n    output.writeString(this.stable_name);\n    output.writeFieldEnd();\n  }\n  if (this.message !== null && this.message !== undefined) {\n    output.writeFieldBegin('message', Thrift.Type.STRING, 5);\n    output.writeString(this.message);\n    output.writeFieldEnd();\n  }\n  if (this.level !== null && this.level !== undefined) {\n    output.writeFieldBegin('level', Thrift.Type.STRING, 6);\n    output.writeString(this.level);\n    output.writeFieldEnd();\n  }\n  if (this.thread_id !== null && this.thread_id !== undefined) {\n    output.writeFieldBegin('thread_id', Thrift.Type.I64, 7);\n    output.writeI64(this.thread_id);\n    output.writeFieldEnd();\n  }\n  if (this.filename !== null && this.filename !== undefined) {\n    output.writeFieldBegin('filename', Thrift.Type.STRING, 8);\n    output.writeString(this.filename);\n    output.writeFieldEnd();\n  }\n  if (this.line_number !== null && this.line_number !== undefined) {\n    output.writeFieldBegin('line_number', Thrift.Type.I64, 9);\n    output.writeI64(this.line_number);\n    output.writeFieldEnd();\n  }\n  if (this.stack_frames !== null && this.stack_frames !== undefined) {\n    output.writeFieldBegin('stack_frames', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRING, this.stack_frames.length);\n    for (var iter23 in this.stack_frames)\n    {\n      if (this.stack_frames.hasOwnProperty(iter23))\n      {\n        iter23 = this.stack_frames[iter23];\n        output.writeString(iter23);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.payload_json !== null && this.payload_json !== undefined) {\n    output.writeFieldBegin('payload_json', Thrift.Type.STRING, 11);\n    output.writeString(this.payload_json);\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 12);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId = function(args) {\n  this.TraceKey = null;\n  this.Value = null;\n  if (args) {\n    if (args.TraceKey !== undefined) {\n      this.TraceKey = args.TraceKey;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field TraceKey is unset!');\n    }\n    if (args.Value !== undefined) {\n      this.Value = args.Value;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field Value is unset!');\n    }\n  }\n};\ncrouton_thrift.TraceJoinId.prototype = {};\ncrouton_thrift.TraceJoinId.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.TraceKey = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.Value = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.TraceJoinId.prototype.write = false && function(output) {\n  output.writeStructBegin('TraceJoinId');\n  if (this.TraceKey !== null && this.TraceKey !== undefined) {\n    output.writeFieldBegin('TraceKey', Thrift.Type.STRING, 1);\n    output.writeString(this.TraceKey);\n    output.writeFieldEnd();\n  }\n  if (this.Value !== null && this.Value !== undefined) {\n    output.writeFieldBegin('Value', Thrift.Type.STRING, 2);\n    output.writeString(this.Value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord = function(args) {\n  this.span_guid = null;\n  this.trace_guid = null;\n  this.runtime_guid = null;\n  this.span_name = null;\n  this.join_ids = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.attributes = null;\n  this.error_flag = null;\n  this.log_records = null;\n  if (args) {\n    if (args.span_guid !== undefined) {\n      this.span_guid = args.span_guid;\n    }\n    if (args.trace_guid !== undefined) {\n      this.trace_guid = args.trace_guid;\n    }\n    if (args.runtime_guid !== undefined) {\n      this.runtime_guid = args.runtime_guid;\n    }\n    if (args.span_name !== undefined) {\n      this.span_name = args.span_name;\n    }\n    if (args.join_ids !== undefined) {\n      this.join_ids = args.join_ids;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.attributes !== undefined) {\n      this.attributes = args.attributes;\n    }\n    if (args.error_flag !== undefined) {\n      this.error_flag = args.error_flag;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n  }\n};\ncrouton_thrift.SpanRecord.prototype = {};\ncrouton_thrift.SpanRecord.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRING) {\n        this.trace_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRING) {\n        this.runtime_guid = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.STRING) {\n        this.span_name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size24 = 0;\n        var _rtmp328;\n        this.join_ids = [];\n        var _etype27 = 0;\n        _rtmp328 = input.readListBegin();\n        _etype27 = _rtmp328.etype;\n        _size24 = _rtmp328.size;\n        for (var _i29 = 0; _i29 < _size24; ++_i29)\n        {\n          var elem30 = null;\n          elem30 = new crouton_thrift.TraceJoinId();\n          elem30.read(input);\n          this.join_ids.push(elem30);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 6:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.LIST) {\n        var _size31 = 0;\n        var _rtmp335;\n        this.attributes = [];\n        var _etype34 = 0;\n        _rtmp335 = input.readListBegin();\n        _etype34 = _rtmp335.etype;\n        _size31 = _rtmp335.size;\n        for (var _i36 = 0; _i36 < _size31; ++_i36)\n        {\n          var elem37 = null;\n          elem37 = new crouton_thrift.KeyValue();\n          elem37.read(input);\n          this.attributes.push(elem37);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.BOOL) {\n        this.error_flag = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size38 = 0;\n        var _rtmp342;\n        this.log_records = [];\n        var _etype41 = 0;\n        _rtmp342 = input.readListBegin();\n        _etype41 = _rtmp342.etype;\n        _size38 = _rtmp342.size;\n        for (var _i43 = 0; _i43 < _size38; ++_i43)\n        {\n          var elem44 = null;\n          elem44 = new crouton_thrift.LogRecord();\n          elem44.read(input);\n          this.log_records.push(elem44);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SpanRecord.prototype.write = false && function(output) {\n  output.writeStructBegin('SpanRecord');\n  if (this.span_guid !== null && this.span_guid !== undefined) {\n    output.writeFieldBegin('span_guid', Thrift.Type.STRING, 1);\n    output.writeString(this.span_guid);\n    output.writeFieldEnd();\n  }\n  if (this.trace_guid !== null && this.trace_guid !== undefined) {\n    output.writeFieldBegin('trace_guid', Thrift.Type.STRING, 11);\n    output.writeString(this.trace_guid);\n    output.writeFieldEnd();\n  }\n  if (this.runtime_guid !== null && this.runtime_guid !== undefined) {\n    output.writeFieldBegin('runtime_guid', Thrift.Type.STRING, 2);\n    output.writeString(this.runtime_guid);\n    output.writeFieldEnd();\n  }\n  if (this.span_name !== null && this.span_name !== undefined) {\n    output.writeFieldBegin('span_name', Thrift.Type.STRING, 3);\n    output.writeString(this.span_name);\n    output.writeFieldEnd();\n  }\n  if (this.join_ids !== null && this.join_ids !== undefined) {\n    output.writeFieldBegin('join_ids', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.join_ids.length);\n    for (var iter45 in this.join_ids)\n    {\n      if (this.join_ids.hasOwnProperty(iter45))\n      {\n        iter45 = this.join_ids[iter45];\n        iter45.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 6);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.attributes !== null && this.attributes !== undefined) {\n    output.writeFieldBegin('attributes', Thrift.Type.LIST, 8);\n    output.writeListBegin(Thrift.Type.STRUCT, this.attributes.length);\n    for (var iter46 in this.attributes)\n    {\n      if (this.attributes.hasOwnProperty(iter46))\n      {\n        iter46 = this.attributes[iter46];\n        iter46.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.error_flag !== null && this.error_flag !== undefined) {\n    output.writeFieldBegin('error_flag', Thrift.Type.BOOL, 9);\n    output.writeBool(this.error_flag);\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter47 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter47))\n      {\n        iter47 = this.log_records[iter47];\n        iter47.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth = function(args) {\n  this.access_token = null;\n  if (args) {\n    if (args.access_token !== undefined) {\n      this.access_token = args.access_token;\n    }\n  }\n};\ncrouton_thrift.Auth.prototype = {};\ncrouton_thrift.Auth.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.access_token = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Auth.prototype.write = false && function(output) {\n  output.writeStructBegin('Auth');\n  if (this.access_token !== null && this.access_token !== undefined) {\n    output.writeFieldBegin('access_token', Thrift.Type.STRING, 1);\n    output.writeString(this.access_token);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing = function(args) {\n  this.receive_micros = null;\n  this.transmit_micros = null;\n  if (args) {\n    if (args.receive_micros !== undefined) {\n      this.receive_micros = args.receive_micros;\n    }\n    if (args.transmit_micros !== undefined) {\n      this.transmit_micros = args.transmit_micros;\n    }\n  }\n};\ncrouton_thrift.Timing.prototype = {};\ncrouton_thrift.Timing.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.receive_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.transmit_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Timing.prototype.write = false && function(output) {\n  output.writeStructBegin('Timing');\n  if (this.receive_micros !== null && this.receive_micros !== undefined) {\n    output.writeFieldBegin('receive_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.receive_micros);\n    output.writeFieldEnd();\n  }\n  if (this.transmit_micros !== null && this.transmit_micros !== undefined) {\n    output.writeFieldBegin('transmit_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.transmit_micros);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount = function(args) {\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.count = null;\n  if (args) {\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.count !== undefined) {\n      this.count = args.count;\n    }\n  }\n};\ncrouton_thrift.SampleCount.prototype = {};\ncrouton_thrift.SampleCount.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.I64) {\n        this.count = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.SampleCount.prototype.write = false && function(output) {\n  output.writeStructBegin('SampleCount');\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 1);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 2);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.count !== null && this.count !== undefined) {\n    output.writeFieldBegin('count', Thrift.Type.I64, 3);\n    output.writeI64(this.count);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample = function(args) {\n  this.name = null;\n  this.int64_value = null;\n  this.double_value = null;\n  if (args) {\n    if (args.name !== undefined) {\n      this.name = args.name;\n    } else {\n      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field name is unset!');\n    }\n    if (args.int64_value !== undefined) {\n      this.int64_value = args.int64_value;\n    }\n    if (args.double_value !== undefined) {\n      this.double_value = args.double_value;\n    }\n  }\n};\ncrouton_thrift.MetricsSample.prototype = {};\ncrouton_thrift.MetricsSample.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRING) {\n        this.name = input.readString().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.I64) {\n        this.int64_value = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.DOUBLE) {\n        this.double_value = input.readDouble().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.MetricsSample.prototype.write = false && function(output) {\n  output.writeStructBegin('MetricsSample');\n  if (this.name !== null && this.name !== undefined) {\n    output.writeFieldBegin('name', Thrift.Type.STRING, 1);\n    output.writeString(this.name);\n    output.writeFieldEnd();\n  }\n  if (this.int64_value !== null && this.int64_value !== undefined) {\n    output.writeFieldBegin('int64_value', Thrift.Type.I64, 2);\n    output.writeI64(this.int64_value);\n    output.writeFieldEnd();\n  }\n  if (this.double_value !== null && this.double_value !== undefined) {\n    output.writeFieldBegin('double_value', Thrift.Type.DOUBLE, 3);\n    output.writeDouble(this.double_value);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics = function(args) {\n  this.counts = null;\n  this.gauges = null;\n  if (args) {\n    if (args.counts !== undefined) {\n      this.counts = args.counts;\n    }\n    if (args.gauges !== undefined) {\n      this.gauges = args.gauges;\n    }\n  }\n};\ncrouton_thrift.Metrics.prototype = {};\ncrouton_thrift.Metrics.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size48 = 0;\n        var _rtmp352;\n        this.counts = [];\n        var _etype51 = 0;\n        _rtmp352 = input.readListBegin();\n        _etype51 = _rtmp352.etype;\n        _size48 = _rtmp352.size;\n        for (var _i53 = 0; _i53 < _size48; ++_i53)\n        {\n          var elem54 = null;\n          elem54 = new crouton_thrift.MetricsSample();\n          elem54.read(input);\n          this.counts.push(elem54);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.LIST) {\n        var _size55 = 0;\n        var _rtmp359;\n        this.gauges = [];\n        var _etype58 = 0;\n        _rtmp359 = input.readListBegin();\n        _etype58 = _rtmp359.etype;\n        _size55 = _rtmp359.size;\n        for (var _i60 = 0; _i60 < _size55; ++_i60)\n        {\n          var elem61 = null;\n          elem61 = new crouton_thrift.MetricsSample();\n          elem61.read(input);\n          this.gauges.push(elem61);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Metrics.prototype.write = false && function(output) {\n  output.writeStructBegin('Metrics');\n  if (this.counts !== null && this.counts !== undefined) {\n    output.writeFieldBegin('counts', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counts.length);\n    for (var iter62 in this.counts)\n    {\n      if (this.counts.hasOwnProperty(iter62))\n      {\n        iter62 = this.counts[iter62];\n        iter62.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.gauges !== null && this.gauges !== undefined) {\n    output.writeFieldBegin('gauges', Thrift.Type.LIST, 2);\n    output.writeListBegin(Thrift.Type.STRUCT, this.gauges.length);\n    for (var iter63 in this.gauges)\n    {\n      if (this.gauges.hasOwnProperty(iter63))\n      {\n        iter63 = this.gauges[iter63];\n        iter63.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest = function(args) {\n  this.runtime = null;\n  this.span_records = null;\n  this.log_records = null;\n  this.timestamp_offset_micros = null;\n  this.oldest_micros = null;\n  this.youngest_micros = null;\n  this.counters = null;\n  this.internal_logs = null;\n  this.internal_metrics = null;\n  if (args) {\n    if (args.runtime !== undefined) {\n      this.runtime = args.runtime;\n    }\n    if (args.span_records !== undefined) {\n      this.span_records = args.span_records;\n    }\n    if (args.log_records !== undefined) {\n      this.log_records = args.log_records;\n    }\n    if (args.timestamp_offset_micros !== undefined) {\n      this.timestamp_offset_micros = args.timestamp_offset_micros;\n    }\n    if (args.oldest_micros !== undefined) {\n      this.oldest_micros = args.oldest_micros;\n    }\n    if (args.youngest_micros !== undefined) {\n      this.youngest_micros = args.youngest_micros;\n    }\n    if (args.counters !== undefined) {\n      this.counters = args.counters;\n    }\n    if (args.internal_logs !== undefined) {\n      this.internal_logs = args.internal_logs;\n    }\n    if (args.internal_metrics !== undefined) {\n      this.internal_metrics = args.internal_metrics;\n    }\n  }\n};\ncrouton_thrift.ReportRequest.prototype = {};\ncrouton_thrift.ReportRequest.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.runtime = new crouton_thrift.Runtime();\n        this.runtime.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 3:\n      if (ftype == Thrift.Type.LIST) {\n        var _size64 = 0;\n        var _rtmp368;\n        this.span_records = [];\n        var _etype67 = 0;\n        _rtmp368 = input.readListBegin();\n        _etype67 = _rtmp368.etype;\n        _size64 = _rtmp368.size;\n        for (var _i69 = 0; _i69 < _size64; ++_i69)\n        {\n          var elem70 = null;\n          elem70 = new crouton_thrift.SpanRecord();\n          elem70.read(input);\n          this.span_records.push(elem70);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 4:\n      if (ftype == Thrift.Type.LIST) {\n        var _size71 = 0;\n        var _rtmp375;\n        this.log_records = [];\n        var _etype74 = 0;\n        _rtmp375 = input.readListBegin();\n        _etype74 = _rtmp375.etype;\n        _size71 = _rtmp375.size;\n        for (var _i76 = 0; _i76 < _size71; ++_i76)\n        {\n          var elem77 = null;\n          elem77 = new crouton_thrift.LogRecord();\n          elem77.read(input);\n          this.log_records.push(elem77);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 5:\n      if (ftype == Thrift.Type.I64) {\n        this.timestamp_offset_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 7:\n      if (ftype == Thrift.Type.I64) {\n        this.oldest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 8:\n      if (ftype == Thrift.Type.I64) {\n        this.youngest_micros = input.readI64().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 9:\n      if (ftype == Thrift.Type.LIST) {\n        var _size78 = 0;\n        var _rtmp382;\n        this.counters = [];\n        var _etype81 = 0;\n        _rtmp382 = input.readListBegin();\n        _etype81 = _rtmp382.etype;\n        _size78 = _rtmp382.size;\n        for (var _i83 = 0; _i83 < _size78; ++_i83)\n        {\n          var elem84 = null;\n          elem84 = new crouton_thrift.NamedCounter();\n          elem84.read(input);\n          this.counters.push(elem84);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 10:\n      if (ftype == Thrift.Type.LIST) {\n        var _size85 = 0;\n        var _rtmp389;\n        this.internal_logs = [];\n        var _etype88 = 0;\n        _rtmp389 = input.readListBegin();\n        _etype88 = _rtmp389.etype;\n        _size85 = _rtmp389.size;\n        for (var _i90 = 0; _i90 < _size85; ++_i90)\n        {\n          var elem91 = null;\n          elem91 = new crouton_thrift.LogRecord();\n          elem91.read(input);\n          this.internal_logs.push(elem91);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 11:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.internal_metrics = new crouton_thrift.Metrics();\n        this.internal_metrics.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportRequest.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportRequest');\n  if (this.runtime !== null && this.runtime !== undefined) {\n    output.writeFieldBegin('runtime', Thrift.Type.STRUCT, 1);\n    this.runtime.write(output);\n    output.writeFieldEnd();\n  }\n  if (this.span_records !== null && this.span_records !== undefined) {\n    output.writeFieldBegin('span_records', Thrift.Type.LIST, 3);\n    output.writeListBegin(Thrift.Type.STRUCT, this.span_records.length);\n    for (var iter92 in this.span_records)\n    {\n      if (this.span_records.hasOwnProperty(iter92))\n      {\n        iter92 = this.span_records[iter92];\n        iter92.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.log_records !== null && this.log_records !== undefined) {\n    output.writeFieldBegin('log_records', Thrift.Type.LIST, 4);\n    output.writeListBegin(Thrift.Type.STRUCT, this.log_records.length);\n    for (var iter93 in this.log_records)\n    {\n      if (this.log_records.hasOwnProperty(iter93))\n      {\n        iter93 = this.log_records[iter93];\n        iter93.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timestamp_offset_micros !== null && this.timestamp_offset_micros !== undefined) {\n    output.writeFieldBegin('timestamp_offset_micros', Thrift.Type.I64, 5);\n    output.writeI64(this.timestamp_offset_micros);\n    output.writeFieldEnd();\n  }\n  if (this.oldest_micros !== null && this.oldest_micros !== undefined) {\n    output.writeFieldBegin('oldest_micros', Thrift.Type.I64, 7);\n    output.writeI64(this.oldest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.youngest_micros !== null && this.youngest_micros !== undefined) {\n    output.writeFieldBegin('youngest_micros', Thrift.Type.I64, 8);\n    output.writeI64(this.youngest_micros);\n    output.writeFieldEnd();\n  }\n  if (this.counters !== null && this.counters !== undefined) {\n    output.writeFieldBegin('counters', Thrift.Type.LIST, 9);\n    output.writeListBegin(Thrift.Type.STRUCT, this.counters.length);\n    for (var iter94 in this.counters)\n    {\n      if (this.counters.hasOwnProperty(iter94))\n      {\n        iter94 = this.counters[iter94];\n        iter94.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_logs !== null && this.internal_logs !== undefined) {\n    output.writeFieldBegin('internal_logs', Thrift.Type.LIST, 10);\n    output.writeListBegin(Thrift.Type.STRUCT, this.internal_logs.length);\n    for (var iter95 in this.internal_logs)\n    {\n      if (this.internal_logs.hasOwnProperty(iter95))\n      {\n        iter95 = this.internal_logs[iter95];\n        iter95.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.internal_metrics !== null && this.internal_metrics !== undefined) {\n    output.writeFieldBegin('internal_metrics', Thrift.Type.STRUCT, 11);\n    this.internal_metrics.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.Command = function(args) {\n  this.disable = null;\n  if (args) {\n    if (args.disable !== undefined) {\n      this.disable = args.disable;\n    }\n  }\n};\ncrouton_thrift.Command.prototype = {};\ncrouton_thrift.Command.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.BOOL) {\n        this.disable = input.readBool().value;\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 0:\n        input.skip(ftype);\n        break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.Command.prototype.write = false && function(output) {\n  output.writeStructBegin('Command');\n  if (this.disable !== null && this.disable !== undefined) {\n    output.writeFieldBegin('disable', Thrift.Type.BOOL, 1);\n    output.writeBool(this.disable);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse = function(args) {\n  this.commands = null;\n  this.timing = null;\n  if (args) {\n    if (args.commands !== undefined) {\n      this.commands = args.commands;\n    }\n    if (args.timing !== undefined) {\n      this.timing = args.timing;\n    }\n  }\n};\ncrouton_thrift.ReportResponse.prototype = {};\ncrouton_thrift.ReportResponse.prototype.read = false && function(input) {\n  input.readStructBegin();\n  while (true)\n  {\n    var ret = input.readFieldBegin();\n    var fname = ret.fname;\n    var ftype = ret.ftype;\n    var fid = ret.fid;\n    if (ftype == Thrift.Type.STOP) {\n      break;\n    }\n    switch (fid)\n    {\n      case 1:\n      if (ftype == Thrift.Type.LIST) {\n        var _size96 = 0;\n        var _rtmp3100;\n        this.commands = [];\n        var _etype99 = 0;\n        _rtmp3100 = input.readListBegin();\n        _etype99 = _rtmp3100.etype;\n        _size96 = _rtmp3100.size;\n        for (var _i101 = 0; _i101 < _size96; ++_i101)\n        {\n          var elem102 = null;\n          elem102 = new crouton_thrift.Command();\n          elem102.read(input);\n          this.commands.push(elem102);\n        }\n        input.readListEnd();\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      case 2:\n      if (ftype == Thrift.Type.STRUCT) {\n        this.timing = new crouton_thrift.Timing();\n        this.timing.read(input);\n      } else {\n        input.skip(ftype);\n      }\n      break;\n      default:\n        input.skip(ftype);\n    }\n    input.readFieldEnd();\n  }\n  input.readStructEnd();\n  return;\n};\n\ncrouton_thrift.ReportResponse.prototype.write = false && function(output) {\n  output.writeStructBegin('ReportResponse');\n  if (this.commands !== null && this.commands !== undefined) {\n    output.writeFieldBegin('commands', Thrift.Type.LIST, 1);\n    output.writeListBegin(Thrift.Type.STRUCT, this.commands.length);\n    for (var iter103 in this.commands)\n    {\n      if (this.commands.hasOwnProperty(iter103))\n      {\n        iter103 = this.commands[iter103];\n        iter103.write(output);\n      }\n    }\n    output.writeListEnd();\n    output.writeFieldEnd();\n  }\n  if (this.timing !== null && this.timing !== undefined) {\n    output.writeFieldBegin('timing', Thrift.Type.STRUCT, 2);\n    this.timing.write(output);\n    output.writeFieldEnd();\n  }\n  output.writeFieldStop();\n  output.writeStructEnd();\n  return;\n};\n\n\nmodule.exports.crouton_thrift = crouton_thrift;\nmodule.exports.Thrift = {}\n})();","const util = require('./util');\n\n/* global WorkerGlobalScope */\n// Find the HTML element that included the tracing library (if there is one).\n// This relies on the fact that scripts are executed as soon as they are\n// included -- thus 'this' script is the last one in the array at the time\n// this is run.\nlet hostScriptElement = (function () {\n    // check to see if we're in a webworker\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        return null;\n    }\n    if (!util.isBrowser()) {\n        return null;\n    }\n    let scripts = document.getElementsByTagName('SCRIPT');\n    if (!(scripts.length > 0)) {\n        return null;\n    }\n    return scripts[scripts.length - 1];\n}());\n\nfunction urlQueryParameters(defaults) {\n    let vars = {};\n    let qi = window.location.href.indexOf('?');\n    if (qi < 0) {\n        return vars;\n    }\n    let slice = window.location.href.slice(qi + 1);\n    if (slice.indexOf('#') >= 0) {\n        slice = slice.slice(0, slice.indexOf('#'));\n    }\n    let hashes = slice.replace(/\\+/, '%20').split('&');\n    for (let i = 0; i < hashes.length; i++) {\n        let hash = hashes[i].split('=');\n        vars[decodeURIComponent(hash[0])] = decodeURIComponent(hash[1]);\n    }\n    return vars;\n}\n\n// Parses options out of the host <script> element. Allows for easy configuration\n// via the HTML element. Example:\n//\n// <script src='lightstep.min.js'\n//      data-access_token='{my_access_token}'\n//      data-component_name='my_component'></script>\n//\n// Note: relies on the global hostScriptElement variable defined above.\n//\nfunction parseScriptElementOptions(opts, browserOpts) {\n    if (!hostScriptElement) {\n        return;\n    }\n\n    let { dataset } = hostScriptElement;\n\n    let accessToken = dataset.access_token;\n    if (typeof accessToken === 'string' && accessToken.length > 0) {\n        opts.access_token = accessToken;\n    }\n\n    let componentName = dataset.component_name;\n    if (typeof componentName === 'string' && componentName.length > 0) {\n        opts.component_name = componentName;\n    }\n\n    let collectorHost = dataset.collector_host;\n    if (typeof collectorHost === 'string' && collectorHost.length > 0) {\n        opts.collector_host = collectorHost;\n    }\n    let collectorPort = dataset.collector_port;\n    if (collectorPort) {\n        opts.collector_port = parseInt(collectorPort, 10);\n    }\n    let collectorPath = dataset.collector_path;\n    if (typeof collectorPath === 'string' && collectorPath.length > 0) {\n        opts.collector_path = collectorPath;\n    }\n    let collectorEncryption = dataset.collector_encryption;\n    if (collectorEncryption) {\n        opts.collector_encryption = collectorEncryption;\n    }\n\n    let { enable } = dataset;\n    if (typeof enable === 'string') {\n        if (enable === 'true') {\n            opts.enable = true;\n        } else if (enable === 'false') {\n            opts.enable = false;\n        }\n    }\n    let { verbosity } = dataset;\n    if (typeof verbosity === 'string') {\n        opts.verbosity = parseInt(verbosity, 10);\n    }\n\n    let init = dataset.init_global_tracer;\n    if (typeof init === 'string') {\n        if (init === 'true') {\n            browserOpts.init_global_tracer = true;\n        } else if (init === 'false') {\n            browserOpts.init_global_tracer = false;\n        }\n    }\n\n    // NOTE: this is a little inelegant as this is hard-coding support for a\n    // \"plug-in\" option.\n    if (typeof dataset.xhr_instrumentation === 'string' && dataset.xhr_instrumentation === 'true') {\n        opts.xhr_instrumentation = true;\n    }\n\n    if (typeof dataset.instrument_page_load === 'string' && dataset.instrument_page_load === 'true') {\n        opts.instrument_page_load = true;\n    }\n}\n\nfunction parseScriptElementOptionsNoop(opts, browserOpts) {\n\n}\n\n// Parses options out of the current URL query string. The query parameters use\n// the 'lightstep_' prefix to reduce the chance of collision with\n// application-specific query parameters.\n//\n// This mechanism is particularly useful for debugging purposes as it does not\n// require any code or configuration changes.\n//\nfunction parseURLQueryOptions(opts) {\n    let params = urlQueryParameters();\n    if (params.lightstep_verbosity) {\n        try {\n            opts.verbosity = parseInt(params.lightstep_verbosity, 10);\n        } catch (_ignored) { /* Ignored */ }\n    }\n    if (params.lightstep_log_to_console) {\n        opts.log_to_console = true;\n    }\n}\n\nfunction parseURLQueryOptionsNoop(opts) {\n    return {};\n}\n\nmodule.exports = {\n    parseScriptElementOptions : util.isBrowser() ? parseScriptElementOptions : parseScriptElementOptionsNoop,\n    parseURLQueryOptions      : util.isBrowser() ? parseURLQueryOptions : parseURLQueryOptionsNoop,\n};\n","const optionsParser = require('./options_parser.js');\nconst util = require('./util');\n\nconst kRuntimeGUIDCookiePrefix = 'lightstep_guid';\nconst kSessionIDCookieKey = 'lightstep_session_id';\nconst kCookieTimeToLiveSeconds = 7 * 24 * 60 * 60;\n\nlet nowMicrosImp = (function () {\n    // Is a hi-res timer available?\n    if (window.performance\n        && window.performance.now\n        && window.performance.timing\n        && window.performance.timing.navigationStart) {\n        let start = performance.timing.navigationStart;\n        return function () {\n            return Math.floor((start + performance.now()) * 1000.0);\n        };\n    }\n    // The low-res timer is the best we can do\n    return function () {\n        return Date.now() * 1000.0;\n    };\n}());\n\nclass PlatformBrowser {\n    name() {\n        return 'browser';\n    }\n\n    nowMicros() {\n        return nowMicrosImp();\n    }\n\n    // Return the GUID to use for the runtime. The intention is to reuse the\n    // GUID so that logically a single browser session looks like a single\n    // runtime.\n    runtimeGUID(groupName) {\n        // Account for the groupName in the same that multiple apps or services\n        // are running on the same domain (and should not share the same\n        // runtime GUID).\n        let cookieKey = encodeURIComponent(`${kRuntimeGUIDCookiePrefix}/${groupName}`);\n        let uuid = util.cookie(cookieKey) || this._generateLongUUID();\n        util.cookie(cookieKey, uuid, kCookieTimeToLiveSeconds, '/');\n\n        // Also create a session ID as well to give the server more information\n        // to coordinate with.\n        let sessionID = util.cookie(kSessionIDCookieKey) || this._generateLongUUID();\n        util.cookie(kSessionIDCookieKey, sessionID, kCookieTimeToLiveSeconds, '/');\n\n        return uuid;\n    }\n\n    generateUUID() {\n        return this._generateLongUUID();\n    }\n\n    _generateLongUUID() {\n        /* eslint-disable no-bitwise */\n        let p0 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        let p1 = `00000000${Math.abs((Math.random() * 0xFFFFFFFF) | 0).toString(16)}`.substr(-8);\n        return `${p0}${p1}`;\n        /* eslint-enable no-bitwise */\n    }\n\n    onBeforeExit(...args) {\n        // This will result in the final report not being made in non-browser\n        // environments like React Native. Flush should be called explicitly in\n        // those environments\n        if (util.isBrowser()) {\n            window.addEventListener('beforeunload', ...args);\n        }\n    }\n\n    plugins(opts) {\n        return [\n            require('../../../plugins/instrument_xhr'),\n            require('../../../plugins/instrument_fetch'),\n            require('../../../plugins/instrument_document_load'),\n        ];\n    }\n\n    options(imp) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n        optionsParser.parseURLQueryOptions(tracerOpts, browserOpts);\n        return tracerOpts;\n    }\n\n    static initLibrary(lib) {\n        let tracerOpts = {};\n        let browserOpts = {};\n        optionsParser.parseScriptElementOptions(tracerOpts, browserOpts);\n\n        if (browserOpts.init_global_tracer) {\n            PlatformBrowser.initGlobalTracer(lib, tracerOpts);\n        }\n    }\n\n    static initGlobalTracer(lib, opts) {\n        if (typeof window !== 'object') {\n            return;\n        }\n        if (typeof window.opentracing !== 'object') {\n            return;\n        }\n        opentracing.initGlobalTracer(new lib.Tracer(opts)); // eslint-disable-line no-undef\n    }\n\n    tracerTags() {\n        return {\n            'lightstep.tracer_platform' : 'browser',\n        };\n    }\n\n    // There's no way to truly \"fatal\" on the browser; the best approximation\n    // is an Error exception.\n    fatal(message) {\n        throw new Error(message);\n    }\n\n    localStoreGet(key) {\n        try {\n            if (!window.sessionStorage) {\n                return null;\n            }\n        } catch (_ignored) {\n            // Accessing `sessionStorage` or `localStorage` in an `<iframe>` in Chrome throws when\n            // the user setting \"block third-party cookies and site data\" is turned on.\n            //\n            // eslint-disable-next-line max-len\n            // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n            return null;\n        }\n        try {\n            return JSON.parse(sessionStorage.getItem(`lightstep/${key}`));\n        } catch (_ignored) {\n            return null;\n        }\n    }\n\n    localStoreSet(key, value) {\n        try {\n            if (!window.sessionStorage) {\n                return;\n            }\n        } catch (_ignored) {\n            // (See comment above)\n            return;\n        }\n        try {\n            sessionStorage.setItem(`lightstep/${key}`, JSON.stringify(value));\n        } catch (_ignored) { /* Ignored */ }\n    }\n}\n\nmodule.exports = PlatformBrowser;\n","module.exports = require('./generated/thrift_all.js').Thrift;\n","let proto = require('../../generated_proto/collector_pb.js');\n\nexport default class TransportBrowser {\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let reportProto = report.toProto(auth);\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v2/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.responseType = 'arraybuffer';\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('Accept', 'application/octet-stream');\n        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.response) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = proto.ReportResponse.deserializeBinary(this.response).toObject();\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, resp);\n            }\n        };\n        let serialized = reportProto.serializeBinary();\n        xhr.send(serialized);\n    }\n}\n","export default class TransportBrowser {\n    constructor() {\n        this._host = '';\n        this._port = 0;\n        this._path = '';\n        this._encryption = '';\n    }\n\n    ensureConnection(opts) {\n        this._host = opts.collector_host;\n        this._port = opts.collector_port;\n        this._path = opts.collector_path;\n        this._encryption = opts.collector_encryption;\n    }\n\n    report(detached, auth, report, done) {\n        try {\n            if (!detached) {\n                this._reportAJAX(auth, report, done);\n            } else {\n                this._reportAsyncScript(auth, report, done);\n            }\n        } catch (e) {\n            return done(e, null);\n        }\n    }\n\n    _reportAJAX(auth, report, done) {\n        let payload = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/api/v0/reports`;\n        let xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        // Note: the browser automatically sets 'Connection' and 'Content-Length'\n        // and *does not* allow they to be set manually\n        xhr.setRequestHeader('LightStep-Access-Token', auth.getAccessToken());\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        //req.setRequestHeader('Content-Encoding', 'gzip');\n        xhr.onreadystatechange = function () {\n            if (this.readyState === 4) {\n                let err = null;\n                let resp = null;\n                if (this.status !== 200) {\n                    err = new Error(`status code = ${this.status}`);\n                } else if (!this.responseText) {\n                    err = new Error('unexpected empty response');\n                } else {\n                    try {\n                        resp = JSON.parse(this.responseText);\n                    } catch (exception) {\n                        err = exception;\n                    }\n                }\n                return done(err, resp);\n            }\n        };\n        xhr.send(payload);\n    }\n\n    // Do a \"tail flush\" using an async browser script load.  This does not get\n    // interrupted as a normal Thirft RPC would when navigating away from\n    // the page.\n    _reportAsyncScript(auth, report, done) {\n        let authJSON   = JSON.stringify(auth.toThrift());\n        let reportJSON = JSON.stringify(report.toThrift());\n        let protocol = (this._encryption === 'none') ? 'http' : 'https';\n        let url = `${protocol}://${this._host}:${this._port}${this._path}/_rpc/v1/reports/uri_encoded`\n            + `?auth=${encodeURIComponent(authJSON)}`\n            + `&report=${encodeURIComponent(reportJSON)}`;\n\n        let elem = document.createElement('script');\n        elem.async = true;\n        elem.defer = true;\n        elem.src = url;\n        elem.type = 'text/javascript';\n\n        let hostElem = document.getElementsByTagName('head')[0];\n        if (hostElem) {\n            hostElem.appendChild(elem);\n        }\n        return done(null, null);\n    }\n}\n","/* eslint-disable */\n\nfunction isBrowser() {\n    return typeof document !== \"undefined\";\n}\n\n// This function is copied directly from https://github.com/litejs/browser-cookie-lite.\n// It is licensed under the MIT License and authored by Lauri Rooden.\nfunction cookie(name, value, ttl, path, domain, secure) {\n    if (arguments.length > 1) {\n        let newCookie = name + '=' + encodeURIComponent(value) +\n            (ttl ? \"; expires=\" + new Date(+new Date()+(ttl*1000)).toUTCString() : '') +\n            (path   ? \"; path=\" + path : '') +\n            (domain ? \"; domain=\" + domain : '') +\n            (secure ? \"; secure\" : '');\n        document.cookie = newCookie;\n        return newCookie;\n    }\n    return decodeURIComponent(((\"; \"+document.cookie).split(\"; \"+name+\"=\")[1]||\"\").split(\";\")[0]);\n}\n\nfunction cookieNoop() {\n    return null;\n}\n\n/* eslint-enable */\n\nmodule.exports = {\n    cookie    : isBrowser() ? cookie : cookieNoop,\n    isBrowser : isBrowser,\n};\n","import LightStepPropagator from './propagator_ls';\n\nconst CARRIER_B3_TRACER_STATE_PREFIX = 'x-b3-';\n\nexport default class B3Propagator extends LightStepPropagator {\n    constructor(tracer) {\n        super(tracer);\n        this._carrierPrefix = CARRIER_B3_TRACER_STATE_PREFIX;\n    }\n\n    inject(spanContext, carrier) {\n        if (!carrier) {\n            this._tracer._error('Unexpected null carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._tracer._error(`Unexpected '${typeof carrier}' FORMAT_TEXT_MAP carrier in call to inject`);\n            return;\n        }\n\n        let traceId = spanContext.traceGUID();\n        if (traceId.length === 32 && traceId.substr(0, 16) === '0000000000000000') {\n            traceId = traceId.substr(16); // take least significant 8 bytes (16 chars)\n        }\n\n        carrier[`${this._carrierPrefix}spanid`] = spanContext._guid;\n        carrier[`${this._carrierPrefix}traceid`] = traceId;\n        if (spanContext._sampled) {\n            carrier[`${this._carrierPrefix}sampled`] = '1';\n        } else {\n            carrier[`${this._carrierPrefix}sampled`] = '0';\n        }\n        spanContext.forEachBaggageItem((key, value) => {\n            carrier[`${this._baggagePrefix}${key}`] = value;\n        });\n        return carrier;\n    }\n}\n","import _each from '../_each';\nimport SpanContextImp from './span_context_imp';\nimport CARRIER_BAGGAGE_PREFIX from './propagator_ls';\n\nconst CARRIER_DD_TRACER_STATE_PREFIX = 'x-datadog-';\n\nexport default class DDPropagator {\n    constructor(tracer) {\n        this._tracer = tracer;\n        this._baggagePrefix = CARRIER_BAGGAGE_PREFIX;\n        this._carrierPrefix = CARRIER_DD_TRACER_STATE_PREFIX;\n    }\n\n    inject(spanContext, carrier) {\n        if (!carrier) {\n            this._tracer._error('Unexpected null carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._tracer._error(`Unexpected '${typeof carrier}' FORMAT_TEXT_MAP carrier in call to inject`);\n            return;\n        }\n\n        // eslint-disable-next-line max-len\n        // Per https://github.com/lightstep/lightstep-tracer-javascript/blob/master/src/imp/platform/node/platform_node.js#L91\n        // all generated GUIDs are base 16 strings.\n        // DD headers expect integers, not base 16 values.\n        carrier[`${this._carrierPrefix}parent-id`] = parseInt(spanContext._guid, 16).toString();\n        carrier[`${this._carrierPrefix}trace-id`] = parseInt(spanContext.traceGUID(), 16).toString();\n        if (spanContext._sampled) {\n            carrier[`${this._carrierPrefix}sampling-priority`] = '1';\n        } else {\n            carrier[`${this._carrierPrefix}sampling-priority`] = '0';\n        }\n\n        spanContext.forEachBaggageItem((key, value) => {\n            carrier[`${this._baggagePrefix}${key}`] = value;\n        });\n        return carrier;\n    }\n\n    extract(carrier) {\n        // Iterate over the contents of the carrier and set the properties\n        // accordingly.\n        let foundFields = 0;\n        let spanGUID = null;\n        let traceGUID = null;\n        let sampled = true;\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, this._carrierPrefix.length) !== this._carrierPrefix) {\n                return;\n            }\n            let suffix = key.substr(this._carrierPrefix.length);\n\n            switch (suffix) {\n            case 'trace-id':\n                foundFields++;\n                traceGUID = parseInt(value, 10).toString(16);\n                break;\n            case 'parent-id':\n                foundFields++;\n                spanGUID = parseInt(value, 10).toString(16);\n                break;\n            case 'sampling-priority':\n                // TODO: support sampling priority somehow. This is a float64 that does not\n                // necessarily represent the sampling decision\n                if (value === 0) {\n                    sampled = false;\n                }\n                break;\n            default:\n                this._tracer._error(`Unrecognized carrier key '${key}' with recognized prefix. Ignoring.`);\n                break;\n            }\n        });\n\n        if (foundFields === 0) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n        if (foundFields < 2) {\n            // A partial SpanContext suggests some sort of data corruption.\n            this._tracer._error(`Only found a partial SpanContext: ${carrier}`);\n            return null;\n        }\n\n        let spanContext = new SpanContextImp(spanGUID, traceGUID, sampled);\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, this._baggagePrefix.length) !== this._baggagePrefix) {\n                return;\n            }\n            let suffix = key.substr(this._baggagePrefix.length);\n            spanContext.setBaggageItem(suffix, value);\n        });\n        return spanContext;\n    }\n}\n","import pb from 'protobufjs';\nimport long from 'long';\nimport _each from '../_each';\nimport _leftpad from '../_leftpad';\nimport SpanContextImp from './span_context_imp';\nimport LightStepPropagator from './propagator_ls';\n\nconst CARRIER_ENVOY_HEADER_KEY = 'x-ot-span-context';\n\nconst BINARY_PROTO = {\n    nested : {\n        lightstep : {\n            options : { go_package : 'lightsteppb' },\n            nested  : {\n                BinaryCarrier : {\n                    fields : {\n                        deprecated_text_ctx : {\n                            rule : 'repeated',\n                            type : 'bytes',\n                            id   : 1,\n                        },\n                        basic_ctx : { type : 'BasicTracerCarrier', id : 2 },\n                    },\n                },\n                BasicTracerCarrier : {\n                    fields : {\n                        trace_id      : { type : 'fixed64', id : 1 },\n                        span_id       : { type : 'fixed64', id : 2 },\n                        sampled       : { type : 'bool', id : 3 },\n                        baggage_items : { keyType : 'string', type : 'string', id : 4 },\n                    },\n                },\n            },\n        },\n    },\n};\n\n\nexport default class EnvoyPropagator extends LightStepPropagator {\n    constructor(tracer) {\n        super(tracer);\n        this._tracer = tracer;\n        this._envoyHeaderKey = CARRIER_ENVOY_HEADER_KEY;\n        this._carrierPb = pb.Root.fromJSON(BINARY_PROTO);\n    }\n\n    inject(spanContext, carrier) {\n        if (!carrier) {\n            this._tracer._error('Unexpected null carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._tracer._error(\n                `Unexpected '${typeof carrier}' FORMAT_BINARY carrier in call to inject`,\n            );\n            return;\n        }\n\n        let basicContext = {\n            span_id       : long.fromString(spanContext._guid, 16),\n            trace_id      : long.fromString(spanContext._traceGUID, 16),\n            sampled       : true,\n            baggage_items : {},\n        };\n        spanContext.forEachBaggageItem((key, value) => {\n            basicContext.baggage_items[key] = value;\n        });\n\n        let binaryCarrier = this._carrierPb.lookupType('BinaryCarrier');\n\n        let payload = {\n            basic_ctx : basicContext,\n        };\n\n        let err = binaryCarrier.verify(payload);\n        if (err) {\n            this._tracer._error(`Invalid Span Context: ${err}`);\n            return null;\n        }\n        let msg = binaryCarrier.create(payload);\n        let buffer = binaryCarrier.encode(msg).finish();\n        let bufferString = pb.util.base64.encode(buffer, 0, buffer.length);\n        carrier[this._envoyHeaderKey] = bufferString;\n\n        return carrier;\n    }\n\n    extract(carrier) {\n        // Iterate over the contents of the carrier and set the properties\n        // accordingly.\n        let foundFields = 0;\n        let spanGUID = null;\n        let traceGUID = null;\n        let sampled = true;\n\n        if (carrier[this._envoyHeaderKey] === undefined) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n\n        // Decode context\n        const binaryData = Buffer.from(carrier[this._envoyHeaderKey], 'base64');\n        let binaryCarrier = this._carrierPb.lookupType('BinaryCarrier');\n        let msg = binaryCarrier.decode(binaryData);\n        let basicContext = msg.basic_ctx.toJSON();\n\n        if (basicContext === undefined) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n\n        // Validate span context\n        _each(basicContext, (value, key) => {\n            key = key.toLowerCase();\n            if (key === 'baggage_items') {\n                // We will address baggage after span context is verified\n                return;\n            }\n\n            switch (key) {\n            case 'trace_id':\n                foundFields++;\n                // left pad to length of 16\n                // long is used because JS only supports up to 53 bit integers\n                traceGUID = _leftpad(\n                    long.fromValue(value).toString(16),\n                    16,\n                    '0',\n                );\n                break;\n            case 'span_id':\n                foundFields++;\n                // left pad to length of 16\n                // long is used because JS only supports up to 53 bit integers\n                spanGUID = _leftpad(\n                    long.fromValue(value).toString(16),\n                    16,\n                    '0',\n                );\n                // left pad\n\n                break;\n            case 'sampled':\n                switch (value) {\n                case 0:\n                case '0':\n                case false:\n                case 'false':\n                    sampled = false;\n                    break;\n                default:\n                    sampled = true;\n                    break;\n                }\n                break;\n            default:\n                this._tracer._error(\n                    `Unrecognized carrier key '${key}'. Ignoring.`,\n                );\n                break;\n            }\n        });\n\n        if (foundFields === 0) {\n        // This is not an error per se, there was simply no SpanContext\n        // in the carrier.\n            return null;\n        }\n        if (foundFields < 2) {\n        // A partial SpanContext suggests some sort of data corruption.\n            this._tracer._error(`Only found a partial SpanContext: ${carrier}`);\n            return null;\n        }\n\n        let spanContext = new SpanContextImp(spanGUID, traceGUID, sampled);\n\n        if (basicContext.baggage_items !== undefined) {\n            _each(basicContext.baggage_items, (value, key) => {\n                spanContext.setBaggageItem(key.toLowerCase(), value);\n            });\n        }\n\n        return spanContext;\n    }\n}\n","import _each from '../_each';\nimport SpanContextImp from './span_context_imp';\n\nconst CARRIER_TRACER_STATE_PREFIX = 'ot-tracer-';\nconst CARRIER_BAGGAGE_PREFIX = 'ot-baggage-';\n\nexport default class LightStepPropagator {\n    constructor(tracer) {\n        this._tracer = tracer;\n        this._carrierPrefix = CARRIER_TRACER_STATE_PREFIX;\n        this._baggagePrefix = CARRIER_BAGGAGE_PREFIX;\n    }\n\n    inject(spanContext, carrier) {\n        if (!carrier) {\n            this._tracer._error('Unexpected null carrier in call to inject');\n            return;\n        }\n        if (typeof carrier !== 'object') {\n            this._tracer._error(`Unexpected '${typeof carrier}' FORMAT_TEXT_MAP carrier in call to inject`);\n            return;\n        }\n\n        carrier[`${this._carrierPrefix}spanid`] = spanContext._guid;\n        carrier[`${this._carrierPrefix}traceid`] = spanContext._traceGUID;\n        carrier[`${this._carrierPrefix}sampled`] = 'true';\n        spanContext.forEachBaggageItem((key, value) => {\n            carrier[`${this._baggagePrefix}${key}`] = value;\n        });\n        return carrier;\n    }\n\n    extract(carrier) {\n        // Iterate over the contents of the carrier and set the properties\n        // accordingly.\n        let foundFields = 0;\n        let spanGUID = null;\n        let traceGUID = null;\n        let sampled = true;\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, this._carrierPrefix.length) !== this._carrierPrefix) {\n                return;\n            }\n            let suffix = key.substr(this._carrierPrefix.length);\n\n            switch (suffix) {\n            case 'traceid':\n                foundFields++;\n                traceGUID = value;\n                break;\n            case 'spanid':\n                foundFields++;\n                spanGUID = value;\n                break;\n            case 'sampled':\n                switch (value) {\n                case 0:\n                case '0':\n                case false:\n                case 'false':\n                    sampled = false;\n                    break;\n                default:\n                    sampled = true;\n                    break;\n                }\n                break;\n            default:\n                this._tracer._error(`Unrecognized carrier key '${key}' with recognized prefix. Ignoring.`);\n                break;\n            }\n        });\n\n        if (foundFields === 0) {\n            // This is not an error per se, there was simply no SpanContext\n            // in the carrier.\n            return null;\n        }\n        if (foundFields < 2) {\n            // A partial SpanContext suggests some sort of data corruption.\n            this._tracer._error(`Only found a partial SpanContext: ${carrier}`);\n            return null;\n        }\n\n        let spanContext = new SpanContextImp(spanGUID, traceGUID, sampled);\n\n        _each(carrier, (value, key) => {\n            key = key.toLowerCase();\n            if (key.substr(0, this._baggagePrefix.length) !== this._baggagePrefix) {\n                return;\n            }\n            let suffix = key.substr(this._baggagePrefix.length);\n            spanContext.setBaggageItem(suffix, value);\n        });\n        return spanContext;\n    }\n}\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce';\n\nlet proto = require('./generated_proto/collector_pb');\n\nexport default class ReportImp {\n    constructor(runtime, oldestMicros, youngestMicros, spanRecords, internalLogs, counters, timestampOffsetMicros) {\n        this._runtime = runtime;\n        this._oldestMicros = oldestMicros;\n        this._youngestMicros = youngestMicros;\n        this._spanRecords = spanRecords;\n        this._internalLogs = internalLogs;\n        this._counters = counters;\n        this._timestampOffsetMicros = timestampOffsetMicros;\n    }\n\n    getSpanRecords() {\n        return this._spanRecords;\n    }\n\n    getInternalLogs() {\n        return this._internalLogs;\n    }\n\n    getCounters() {\n        return this._counters;\n    }\n\n    toThrift() {\n        _each(this._spanRecords, (span) => {\n            span.runtime_guid = this._runtimeGUID;\n        });\n\n        let thriftCounters = [];\n        _each(this._counters, (value, key) => {\n            if (value === 0) {\n                return;\n            }\n            thriftCounters.push(new crouton_thrift.MetricsSample({\n                name         : coerce.toString(key),\n                double_value : coerce.toNumber(value),\n            }));\n        });\n\n        let thriftSpanRecords = [];\n        _each(this._spanRecords, (spanRecord) => {\n            thriftSpanRecords.push(spanRecord._toThrift());\n        });\n\n        return new crouton_thrift.ReportRequest({\n            runtime          : this._runtime.toThrift(),\n            oldest_micros    : this._oldestMicros,\n            youngest_micros  : this._youngestMicros,\n            span_records     : thriftSpanRecords,\n            internal_logs    : this._internalLogs,\n            internal_metrics : new crouton_thrift.Metrics({\n                counts : thriftCounters,\n            }),\n            timestamp_offset_micros : this._timestampOffsetMicros,\n        });\n    }\n\n    toProto(auth) {\n        let spansList = [];\n        _each(this._spanRecords, (spanRecord) => {\n            spansList.push(spanRecord._toProto());\n        });\n\n        let countsList = [];\n        _each(this._counters, (count) => {\n            let metricSample = new proto.MetricsSample();\n            metricSample.setName(count.name);\n            metricSample.setIntValue(count.int64_value);\n            metricSample.setDoubleValue(count.double_value);\n            countsList.push(metricSample);\n        });\n\n        let internalMetrics = new proto.InternalMetrics();\n        internalMetrics.setCountsList(countsList);\n\n        let reportProto = new proto.ReportRequest();\n        reportProto.setAuth(auth.toProto());\n        reportProto.setReporter(this._runtime.toProto());\n        reportProto.setSpansList(spansList);\n        reportProto.setTimestampOffsetMicros(this._timestampOffsetMicros.toString(10));\n        reportProto.setInternalMetrics(internalMetrics);\n        return reportProto;\n    }\n}\n","import { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport _each from '../_each'; // eslint-disable-line camelcase\nimport * as coerce from './coerce';\n\nlet converter = require('hex2dec');\nlet proto = require('./generated_proto/collector_pb');\nconst packageObject = require('../../package.json');\n\nexport default class RuntimeImp {\n    constructor(runtimeGUID, startMicros, componentName, attributes) {\n        this._runtimeGUID = runtimeGUID;\n        this._startMicros = startMicros;\n        this._componentName = componentName;\n        this._attributes = attributes;\n    }\n\n    toThrift() {\n        let thriftAttrs = [];\n        _each(this._attributes, (val, key) => {\n            thriftAttrs.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(val),\n            }));\n        });\n\n        // NOTE: for legacy reasons, the Thrift field is called \"group_name\"\n        // but is semantically equivalent to the \"component_name\"\n        return new crouton_thrift.Runtime({\n            guid         : this._runtimeGUID,\n            start_micros : this._startMicros,\n            group_name   : this._componentName,\n            attrs        : thriftAttrs,\n        });\n    }\n\n    toProto() {\n        let tracerVersion = new proto.KeyValue();\n        tracerVersion.setKey('lightstep.tracer_version');\n        tracerVersion.setStringValue(packageObject.version);\n\n        let tracerPlatform = new proto.KeyValue();\n        tracerPlatform.setKey('lightstep.tracer_platform');\n        tracerPlatform.setStringValue(this._attributes['lightstep.tracer_platform']);\n\n        let tracerPlatformVersion = new proto.KeyValue();\n        tracerPlatformVersion.setKey('lightstep.tracer_platform_version');\n        tracerPlatformVersion.setStringValue(this._attributes['lightstep.tracer_platform_version']);\n\n        let componentName = new proto.KeyValue();\n        componentName.setKey('lightstep.component_name');\n        componentName.setStringValue(this._componentName);\n\n        let commandLine = new proto.KeyValue();\n        commandLine.setKey('lightstep.command_line');\n        commandLine.setStringValue(this._attributes['lightstep.command_line']);\n\n        let hostname = new proto.KeyValue();\n        hostname.setKey('lightstep.hostname');\n        hostname.setStringValue(this._attributes['lightstep.hostname']);\n\n        let reporterId = converter.hexToDec(this._runtimeGUID);\n\n        let tracerTags = [];\n        _each(this._attributes, (val, key) => {\n            let ttag = new proto.KeyValue();\n            ttag.setKey(key);\n            ttag.setStringValue(val);\n            tracerTags.push(ttag);\n        });\n\n        let reporterTags = [tracerVersion, tracerPlatform, componentName, commandLine, hostname, tracerPlatformVersion];\n        let allTags = reporterTags.concat(tracerTags);\n\n        let reporterProto = new proto.Reporter();\n        reporterProto.setReporterId(reporterId);\n        reporterProto.setTagsList(allTags);\n\n        return reporterProto;\n    }\n}\n","import _each from '../_each';\n\nexport default class SpanContextImp {\n    // ---------------------------------------------------------------------- //\n    // OpenTracing Implementation\n    // ---------------------------------------------------------------------- //\n\n    setBaggageItem(key, value) {\n        this._baggage[key] = value;\n    }\n\n    getBaggageItem(key) {\n        return this._baggage[key];\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    // This is part of the formal OT API in Go; and will likely be supported\n    // across platforms.\n    //\n    // https://github.com/opentracing/opentracing.github.io/issues/103\n    forEachBaggageItem(f) {\n        _each(this._baggage, (val, key) => {\n            f(key, val);\n        });\n    }\n\n    // traceGUID returns a 128 bit trace ID.\n    traceGUID() {\n        return `${this._upperTraceGUID}${this._traceGUID}`;\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(spanGUID, traceGUID, sampled) {\n        this._baggage = {};\n        this._guid = spanGUID;\n        this._sampled = true;\n        // Ignore undefined or null when determining truthiness.\n        if (sampled === false) {\n            this._sampled = sampled;\n        }\n        // upperTraceGUID is the most significant 8 bytes of a B3/TraceContext\n        // 16 byte trace ID. Represented in base16.\n        this._upperTraceGUID = '0000000000000000';\n        this._traceGUID = traceGUID;\n        if (this._traceGUID && this._traceGUID.length === 32) {\n            this._upperTraceGUID = traceGUID.substr(0, 16);\n            this._traceGUID = traceGUID.substr(16);\n        }\n    }\n}\n","import * as opentracing from 'opentracing';\nimport * as coerce from './coerce';\nimport * as constants from '../constants';\nimport _each from '../_each';\nimport { crouton_thrift } from '../platform_abstraction_layer'; // eslint-disable-line camelcase\nimport LogRecordImp from './log_record_imp'; // eslint-disable-line camelcase\nimport util from './util/util';\n\nlet converter = require('hex2dec');\nlet googleProtobufTimestampPB = require('google-protobuf/google/protobuf/timestamp_pb');\nlet proto = require('./generated_proto/collector_pb');\n\nexport default class SpanImp extends opentracing.Span {\n    // ---------------------------------------------------------------------- //\n    // opentracing.Span SPI\n    // ---------------------------------------------------------------------- //\n\n    _tracer() {\n        return this._tracerImp;\n    }\n\n    _context() {\n        return this._ctx;\n    }\n\n    _setOperationName(name) {\n        this._operationName = `${name}`;\n    }\n\n    _setBaggageItem(key, value) {\n        this._ctx.setBaggageItem(key, value);\n    }\n\n    _getBaggageItem(key) {\n        return this._ctx.getBaggageItem(key);\n    }\n\n    _addTags(keyValuePairs) {\n        let self = this;\n        _each(keyValuePairs, (value, key) => {\n            self._tags[key] = value;\n        });\n    }\n\n    _log(keyValuePairs, timestamp) {\n        let self = this;\n        const argumentType = typeof keyValuePairs;\n        if (argumentType !== 'object') {\n            self._tracerImp._error('Span.log() expects an object as its first argument');\n            return;\n        }\n\n        let tsMicros = timestamp\n            ? (timestamp * 1000)\n            : self._tracerImp._platform.nowMicros();\n\n        let record = new LogRecordImp(\n            self._tracerImp.getLogFieldKeyHardLimit(),\n            self._tracerImp.getLogFieldValueHardLimit(),\n            tsMicros,\n            keyValuePairs,\n        );\n        self._log_records = self._log_records || [];\n        self._log_records.push(record);\n        self._tracerImp.emit('log_added', record);\n    }\n\n    _finish(finishTime) {\n        return this.end(finishTime);\n    }\n\n    // ---------------------------------------------------------------------- //\n    // Private methods\n    // ---------------------------------------------------------------------- //\n\n    constructor(tracer, name, spanContext) {\n        super();\n\n        console.assert(typeof tracer === 'object', 'Invalid runtime'); // eslint-disable-line no-console\n\n        this._tracerImp = tracer;\n        this._ctx = spanContext;\n        this._ended  = false;\n\n        this._operationName = name;\n        this._tags          = {};\n        this._beginMicros   = tracer._platform.nowMicros();\n        this._endMicros     = 0;\n        this._errorFlag     = false;\n        this._log_records   = null;\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep Extensions\n    // ---------------------------------------------------------------------- //\n\n    getOperationName() {\n        return this._operationName;\n    }\n\n    // Getter only. The GUID is immutable once set internally.\n    guid() {\n        return this._ctx._guid;\n    }\n\n    traceGUID() {\n        return this._ctx._traceGUID;\n    }\n\n    parentGUID() {\n        return this._tags.parent_span_guid;\n    }\n\n    setParentGUID(guid) {\n        this._tags.parent_span_guid = coerce.toString(guid);\n        return this;\n    }\n\n    beginMicros() {\n        return this._beginMicros;\n    }\n\n    setBeginMicros(micros) {\n        this._beginMicros = micros;\n        return this;\n    }\n\n    endMicros() {\n        return this._endMicros;\n    }\n\n    setEndMicros(micros) {\n        this._endMicros = micros;\n        return this;\n    }\n\n    /**\n     * Returns a URL to the trace containing this span.\n     *\n     * Unlike most methods, it *is* safe to call this method after `finish()`.\n     *\n     * @return {string} the absolute URL for the span\n     */\n    generateTraceURL() {\n        let micros;\n        if (this._beginMicros > 0 && this._endMicros > 0) {\n            micros = Math.floor((this._beginMicros + this._endMicros) / 2);\n        } else {\n            micros = this._tracerImp._platform.nowMicros();\n        }\n\n        let urlPrefix = constants.LIGHTSTEP_APP_URL_PREFIX;\n        let accessToken = encodeURIComponent(this._tracerImp.options().access_token);\n        let guid = encodeURIComponent(this.guid());\n        return `${urlPrefix}/${accessToken}/trace?span_guid=${guid}&at_micros=${micros}`;\n    }\n\n    getTags() {\n        return this._tags;\n    }\n\n    /**\n     * Finishes the span.\n     *\n     * @param  {Number} finishTime\n     *         Optional Unix timestamp in milliseconds setting an explicit\n     *         finish time for the span.\n     */\n    end(finishTime) {\n        // Ensure a single span is not recorded multiple times\n        if (this._ended) {\n            return;\n        }\n        this._ended = true;\n\n        if (finishTime !== undefined) {\n            this.setEndMicros(Math.floor(finishTime * 1000));\n        }\n\n        // Do not set endMicros if it has already been set. This accounts for\n        // the case of a span that has had it's times set manually (i.e. allows\n        // for retroactively created spans that might not be possible to create\n        // in real-time).\n        if (this._endMicros === 0) {\n            this.setEndMicros(this._tracerImp._platform.nowMicros());\n        }\n\n        if (util.shouldSendMetaSpan(this._tracer().options(), this.getTags())) {\n            this._tracerImp.startSpan(constants.LS_META_SP_FINISH, {\n                tags : {\n                    [constants.LS_META_EVENT_KEY] : true,\n                    [constants.LS_META_TRACE_KEY] : this.traceGUID(),\n                    [constants.LS_META_SPAN_KEY]  : this.guid(),\n                },\n            }).finish();\n        }\n\n        this._tracerImp._addSpanRecord(this);\n    }\n\n    _toThrift() {\n        let attributes = [];\n        _each(this._tags, (value, key) => {\n            attributes.push(new crouton_thrift.KeyValue({\n                Key   : coerce.toString(key),\n                Value : coerce.toString(value),\n            }));\n        });\n\n        let logs = [];\n        _each(this._log_records, (logRecord) => {\n            let logThrift = logRecord.toThrift();\n            this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n            this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n            logs.push(logThrift);\n        });\n\n        return new crouton_thrift.SpanRecord({\n            span_guid       : this.guid(),\n            trace_guid      : this.traceGUID(),\n            runtime_guid    : this._tracerImp.guid(),\n            span_name       : this._operationName,\n            oldest_micros   : this._beginMicros,\n            youngest_micros : this._endMicros,\n            attributes      : attributes,\n            error_flag      : this._errorFlag,\n            log_records     : logs,\n        });\n    }\n\n    _toProto() {\n        let spanContextProto = new proto.SpanContext();\n\n        spanContextProto.setTraceId(converter.hexToDec(this.traceGUID()));\n        spanContextProto.setSpanId(converter.hexToDec(this.guid()));\n\n        let spanProto = new proto.Span();\n        spanProto.setSpanContext(spanContextProto);\n        spanProto.setOperationName(this._operationName);\n\n        let startTimestamp = new googleProtobufTimestampPB.Timestamp();\n        let startSeconds = Math.floor(this._beginMicros / 1000000);\n        let startNanos = (this._beginMicros % 1000000) * 1000;\n        startTimestamp.setSeconds(startSeconds);\n        startTimestamp.setNanos(startNanos);\n        spanProto.setStartTimestamp(startTimestamp);\n        spanProto.setDurationMicros((this._endMicros - this._beginMicros).toString());\n\n        let logs = [];\n        _each(this._log_records, (logRecord) => {\n            let logProto = logRecord.toProto();\n            this._tracerImp._counters['logs.keys.over_limit'] += logRecord.getNumKeysOverLimit();\n            this._tracerImp._counters['logs.values.over_limit'] += logRecord.getNumValuesOverLimit();\n            logs.push(logProto);\n        });\n        spanProto.setLogsList(logs);\n\n        let parentSpanGUID;\n        let tags = [];\n        _each(this._tags, (value, key) => {\n            let strValue = coerce.toString(value);\n            let strKey = coerce.toString(key);\n            let tag = new proto.KeyValue();\n            if (strKey === 'parent_span_guid') {\n                parentSpanGUID = strValue;\n            }\n            tag.setKey(strKey);\n            tag.setStringValue(strValue);\n            tags.push(tag);\n        });\n        spanProto.setTagsList(tags);\n\n        if (parentSpanGUID !== undefined) {\n            let ref = new proto.Reference();\n            ref.setRelationship(proto.Reference.Relationship.CHILD_OF);\n            let parentSpanContext = new proto.SpanContext();\n            parentSpanContext.setSpanId(converter.hexToDec(parentSpanGUID));\n            ref.setSpanContext(parentSpanContext);\n            spanProto.setReferencesList([ref]);\n        }\n\n        return spanProto;\n    }\n}\n","//============================================================================//\n// Imports\n//============================================================================//\n\nimport EventEmitter from 'eventemitter3';\nimport * as opentracing from 'opentracing';\n\nimport SpanContextImp from './span_context_imp';\nimport SpanImp from './span_imp';\nimport _each from '../_each';\nimport { Platform, ProtoTransport, ThriftTransport } from '../platform_abstraction_layer';\nimport AuthImp from './auth_imp';\nimport RuntimeImp from './runtime_imp';\nimport ReportImp from './report_imp';\nimport LightStepPropagator from './propagator_ls';\n\nconst ClockState    = require('./util/clock_state');\nconst LogBuilder    = require('./log_builder');\nconst coerce        = require('./coerce');\nconst constants     = require('../constants');\nconst globals       = require('./globals');\nconst packageObject = require('../../package.json');\nconst util          = require('./util/util');\n\nconst DEFAULT_COLLECTOR_HOSTNAME   = 'collector.lightstep.com';\nconst DEFAULT_COLLECTOR_PORT_TLS   = 443;\nconst DEFAULT_COLLECTOR_PORT_PLAIN = 80;\nconst DEFAULT_COLLECTOR_PATH       = '';\n\n// Internal errors should be rare. Set a low limit to ensure a cascading failure\n// does not compound an existing problem by trying to send a great deal of\n// internal error data.\nconst MAX_INTERNAL_LOGS = 20;\n\nlet _singleton = null;\n\nexport default class Tracer extends opentracing.Tracer {\n    constructor(opts) {\n        super();\n\n        this._delegateEventEmitterMethods();\n\n        opts = opts || {};\n\n        if (!_singleton) {\n            globals.setOptions(opts);\n            _singleton = this;\n        }\n\n        // Platform abstraction layer\n        this._platform = new Platform(this);\n        this._runtimeGUID = opts.guid || this.override_runtime_guid || null; // Set once the group name is set\n        this._plugins = {};\n        this._options = {};\n        this._optionDescs = [];\n        this._makeOptionsTable();\n\n        this._opentracing = opentracing;\n        if (opts.opentracing_module) {\n            this._opentracing = opts.opentracing_module;\n        }\n\n        let now = this._platform.nowMicros();\n\n        // The thrift authentication and runtime struct are created as soon as\n        // the necessary initialization options are available.\n        this._startMicros = now;\n        this._auth = null;\n        this._runtime = null;\n\n        let logger = {\n            warn  : (msg, payload) => { this._warn(msg, payload); },\n            error : (err, payload) => { this._error(err, payload); },\n        };\n\n        if (opts) {\n            this._transport = opts.override_transport;\n        }\n\n        this._propagators = {};\n        this._propagators[this._opentracing.FORMAT_HTTP_HEADERS] = new LightStepPropagator(this);\n        this._propagators[this._opentracing.FORMAT_TEXT_MAP] = new LightStepPropagator(this);\n        this._propagators[this._opentracing.FORMAT_BINARY] = new LightStepPropagator(this,\n            this._opentracing.FORMAT_BINARY);\n\n        if (opts && opts.propagators) {\n            this._propagators = { ...this._propagators, ...opts.propagators };\n        }\n\n\n        this._reportingLoopActive = false;\n        this._first_report_has_run = false;\n        this._reportYoungestMicros = now;\n        this._reportTimer = null;\n        this._reportErrorStreak = 0; // Number of consecutive errors\n        this._lastVisibleErrorMillis = 0;\n        this._skippedVisibleErrors = 0;\n\n\n        // Set addActiveRootSpan() for detail\n        this._activeRootSpanSet = {};\n        this._activeRootSpan = null;\n\n        // Span reporting buffer and per-report data\n        // These data are reset on every successful report.\n        this._spanRecords = [];\n\n        // The counter names need to match those accepted by the collector.\n        // These are internal counters only.\n        this._counters = {\n            'internal.errors'        : 0,\n            'internal.warnings'      : 0,\n            'spans.dropped'          : 0,\n            'logs.dropped'           : 0,\n            'logs.keys.over_limit'   : 0,\n            'logs.values.over_limit' : 0,\n            'reports.errors.send'    : 0,\n        };\n\n        // For internal (not client) logs reported to the collector\n        this._internalLogs = [];\n\n        // Current runtime state / status\n        this._flushIsActive = false;\n\n        // Built-in plugins\n        this.addPlugin(require('../plugins/log_to_console'));\n\n        // Initialize the platform options after the built-in plugins in\n        // case any of those options affect the built-ins.\n        this.addPlatformPlugins(opts);\n        this.setPlatformOptions(opts);\n\n        // Set constructor arguments\n        if (opts) {\n            this.options(opts);\n        }\n\n        if (typeof this._transport === 'undefined' || this._transport === null) {\n            switch (this._options.transport) {\n            case 'proto':\n                this._transport = new ProtoTransport(logger);\n                this._info('Using protobuf over HTTP transport per user-defined option.');\n                break;\n            case 'thrift':\n                this._transport = new ThriftTransport(logger);\n                this._info('Using thrift transport per user-defined option.');\n                break;\n            default:\n                this._transport = new ProtoTransport(logger);\n                this._info('Using protobuf over HTTP transport as no user-defined option was supplied.');\n            }\n        }\n\n        // For clock skew adjustment.\n        // Must be set after options have been set.\n        this._useClockState = !this._options.disable_clock_skew_correction;\n        this._clockState = new ClockState({\n            nowMicros     : () => this._platform.nowMicros(),\n            localStoreGet : () => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreGet(key);\n            },\n            localStoreSet : (value) => {\n                let key = `clock_state/${this._options.collector_host}`;\n                return this._platform.localStoreSet(key, value);\n            },\n        });\n\n        // This relies on the options being set: call this last.\n        this._setupReportOnExit();\n\n        this._info(`Tracer created with guid ${this._runtimeGUID}`);\n\n        if (this._options.access_token.length === 0) {\n            this._warn(\n                `Access token not set -\n            this requires a satellite with access token checking disabled,\n            such as a developer satellite.`,\n            );\n        }\n\n        this.startPlugins();\n    }\n\n    // Morally speaking, Tracer also inherits from EventEmmiter, but we must\n    // fake it via composition.\n    //\n    // If not obvious on inspection: a hack.\n    _delegateEventEmitterMethods() {\n        let self = this;\n        this._ee = new EventEmitter();\n        // The list of methods at https://nodejs.org/api/events.html\n        _each([\n            'addListener',\n            'emit',\n            'eventNames',\n            'getMaxListeners',\n            'listenerCount',\n            'listeners',\n            'on',\n            'once',\n            'prependListener',\n            'prependOnceListener',\n            'removeAllListeners',\n            'removeListener',\n            'setMaxListeners',\n        ], (methodName) => {\n            self[methodName] = function () {\n                if (self._ee[methodName]) {\n                    // eslint-disable-next-line prefer-spread\n                    self._ee[methodName].apply(self._ee, arguments);\n                }\n            };\n        });\n    }\n\n    _makeOptionsTable() {\n        /* eslint-disable key-spacing, no-multi-spaces */\n\n        // NOTE: make 'verbosity' the first option so it is processed first on\n        // options changes and takes effect as soon as possible.\n        this.addOption('verbosity',             {\n            type : 'int', min: 0, max: 9, defaultValue: 1,\n        });\n\n        // Core options\n        this.addOption('access_token',          { type: 'string',  defaultValue: '' });\n        this.addOption('component_name',        { type: 'string',  defaultValue: '' });\n        this.addOption('collector_host',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_HOSTNAME });\n        this.addOption('collector_port',        { type: 'int',     defaultValue: DEFAULT_COLLECTOR_PORT_TLS });\n        this.addOption('collector_path',        { type: 'string',  defaultValue: DEFAULT_COLLECTOR_PATH });\n        this.addOption('collector_encryption',  { type: 'string',  defaultValue: 'tls' });\n        this.addOption('tags',                  { type: 'any',     defaultValue: {} });\n        this.addOption('max_reporting_interval_millis',  { type: 'int',     defaultValue: 2500 });\n        this.addOption('disable_clock_skew_correction', { type: 'bool', defaultValue: false });\n        this.addOption('transport',             { type: 'string', defaultValue: 'proto' });\n\n        // Non-standard, may be deprecated\n        this.addOption('disabled',              { type: 'bool',    defaultValue: false });\n        this.addOption('max_span_records',      { type: 'int',     defaultValue: 4096 });\n        this.addOption('default_span_tags',     { type: 'any',     defaultValue: {} });\n        this.addOption('report_timeout_millis', { type: 'int',     defaultValue: 30000 });\n        this.addOption('gzip_json_requests',    { type: 'bool',    defaultValue: true });\n        this.addOption('disable_reporting_loop', { type: 'bool',    defaultValue: false });\n        this.addOption('disable_report_on_exit', { type: 'bool',    defaultValue: false });\n        this.addOption('delay_initial_report_millis', { type: 'int', defaultValue: 1000 });\n        this.addOption('error_throttle_millis', { type: 'int',     defaultValue: 60000 });\n        this.addOption('logger',                { type: 'function', defaultValue: this._printToConsole.bind(this) });\n        this.addOption('clear_span_buffer_consecutive_errors',\n            { type: 'int', defaultValue: null });\n\n        // Debugging options\n        //\n        // These are not part of the supported public API.\n        //\n        // If false, SSL certificate verification is skipped. Useful for testing.\n        this.addOption('certificate_verification',      { type: 'bool',    defaultValue: true });\n        // I.e. report only on explicit calls to flush()\n\n        // Unit testing options\n        this.addOption('override_transport',            { type : 'any',    defaultValue: null });\n        this.addOption('silent',                        { type : 'bool',   defaultValue: false });\n\n        // Hard upper limits to protect against worst-case scenarios for log field sizes.\n        this.addOption('log_field_key_hard_limit',   { type: 'int',     defaultValue: 256 });\n        this.addOption('log_field_value_hard_limit', { type: 'int',     defaultValue: 1024 });\n\n        // Meta Event reporting options\n        this.addOption('disable_meta_event_reporting', { type: 'bool', defaultValue: false });\n\n        /* eslint-disable key-spacing, no-multi-spaces */\n    }\n\n    // ---------------------------------------------------------------------- //\n    // opentracing.Tracer SPI\n    // ---------------------------------------------------------------------- //\n\n    _startSpan(name, fields) {\n        // First, assemble the SpanContextImp for our SpanImp.\n        let parentCtxImp = null;\n        fields = fields || {};\n        if (fields.references) {\n            for (let i = 0; i < fields.references.length; i++) {\n                let ref = fields.references[i];\n                let type = ref.type();\n                if (type === this._opentracing.REFERENCE_CHILD_OF\n                    || type === this._opentracing.REFERENCE_FOLLOWS_FROM) {\n                    let context = ref.referencedContext();\n                    if (!context) {\n                        this._error('Span reference has an invalid context', context);\n                        // eslint-disable-next-line no-continue\n                        continue;\n                    }\n                    parentCtxImp = context;\n                    break;\n                }\n            }\n        }\n\n        let traceGUID = parentCtxImp ? parentCtxImp.traceGUID() : this.generateTraceGUIDForRootSpan();\n        let sampled = parentCtxImp ? parentCtxImp._sampled : true;\n        let spanCtx = new SpanContextImp(this._platform.generateUUID(), traceGUID, sampled);\n        let spanImp = new SpanImp(this, name, spanCtx);\n        spanImp.addTags(this._options.default_span_tags);\n\n        _each(fields, (value, key) => {\n            switch (key) {\n            case 'references':\n                // Ignore: handled before constructing the span\n                break;\n            case 'startTime':\n                // startTime is in milliseconds\n                spanImp.setBeginMicros(Math.floor(value * 1000));\n                break;\n            case 'tags':\n                spanImp.addTags(value);\n                break;\n            default:\n                this._warn(`Ignoring unknown field '${key}'`);\n                break;\n            }\n        });\n\n        if (parentCtxImp !== null) {\n            spanImp.setParentGUID(parentCtxImp._guid);\n\n            // Copy baggage items from parent to child\n            parentCtxImp.forEachBaggageItem((k, v) => spanCtx.setBaggageItem(k, v));\n        }\n\n        this.emit('start_span', spanImp);\n\n        if (util.shouldSendMetaSpan(this.options(), spanImp.getTags())) {\n            this.startSpan(constants.LS_META_SP_START,\n                {\n                    tags : {\n                        [constants.LS_META_EVENT_KEY]: true,\n                        [constants.LS_META_TRACE_KEY]: spanImp.traceGUID(),\n                        [constants.LS_META_SPAN_KEY]: spanImp.guid(),\n                    },\n                })\n                .finish();\n        }\n        return spanImp;\n    }\n\n    _inject(spanContext, format, carrier) {\n        if (this.options().meta_event_reporting === true) {\n            this.startSpan(constants.LS_META_INJECT,\n                {\n                    tags: {\n                        [constants.LS_META_EVENT_KEY]: true,\n                        [constants.LS_META_TRACE_KEY]: spanContext._traceGUID,\n                        [constants.LS_META_SPAN_KEY]: spanContext._guid,\n                        [constants.LS_META_PROPAGATION_KEY]: format,\n                    },\n                })\n                .finish();\n        }\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n            this._propagators[this._opentracing.FORMAT_HTTP_HEADERS].inject(spanContext, carrier);\n            break;\n        case this._opentracing.FORMAT_TEXT_MAP:\n            this._propagators[this._opentracing.FORMAT_TEXT_MAP].inject(spanContext, carrier);\n            break;\n        case this._opentracing.FORMAT_BINARY:\n            this._propagators[this._opentracing.FORMAT_BINARY].inject(spanContext, carrier);\n            break;\n        default:\n            this._error(`Unknown format: ${format}`);\n            break;\n        }\n    }\n\n    _extract(format, carrier) {\n        let sc = null;\n        switch (format) {\n        case this._opentracing.FORMAT_HTTP_HEADERS:\n            sc = this._propagators[this._opentracing.FORMAT_HTTP_HEADERS].extract(carrier);\n            break;\n        case this._opentracing.FORMAT_TEXT_MAP:\n            sc = this._propagators[this._opentracing.FORMAT_TEXT_MAP].extract(carrier);\n            break;\n        case this._opentracing.FORMAT_BINARY:\n            sc = this._propagators[this._opentracing.FORMAT_BINARY].extract(carrier);\n            break;\n        default:\n            this._error(`Unsupported format: ${format}`);\n            return null;\n        }\n        if (this.options().meta_event_reporting === true && sc) {\n            this.startSpan(constants.LS_META_EXTRACT,\n                {\n                    tags: {\n                        [constants.LS_META_EVENT_KEY]: true,\n                        [constants.LS_META_TRACE_KEY]: sc._traceGUID,\n                        [constants.LS_META_SPAN_KEY]: sc._guid,\n                        [constants.LS_META_PROPAGATION_KEY]: format,\n                    },\n                })\n                .finish();\n        }\n        return sc;\n    }\n\n    // ---------------------------------------------------------------------- //\n    // LightStep extensions\n    // ---------------------------------------------------------------------- //\n\n    /**\n     * Manually sends a report of all buffered data.\n     *\n     * @param  {Function} done - callback function invoked when the report\n     *         either succeeds or fails.\n     */\n    flush(done) {\n        if (!done) {\n            done = function () {};\n        }\n        if (this._options.disabled) {\n            this._warn('Manual flush() called in disabled state.');\n            return done(null);\n        }\n        this._flushReport(true, false, done);\n    }\n\n    //-----------------------------------------------------------------------//\n    // Options\n    //-----------------------------------------------------------------------//\n\n    guid() {\n        return this._runtimeGUID;\n    }\n\n    verbosity() {\n        // The 'undefined' handling below is for logs that may occur before the\n        // options are initialized.\n        let v = this._options.verbosity;\n        return (v === undefined) ? 1 : v;\n    }\n\n    // Call to generate a new Trace GUID\n    generateTraceGUIDForRootSpan() {\n        let guid = this._platform.generateUUID();\n        if (this._activeRootSpan) {\n            guid = this._activeRootSpan.traceGUID();\n        }\n        return guid;\n    }\n\n    setPlatformOptions(userOptions) {\n        let opts = this._platform.options(this) || {};\n        _each(userOptions, (val, key) => {\n            opts[key] = val;\n        });\n        this.options(opts);\n    }\n\n    // Register a new option.  Used by plug-ins.\n    addOption(name, desc) {\n        desc.name = name;\n        this._optionDescs.push(desc);\n        this._options[desc.name] = desc.defaultValue;\n    }\n\n    options(opts) {\n        if (arguments.length === 0) {\n            console.assert(typeof this._options === 'object',   // eslint-disable-line\n                'Internal error: _options field incorrect');\n            return this._options;\n        }\n        if (typeof opts !== 'object') {\n            throw new Error(`options() must be called with an object: type was ${typeof opts}`);\n        }\n\n        // \"collector_port\" 0 acts as an alias for \"use the default\".\n        if (opts.collector_port === 0) {\n            delete opts.collector_port;\n        }\n\n        // \"collector_encryption\" acts an alias for the common cases of 'collector_port'\n        if (opts.collector_encryption !== undefined && opts.collector_port === undefined) {\n            opts.collector_port = opts.collector_encryption !== 'none'\n                ? DEFAULT_COLLECTOR_PORT_TLS\n                : DEFAULT_COLLECTOR_PORT_PLAIN;\n        }\n        // set meta event reporting to false by default, it will be enabled by the satellite\n        this.meta_event_reporting = false;\n\n        // Track what options have been modified\n        let modified = {};\n        let unchanged = {};\n        _each(this._optionDescs, (desc) => {\n            this._setOptionInternal(modified, unchanged, opts, desc);\n        });\n\n        // Check for any invalid options: is there a key in the specified operation\n        // that didn't result either in a change or a reset to the existing value?\n        Object.keys(opts).forEach((key) => {\n            if (modified[key] === undefined && unchanged[key] === undefined) {\n                this._warn(`Invalid option ${key} with value ${opts[key]}`);\n            }\n        });\n\n        //\n        // Update the state information based on the changes\n        //\n        this._initReportingDataIfNeeded(modified);\n\n        if (!this._reportingLoopActive) {\n            this._startReportingLoop();\n        }\n\n        if (this.verbosity() >= 3) {\n            let optionsString = '';\n            let count = 0;\n            _each(modified, (val, key) => {\n                optionsString += `\\t${JSON.stringify(key)}: ${JSON.stringify(val.newValue)}\\n`;\n                count++;\n            });\n            if (count > 0) {\n                this._debug(`Options modified:\\n${optionsString}`);\n            }\n        }\n        this.emit('options', modified, this._options, this);\n    }\n\n    _setOptionInternal(modified, unchanged, opts, desc) {\n        let { name } = desc;\n        let value = opts[name];\n        let valueType = typeof value;\n        if (value === undefined) {\n            return;\n        }\n\n        // Parse the option (and check constraints)\n        switch (desc.type) {\n        case 'any':\n            break;\n\n        case 'bool':\n            if (value !== true && value !== false) {\n                this._error(`Invalid boolean option '${name}' '${value}'`);\n                return;\n            }\n            break;\n\n        case 'function':\n            if (typeof value !== 'function') {\n                this._error(`Invalid function option '${name}' '${value}'`);\n                return;\n            }\n            break;\n\n        case 'int':\n            if (valueType !== 'number' || Math.floor(value) !== value) {\n                this._error(`Invalid int option '${name}' '${value}'`);\n                return;\n            }\n            if (desc.min !== undefined && desc.max !== undefined) {\n                if (!(value >= desc.min && value <= desc.max)) {\n                    this._error(`Option '${name}' out of range '${value}' is not between ${desc.min} and ${desc.max}`);  // eslint-disable-line max-len\n                    return;\n                }\n            }\n            break;\n\n        case 'string':\n            switch (valueType) {\n            case 'string':\n                break;\n            case 'number':\n                value = coerce.toString(value);\n                break;\n            default:\n                this._error(`Invalid string option ${name} ${value}`);\n                return;\n            }\n            break;\n\n        case 'array':\n            // Per http://stackoverflow.com/questions/4775722/check-if-object-is-array\n            if (Object.prototype.toString.call(value) !== '[object Array]') {\n                this._error(`Invalid type for array option ${name}: found '${valueType}'`);\n                return;\n            }\n            break;\n\n        default:\n            this._error(`Unknown option type '${desc.type}'`);\n            return;\n        }\n\n        // Set the new value, recording any modifications\n        let oldValue = this._options[name];\n        if (oldValue === undefined) {\n            throw new Error(`Attempt to set unknown option ${name}`);\n        }\n\n        // Ignore no-op changes for types that can be checked quickly\n        if (valueType !== 'object' && oldValue === value) {\n            unchanged[name] = true;\n            return;\n        }\n\n        modified[name] = {\n            oldValue : oldValue,\n            newValue : value,\n        };\n        this._options[name] = value;\n    }\n\n    // The authorization and runtime information is initialized as soon\n    // as it is available.  This allows logs and spans to be buffered before\n    // the library is initialized, which can be helpul in a complex setup with\n    // many subsystems.\n    //\n    _initReportingDataIfNeeded(modified) {\n        // Ignore redundant initialization; complaint on inconsistencies\n        if (this._auth !== null) {\n            if (!this._runtime) {\n                return this._error('Inconsistent state: auth initialized without runtime.');\n            }\n            if (modified.access_token) {\n                throw new Error('Cannot change access_token after it has been set.');\n            }\n            if (modified.component_name) {\n                throw new Error('Cannot change component_name after it has been set.');\n            }\n            if (modified.collector_host) {\n                throw new Error('Cannot change collector_host after the connection is established');\n            }\n            if (modified.collector_port) {\n                throw new Error('Cannot change collector_port after the connection is established');\n            }\n            if (modified.collector_path) {\n                throw new Error('Cannot change collector_path after the connection is established');\n            }\n            if (modified.collector_encryption) {\n                throw new Error('Cannot change collector_encryption after the connection is established');\n            }\n            return;\n        }\n\n        this._runtimeGUID = this._platform.runtimeGUID(this._options.component_name);\n\n        this._auth = new AuthImp(this._options.access_token);\n\n        //\n        // Assemble the tracer tags from the user-specified and automatic,\n        // internal tags.\n        //\n        let tags = {};\n        _each(this._options.tags, (value, key) => {\n            if (typeof value !== 'string') {\n                this._error(`Tracer tag value is not a string: key=${key}`);\n                return;\n            }\n            tags[key] = value;\n        });\n        tags['lightstep.tracer_version'] = packageObject.version;\n        let platformTags = this._platform.tracerTags();\n        _each(platformTags, (val, key) => {\n            tags[key] = val;\n        });\n\n        this._runtime = new RuntimeImp(this._runtimeGUID, this._startMicros, this._options.component_name, tags);\n\n        this._info('Initializing reporting data', {\n            component_name : this._options.component_name,\n            access_token   : this._auth.getAccessToken(),\n        });\n        this.emit('reporting_initialized');\n    }\n\n    getLogFieldKeyHardLimit() {\n        return this._options.log_field_key_hard_limit;\n    }\n\n    getLogFieldValueHardLimit() {\n        return this._options.log_field_value_hard_limit;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Plugins\n    //-----------------------------------------------------------------------//\n\n    addPlatformPlugins(opts) {\n        let pluginSet = this._platform.plugins(opts);\n        _each(pluginSet, (val) => {\n            this.addPlugin(val);\n        });\n    }\n\n    addPlugin(plugin) {\n        // Don't add plug-ins twice\n        let name = plugin.name();\n        if (this._plugins[name]) {\n            return;\n        }\n\n        this._plugins[name] = plugin;\n        plugin.addOptions(this);\n    }\n\n    startPlugins() {\n        _each(this._plugins, (val, key) => {\n            this._plugins[key].start(this);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Spans\n    //-----------------------------------------------------------------------//\n\n    // This is a LightStep-specific feature that should be used sparingly. It\n    // sets a \"global\" root span such that spans that would *otherwise* be root\n    // span instead inherit the trace GUID of the active root span. This is\n    // best clarified by example:\n    //\n    // On document load in the browser, an \"active root span\" is created for\n    // the page load process. Any spans started without an explicit parent\n    // will the document load trace GUID instead of starting a trace GUID.\n    // This implicit root remains active only until the page is done loading.\n    //\n    // Any span adding itself as a root span *must* remove itself along with\n    // calling finish(). This will *not* be done automatically.\n    //\n    // NOTE: currently, only the trace GUID is transferred; it may or may not\n    // make sure to make this a proper parent.\n    //\n    // NOTE: the root span tracking is handled as a set rather than a single\n    // global to avoid conflicts between libraries.\n    addActiveRootSpan(span) {\n        this._activeRootSpanSet[span._guid] = span;\n        this._setActiveRootSpanToYoungest();\n    }\n\n    removeActiveRootSpan(span) {\n        delete this._activeRootSpanSet[span._guid];\n        this._setActiveRootSpanToYoungest();\n    }\n\n    _setActiveRootSpanToYoungest() {\n        // Set the _activeRootSpan to the youngest of the roots in case of\n        // multiple.\n        this._activeRootSpan = null;\n        _each(this._activeRootSpanSet, (span) => {\n            if (!this._activeRootSpan\n                || span._beginMicros > this._activeRootSpan._beginMicros) {\n                this._activeRootSpan = span;\n            }\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Encoding / decoding\n    //-----------------------------------------------------------------------//\n\n    _objectToUint8Array(obj) {\n        let jsonString;\n        try {\n            // encodeURIComponent() is a *very* inefficient, but simple and\n            // well-supported way to avoid having to think about Unicode in\n            // in the conversion to a UInt8Array.\n            //\n            // Writing multiple bytes for String.charCodeAt and\n            // String.codePointAt would be an alternate approach; again,\n            // simplicitly is being preferred over efficiency for the moment.\n            jsonString = encodeURIComponent(JSON.stringify(obj));\n        } catch (e) {\n            this._error('Could not binary encode carrier data.');\n            return null;\n        }\n\n        let buffer = new ArrayBuffer(jsonString.length);\n        let view = new Uint8Array(buffer);\n        for (let i = 0; i < jsonString.length; i++) {\n            let code = jsonString.charCodeAt(i);\n            if (!(code >= 0 && code <= 255)) {\n                this._error('Unexpected character code');\n                return null;\n            }\n            view[i] = code;\n        }\n        return view;\n    }\n\n    _uint8ArrayToObject(arr) {\n        if (!arr) {\n            this._error('Array is null');\n            return null;\n        }\n\n        let jsonString = '';\n        for (let i = 0; i < arr.length; i++) {\n            jsonString += String.fromCharCode(arr[i]);\n        }\n        try {\n            return JSON.parse(decodeURIComponent(jsonString));\n        } catch (e) {\n            this._error('Could not decode binary data.');\n            return null;\n        }\n    }\n\n    //-----------------------------------------------------------------------//\n    // Logging\n    //-----------------------------------------------------------------------//\n\n    log() {\n        let b = new LogBuilder(this);\n        return b;\n    }\n\n    //-----------------------------------------------------------------------//\n    // Buffers\n    //-----------------------------------------------------------------------//\n\n    _clearBuffers() {\n        this._spanRecords = [];\n        this._internalLogs = [];\n\n        // Create a new object to avoid overwriting the values in any references\n        // to the old object\n        let counters = {};\n        _each(this._counters, (unused, key) => {\n            counters[key] = 0;\n        });\n        this._counters = counters;\n    }\n\n    _buffersAreEmpty() {\n        if (this._spanRecords.length > 0) {\n            return false;\n        }\n        if (this._internalLogs.length > 0) {\n            return false;\n        }\n\n        let countersAllZero = true;\n        _each(this._counters, (val) => {\n            if (val > 0) {\n                countersAllZero = false;\n            }\n        });\n        return countersAllZero;\n    }\n\n    _addSpanRecord(record) {\n        this._internalAddSpanRecord(record);\n        this.emit('span_added', record);\n    }\n\n    _internalAddSpanRecord(record) {\n        if (!record) {\n            this._error('Attempt to add null record to buffer');\n            return;\n        }\n\n        if (this._spanRecords.length >= this._options.max_span_records) {\n            let index = Math.floor(this._spanRecords.length * Math.random());\n            this._spanRecords[index] = record;\n            this._counters['spans.dropped']++;\n        } else {\n            this._spanRecords.push(record);\n        }\n    }\n\n    _restoreRecords(spans, internalLogs, counters) {\n        _each(spans, (span) => {\n            this._internalAddSpanRecord(span);\n        });\n\n        let currentInternalLogs = this._internalLogs;\n        this._internalLogs = [];\n        let toAdd = internalLogs.concat(currentInternalLogs);\n        _each(toAdd, (log) => {\n            this._pushInternalLog(log);\n        });\n\n        _each(counters, (value, key) => {\n            if (key in this._counters) {\n                this._counters[key] += value;\n            } else {\n                this._error(`Bad counter name: ${key}`);\n            }\n        });\n    }\n\n    /**\n     * clearSpanRecordsIfMaxErrors checks to see if the tracer was configured to\n     * empty the span buffer after a fixed amount of errors. If it is configured,\n     * and there has been an error streak equal to the configured value,\n     * it will empty spanRecords and record that the spans were dropped.\n     *\n     * @private\n     */\n    _clearSpanRecordsIfMaxErrors() {\n        const maxErrorsToEmpty = this.options().clear_span_buffer_consecutive_errors;\n        if (maxErrorsToEmpty === null || this._reportErrorStreak < maxErrorsToEmpty) {\n            return;\n        }\n\n        // spanRecords is configured to be emptied\n        // the number of dropped spans and reporting errors should still be maintained since\n        // the loop may still in the process of a report.\n        const numSpansToDrop = this._spanRecords.length;\n        this._counters['spans.dropped'] += numSpansToDrop;\n        this._spanRecords = [];\n\n        this._warn('Span buffer flushed, max consecutive errors reached', {\n            max_consecutive_errors: maxErrorsToEmpty,\n            spans_dropped: numSpansToDrop,\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Reporting loop\n    //-----------------------------------------------------------------------//\n\n    _setupReportOnExit() {\n        if (this._options.disable_report_on_exit) {\n            this._debug('report-on-exit is disabled.');\n            return;\n        }\n\n        // Do a final explicit flush. Note that the final flush may enqueue\n        // asynchronous callbacks that cause the 'beforeExit' event to be\n        // re-emitted when those callbacks finish.\n        let finalFlushOnce = 0;\n        let finalFlush = () => {\n            if (finalFlushOnce++ > 0) { return; }\n            this._info('Final flush before exit.');\n            this._flushReport(false, true, (err) => {\n                if (err) {\n                    this._warn('Final report before exit failed', {\n                        error                  : err,\n                        unflushed_spans        : this._spanRecords.length,\n                        buffer_youngest_micros : this._reportYoungestMicros,\n                    });\n                }\n            });\n        };\n        this._platform.onBeforeExit(finalFlush);\n    }\n\n    _startReportingLoop() {\n        if (this._options.disabled) {\n            this._info('Not starting reporting loop: instrumentation is disabled.');\n            return;\n        }\n        if (this._options.disable_reporting_loop) {\n            this._info('Not starting reporting loop: reporting loop is disabled.');\n            return;\n        }\n        if (this._auth === null) {\n            // Don't start the loop until the thrift data necessary to do the\n            // report is set up.\n            return;\n        }\n        if (this._reportingLoopActive) {\n            this._info('Reporting loop already started!');\n            return;\n        }\n\n        this._info('Starting reporting loop:', this._runtime);\n        this._reportingLoopActive = true;\n\n        // Stop the reporting loop so the Node.js process does not become a\n        // zombie waiting for the timers.\n        let stopReportingOnce = 0;\n        let stopReporting = () => {\n            if (stopReportingOnce++ > 0) { return; }\n            this._stopReportingLoop();\n        };\n        this._platform.onBeforeExit(stopReporting);\n\n        // Begin the asynchronous reporting loop\n        let loop = () => {\n            this._enqueueNextReport((err) => {\n                if (this._reportingLoopActive) {\n                    loop();\n                }\n            });\n        };\n\n        const delay = Math.floor(Math.random() * this._options.delay_initial_report_millis);\n        util.detachedTimeout(() => {\n            loop();\n        }, delay);\n    }\n\n    _stopReportingLoop() {\n        this._debug('Stopping reporting loop');\n\n        this._reportingLoopActive = false;\n        clearTimeout(this._reportTimer);\n        this._reportTimer = null;\n    }\n\n    _enqueueNextReport(done) {\n        // If there's already a report request enqueued, ignore this new\n        // request.\n        if (this._reportTimer) {\n            return;\n        }\n\n        // If the clock state is still being primed, potentially use the\n        // shorted report interval.\n        //\n        // However, do not use the shorter interval in the case of an error.\n        // That does not provide sufficient backoff.\n        let reportInterval = this._options.max_reporting_interval_millis;\n        if (this._reportErrorStreak === 0\n            && this._useClockState\n            && !this._clockState.isReady()) {\n            reportInterval = Math.min(constants.CLOCK_STATE_REFRESH_INTERVAL_MS, reportInterval);\n        }\n\n        // After 3 consecutive errors, expand the retry delay up to 8x the\n        // normal interval, jitter the delay by +/- 25%, and be sure to back off\n        // *at least* the standard reporting interval in the case of an error.\n        let backOff = 1 + Math.min(7, Math.max(0, this._reportErrorStreak));\n        let basis = backOff * reportInterval;\n        let jitter = 1.0 + (Math.random() * 0.5 - 0.25);\n        let delay = Math.floor(Math.max(0, jitter * basis));\n\n        this._debug(`Delaying next flush for ${delay}ms`);\n        this._reportTimer = util.detachedTimeout(() => {\n            this._reportTimer = null;\n            this._flushReport(false, false, done);\n        }, delay);\n    }\n\n    /**\n     * Internal worker for a flush of buffered data into a report.\n     *\n     * @param  {bool} manual - this is a manually invoked flush request. Don't\n     *         override this call with a clock state syncing flush, for example.\n     * @param  {bool} detached - this is an \"at exit\" flush that should not block\n     *         the calling process in any manner. This is specifically called\n     *         \"detached\" due to the browser use case where the report is done,\n     *         not just asynchronously, but as a script request that continues\n     *         to run even if the page is navigated away from mid-request.\n     * @param  {function} done - standard callback function called on success\n     *         or error.\n     */\n    _flushReport(manual, detached, done) {\n        done = done || function (err) {};\n\n        let clockReady = this._clockState.isReady();\n        let clockOffsetMicros = this._clockState.offsetMicros();\n\n        // Diagnostic information on the clock correction\n        this._debug('time correction state', {\n            offset_micros  : clockOffsetMicros,\n            active_samples : this._clockState.activeSampleCount(),\n            ready          : clockReady,\n        });\n\n        let spanRecords = this._spanRecords;\n        let counters = this._counters;\n        let internalLogs = this._internalLogs;\n\n        // If the clock is not ready, do an \"empty\" flush to build more clock\n        // samples before the real data is reported.\n        // A detached flush (i.e. one intended to fire at exit or other \"last\n        // ditch effort\" event) should always use the real data.\n        if (this._useClockState && !manual && !clockReady && !detached) {\n            this._debug('Flushing empty report to prime clock state');\n            spanRecords = [];\n            counters    = {};\n            internalLogs = [];\n        } else {\n            // Early out if we can.\n            if (this._buffersAreEmpty()) {\n                this._debug('Skipping empty report');\n                return done(null);\n            }\n\n            // Clear the object buffers as the data is now in the local\n            // variables\n            this._clearBuffers();\n            this._debug(`Flushing report (${spanRecords.length} spans)`);\n        }\n\n        this._transport.ensureConnection(this._options);\n\n        // Ensure the runtime GUID is set as it is possible buffer logs and\n        // spans before the GUID is necessarily set.\n        console.assert(this._runtimeGUID !== null, 'No runtime GUID for Tracer'); // eslint-disable-line no-console\n\n        let timestampOffset = this._useClockState ? clockOffsetMicros : 0;\n        let now = this._platform.nowMicros();\n        let report = new ReportImp(this._runtime, this._reportYoungestMicros, now,\n            spanRecords, internalLogs, counters, timestampOffset);\n\n        this.emit('prereport', report);\n        let originMicros = this._platform.nowMicros();\n\n        if (this._options.meta_event_reporting && !this._first_report_has_run) {\n            this._first_report_has_run = true;\n            this.startSpan(constants.LS_META_TRACER_CREATE, {\n                tags: {\n                    [constants.LS_META_EVENT_KEY]: true,\n                    [constants.LS_META_TRACER_GUID_KEY]: this._runtimeGUID,\n                },\n            }).finish();\n        }\n\n        this._transport.report(detached, this._auth, report, (err, res) => {\n            let destinationMicros = this._platform.nowMicros();\n            let reportWindowSeconds = (now - report.oldest_micros) / 1e6;\n\n            if (err) {\n                // How many errors in a row? Influences the report backoff.\n                this._reportErrorStreak++;\n\n                // On a failed report, re-enqueue the data that was going to be\n                // sent.\n                let errString;\n                if (err.message) {\n                    errString = `${err.message}`;\n                } else {\n                    errString = `${err}`;\n                }\n                this._warn(`Error in report: ${errString}`, {\n                    last_report_seconds_ago : reportWindowSeconds,\n                });\n\n                this._restoreRecords(\n                    report.getSpanRecords(),\n                    report.getInternalLogs(),\n                    report.getCounters(),\n                );\n\n                // Increment the counter *after* the counters are restored\n                this._counters['reports.errors.send']++;\n\n                this._clearSpanRecordsIfMaxErrors();\n\n                this.emit('report_error', err, {\n                    error    : err,\n                    streak   : this._reportErrorStreak,\n                    detached : detached,\n                });\n            } else {\n                if (this.verbosity() >= 4) {\n                    this._debug(`Report flushed for last ${reportWindowSeconds} seconds`, {\n                        spans_reported : report.getSpanRecords().length,\n                    });\n                }\n\n                // Update internal data after the successful report\n                this._reportErrorStreak = 0;\n                this._reportYoungestMicros = now;\n\n                // Update the clock state if there's info from the report\n                if (res) {\n                    if (res.timing && res.timing.receive_micros && res.timing.transmit_micros) {\n                        // Handle thrift transport timing response.\n                        this._clockState.addSample(\n                            originMicros,\n                            res.timing.receive_micros,\n                            res.timing.transmit_micros,\n                            destinationMicros,\n                        );\n                    } else if (res.receiveTimestamp && res.transmitTimestamp) {\n                        // Handle protobuf transport timing response.\n                        this._clockState.addSample(\n                            originMicros,\n                            res.receiveTimestamp.seconds * 1e6 + res.receiveTimestamp.nanos / 1e3,\n                            res.transmitTimestamp.seconds * 1e6 + res.transmitTimestamp.nanos / 1e3,\n                            destinationMicros,\n                        );\n                    } else {\n                        // The response does not have timing information. Disable\n                        // the clock state assuming there'll never be timing data\n                        // to use.\n                        this._useClockState = false;\n                    }\n\n                    if (res.errors && res.errors.length > 0) {\n                        // Handle thrift errors.\n                        this._warn('Errors in report', res.errors);\n                    } else if (res.errorsList && res.errorsList.length > 0) {\n                        // Handle protobuf errors.\n                        this._warn('Errors in report', res.errorsList);\n                    }\n\n                    if (res.commandsList && res.commandsList.length > 0) {\n                        // Handle both thrift and protobuf commands response.\n                        if (res.commandsList[0].devMode && this.options().disable_meta_event_reporting !== true) {\n                            this.options().meta_event_reporting = true;\n                        }\n                    }\n                } else {\n                    this._useClockState = false;\n                }\n\n                this.emit('report', report, res);\n            }\n            return done(err);\n        });\n    }\n\n    //-----------------------------------------------------------------------//\n    // Stats and metrics\n    //-----------------------------------------------------------------------//\n\n    /**\n     * Internal API that returns some internal metrics.\n     */\n    stats() {\n        return {\n            counters : this._counters,\n        };\n    }\n\n    //-----------------------------------------------------------------------//\n    // Internal logging & errors\n    //-----------------------------------------------------------------------//\n    // The rules for how internal logs are processed:\n    //\n    // * Internal logs that are included in the Collector report:\n    //      - Always send errors logs along with the reports\n    //      - Never include any other logs\n    // * Internal logs that are echoed to the host application:\n    //      - See the README.md :)\n    //\n    _debug(msg, payload) {\n        if (this.verbosity() < 4) {\n            return;\n        }\n        this._options.logger('debug', msg, payload);\n    }\n\n    _info(msg, payload) {\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._options.logger('info', msg, payload);\n    }\n\n    _warn(msg, payload) {\n        this._counters['internal.warnings']++;\n\n        if (this.verbosity() < 3) {\n            return;\n        }\n        this._options.logger('warn', msg, payload);\n    }\n\n    _error(msg, payload) {\n        this._counters['internal.errors']++;\n\n        // Internal errors are always reported to the collector\n        let record = this.log()\n            .level(constants.LOG_ERROR)\n            .message(msg)\n            .payload(payload)\n            .record();\n        this._pushInternalLog(record);\n\n        // Internal errors are reported to the host console conditionally based\n        // on the verbosity level.\n        let verbosity = this.verbosity();\n        if (verbosity === 0) {\n            return;\n        }\n\n        // Error messages are throttled in verbosity === 1 mode\n        const now = Date.now();\n        if (verbosity === 1) {\n            const nextVisible = this._lastVisibleErrorMillis + this._options.error_throttle_millis;\n            if (now < nextVisible) {\n                this._skippedVisibleErrors++;\n                return;\n            }\n            if (this._skippedVisibleErrors > 0) {\n                /* eslint-disable max-len */\n                const s = `${this._skippedVisibleErrors} errors masked since last logged error. Increase 'verbosity' option to see all errors.`;\n                /* eslint-enable max-len */\n                this._options.logger('error', s, payload);\n            }\n        }\n\n        this._options.logger('error', msg, payload);\n        this._lastVisibleErrorMillis = now;\n        this._skippedVisibleErrors = 0;\n    }\n\n    _printToConsole(level, msg, payload) {\n        let method = 'log';\n        let message = `[LightStep:INFO] ${msg}`;\n        if (level === 'debug') {\n            method = 'log';\n            message = `[LightStep:DEBUG] ${msg}`;\n        } else if (level === 'info') {\n            method = 'log';\n            message = `[LightStep:INFO] ${msg}`;\n        } else if (level === 'warn') {\n            method = 'warn';\n            message = `[LightStep:WARN] ${msg}`;\n        } else if (level === 'error') {\n            method = 'error';\n            message = `[LightStep:ERROR] ${msg}`;\n        }\n\n        // Internal option to silence intentional errors generated by the unit\n        // tests.\n        if (this._options.silent) {\n            return;\n        }\n\n        if (payload !== undefined) {\n            console[method](message, payload); // eslint-disable-line no-console\n        }  else {\n            console[method](message); // eslint-disable-line no-console\n        }\n    }\n\n    _pushInternalLog(record) {\n        if (!record) {\n            return;\n        }\n        if (this._internalLogs.length >= MAX_INTERNAL_LOGS) {\n            record.message = `MAX_INTERNAL_LOGS limit hit. Last error: ${record.message}`;\n            this._internalLogs[this._internalLogs.length - 1] = record;\n        } else {\n            this._internalLogs.push(record);\n        }\n    }\n}\n","import _each from '../../_each';\n\n// How many updates before a sample is considered old. This happens to\n// be one less than the number of samples in our buffer but that's\n// somewhat arbitrary.\nconst kMaxOffsetAge = 7;\n\nconst kStoredSamplesTTLMicros = 60 * 60 * 1000 * 1000; // 1 hour\n\nclass ClockState {\n    constructor(opts) {\n        this._nowMicros     = opts.nowMicros;\n        this._localStoreGet = opts.localStoreGet;\n        this._localStoreSet = opts.localStoreSet;\n\n        // The last eight samples, computed from timing information in\n        // RPCs.\n        this._samples = [];\n        this._currentOffsetMicros = 0;\n\n        // How many updates since we've updated currentOffsetMicros.\n        this._currentOffsetAge = kMaxOffsetAge + 1;\n\n        // Try to load samples from the local store.\n        // Only use the data if it's recent.\n        let storedData = this._localStoreGet();\n        if (storedData\n            && storedData.timestamp_micros\n            && storedData.timestamp_micros > this._nowMicros() - kStoredSamplesTTLMicros) {\n            // Make sure there are no more than (kMaxOffsetAge+1) elements\n            this._samples = storedData.samples.slice(-(kMaxOffsetAge + 1));\n        }\n        // Update the current offset based on these data.\n        this.update();\n    }\n\n    // Add a new timing sample and update the offset.\n    addSample(originMicros,\n        receiveMicros,\n        transmitMicros,\n        destinationMicros) {\n        let latestDelayMicros = Number.MAX_VALUE;\n        let latestOffsetMicros = 0;\n        // Ensure that all of the data are valid before using them. If\n        // not, we'll push a {0, MAX} record into the queue.\n        if (originMicros > 0 && receiveMicros > 0\n            && transmitMicros > 0 && destinationMicros > 0) {\n            latestDelayMicros = (destinationMicros - originMicros)\n                - (transmitMicros - receiveMicros);\n            latestOffsetMicros = ((receiveMicros - originMicros)\n                           + (transmitMicros - destinationMicros)) / 2;\n        }\n\n        // Discard the oldest sample and push the new one.\n        if (this._samples.length === kMaxOffsetAge + 1) {\n            this._samples.shift();\n        }\n        this._samples.push({\n            delayMicros  : latestDelayMicros,\n            offsetMicros : latestOffsetMicros,\n        });\n        this._currentOffsetAge++;\n\n        // Update the local store with this new sample.\n        this._localStoreSet({\n            timestamp_micros : this._nowMicros(),\n            samples          : this._samples,\n        });\n        this.update();\n    }\n\n    // Update the time offset based on the current samples.\n    update() {\n        // This is simplified version of the clock filtering in Simple\n        // NTP. It ignores precision and dispersion (frequency error). In\n        // brief, it keeps the 8 (kMaxOffsetAge+1) most recent\n        // delay-offset pairs, and considers the offset with the smallest\n        // delay to be the best one. However, it only uses this new offset\n        // if the change (relative to the last offset) is small compared\n        // to the estimated error.\n        //\n        // See:\n        // https://tools.ietf.org/html/rfc5905#appendix-A.5.2\n        // http://books.google.com/books?id=pdTcJBfnbq8C\n        //   esp. section 3.5\n        // http://www.eecis.udel.edu/~mills/ntp/html/filter.html\n        // http://www.eecis.udel.edu/~mills/database/brief/algor/algor.pdf\n        // http://www.eecis.udel.edu/~mills/ntp/html/stats.html\n\n        // TODO: Consider huff-n'-puff if the delays are highly asymmetric.\n        // http://www.eecis.udel.edu/~mills/ntp/html/huffpuff.html\n\n        // Find the sample with the smallest delay; the corresponding\n        // offset is the \"best\" one.\n        let minDelayMicros = Number.MAX_VALUE;\n        let bestOffsetMicros = 0;\n        _each(this._samples, (sample) => {\n            if (sample.delayMicros < minDelayMicros) {\n                minDelayMicros = sample.delayMicros;\n                bestOffsetMicros = sample.offsetMicros;\n            }\n        });\n\n        // No update.\n        if (bestOffsetMicros === this._currentOffsetMicros) {\n            return;\n        }\n\n        // Now compute the jitter, i.e. the error relative to the new\n        // offset were we to use it.\n        let jitter = 0;\n        _each(this._samples, (sample) => {\n            // eslint-disable-next-line no-restricted-properties\n            jitter += Math.pow(bestOffsetMicros - sample.offsetMicros, 2);\n        });\n        jitter = Math.sqrt(jitter / this._samples.length);\n\n        // Ignore spikes: only use the new offset if the change is not too\n        // large... unless the current offset is too old. The \"too old\"\n        // condition is also triggered when update() is called from the\n        // constructor.\n        const kSGATE = 3; // See RFC 5905\n        if (this._currentOffsetAge > kMaxOffsetAge\n            || Math.abs(this._currentOffsetMicros - bestOffsetMicros) < kSGATE * jitter) {\n            this._currentOffsetMicros = bestOffsetMicros;\n            this._currentOffsetAge = 0;\n        }\n    }\n\n    // Returns the difference in microseconds between the server's clock\n    // and our clock. This should be added to any local timestamps before\n    // sending them to the server. Note that a negative offset means that\n    // the local clock is ahead of the server's.\n    offsetMicros() {\n        return Math.floor(this._currentOffsetMicros);\n    }\n\n    // Returns true if we've performed enough measurements to be confident\n    // in the current offset.\n    isReady() {\n        return this._samples.length > 3;\n    }\n\n    activeSampleCount() {\n        return this._samples.length;\n    }\n}\n\nmodule.exports = ClockState;\n","class Util {\n    // Similar to a regular setTimeout() call, but dereferences the timer so the\n    // program execution will not be held up by this timer.\n    detachedTimeout(callback, delay) {\n        let timer = setTimeout(callback, delay);\n        if (timer.unref) {\n            timer.unref();\n        }\n        return timer;\n    }\n\n    shouldSendMetaSpan(opts, tags) {\n        let shouldSendSpan = opts.meta_event_reporting === true && tags['lightstep.meta_event'] !== true;\n        return shouldSendSpan;\n    }\n}\n\nexport default new Util();\n","import Tracer from './imp/tracer_imp';\nimport LightStepPropagator from './imp/propagator_ls';\nimport B3Propagator from './imp/propagator_b3';\nimport DDPropagator from './imp/propagator_dd';\nimport EnvoyPropagator from './imp/propagator_envoy';\nimport SpanContext from './imp/span_context_imp';\nimport { Platform } from './platform_abstraction_layer';\n\n\nconst library = {\n    Tracer              : Tracer,\n    LightStepPropagator : LightStepPropagator,\n    B3Propagator        : B3Propagator,\n    DDPropagator        : DDPropagator,\n    EnvoyPropagator     : EnvoyPropagator,\n    SpanContext         : SpanContext,\n};\n\nPlatform.initLibrary(library);\nmodule.exports = library;\n","/* global PLATFORM_BROWSER */\n\n// Hide the differences in how the Thrift compiler generates code for the\n// different platforms as well as expose a Platform class to abstract a few\n// general differences in the platforms.\nif ((typeof PLATFORM_BROWSER !== 'undefined') && PLATFORM_BROWSER) {\n    module.exports = {\n        Platform        : require('./imp/platform/browser/platform_browser.js'),\n        ThriftTransport : require('./imp/platform/browser/transport_httpthrift.js'),\n        ProtoTransport  : require('./imp/platform/browser/transport_httpproto.js'),\n        thrift          : require('./imp/platform/browser/thrift.js'),\n        crouton_thrift  : require('./imp/platform/browser/crouton_thrift.js'),\n        proto           : require('./imp/generated_proto/collector_pb.js'),\n    };\n} else {\n    module.exports = {\n        Platform        : require('./imp/platform/node/platform_node.js'),\n        ThriftTransport : require('./imp/platform/node/transport_httpthrift.js'),\n        ProtoTransport  : require('./imp/platform/node/transport_httpproto.js'),\n        // Note: THRIFT-5029 requires us to use a non-standard require\n        // TODO: remove non-standard require after https://github.com/apache/thrift/pull/1947 merges\n        thrift          : require('thrift/src/thrift'),\n        crouton_thrift  : require('./imp/platform/node/crouton_thrift.js'),\n        proto           : require('./imp/generated_proto/collector_pb.js'),\n    };\n}\n","import _each from '../_each';\n\nclass InstrumentPageLoad {\n    constructor() {\n        this._inited = false;\n        this._span = null;\n    }\n\n    name() {\n        return 'instrument_page_load';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('instrument_page_load', { type : 'bool', defaultValue : false });\n    }\n\n    start(tracerImp) {\n        if (this._inited) {\n            return;\n        }\n        this._inited = true;\n\n        if (typeof window !== 'object' || typeof document !== 'object') {\n            return;\n        }\n\n        const currentOptions = tracerImp.options();\n        if (currentOptions.instrument_page_load) {\n            this._ensureSpanStarted(tracerImp);\n            document.addEventListener('readystatechange', this._handleReadyStateChange.bind(this));\n        }\n    }\n\n    stop() {\n    }\n\n    _ensureSpanStarted(tracerImp) {\n        if (!this._span) {\n            this._span = tracerImp.startSpan('document/load');\n            tracerImp.addActiveRootSpan(this._span);\n        }\n    }\n\n    _handleReadyStateChange() {\n        if (!this._span) {\n            return;\n        }\n\n        let span = this._span;\n        let state = document.readyState;\n        let payload;\n        if (state === 'complete') {\n            payload = {};\n            if (window.performance && performance.timing) {\n                this._addTimingSpans(span, performance.timing);\n                payload['window.performance.timing'] = performance.timing;\n            }\n        }\n\n        span.logEvent(`document.readystatechange ${state}`, payload);\n\n        if (state === 'complete') {\n            if (span.tracer()) {\n                span.tracer().removeActiveRootSpan(span.tracer());\n            }\n            span.finish();\n        }\n    }\n\n    _copyNavigatorProperties(nav) {\n        let dst = {};\n        for (let key in nav) { // eslint-disable-line guard-for-in, no-restricted-syntax\n            try {\n                let value = nav[key];\n                switch (key) {\n                case 'plugins': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            name        : item.name,\n                            description : item.description,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                case 'mimeTypes': {\n                    let p = [];\n                    for (let i = 0; i < value.length; i++) {\n                        let item = value.item(i);\n                        p.push({\n                            type        : item.type,\n                            description : item.description,\n                            suffixes    : item.suffixes,\n                        });\n                    }\n                    dst[key] = p;\n                } break;\n\n                default:\n                    dst[key] = value;\n                    break;\n                }\n            } catch (e) {\n                // Skip, just in case\n            }\n        }\n        return dst;\n    }\n\n    // Retroactively create the appropriate spans and logs\n    _addTimingSpans(parentImp, timing) {\n        // NOTE: this currently relies on LightStep-specific APIs\n        if (!parentImp) {\n            return;\n        }\n\n        parentImp.setTag('user_agent', navigator.userAgent);\n\n        _each(timing, (value, key) => {\n            // e.g. secureConnectionStart is not always set\n            if (typeof value !== 'number' || value === 0) {\n                return;\n            }\n\n            let payload;\n\n            if (key === 'navigationStart' && typeof navigator === 'object') {\n                payload = {\n                    navigator : this._copyNavigatorProperties(navigator),\n                };\n            }\n            parentImp.log({\n                message : `document ${key}`,\n                payload : payload,\n            }, value);\n        });\n\n        parentImp.setBeginMicros(timing.navigationStart * 1000.0);\n\n        parentImp.tracer().startSpan('document/time_to_first_byte', { childOf : parentImp })\n            .setBeginMicros(timing.requestStart * 1000.0)\n            .setEndMicros(timing.responseStart * 1000.0)\n            .finish();\n        parentImp.tracer()\n            .startSpan('document/response_transfer', { childOf : parentImp })\n            .setBeginMicros(timing.responseStart * 1000.0)\n            .setEndMicros(timing.responseEnd * 1000.0)\n            .finish();\n        parentImp.tracer().startSpan('document/dom_load', { childOf : parentImp })\n            .setBeginMicros(timing.domLoading * 1000.0)\n            .setEndMicros(timing.domInteractive * 1000.0)\n            .finish();\n    }\n}\n\nmodule.exports = new InstrumentPageLoad();\n","import * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxiedFetch;\nif (typeof window === 'object' && typeof window.fetch !== 'undefined') {\n    proxiedFetch = window.fetch;\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(response) {\n    const result = {};\n    const entries = response.headers.entries();\n    for (let i = 0; i < entries.length; i++) {\n        const pair = entries[i];\n        const [key, val] = pair;\n        result[key] = val;\n    }\n    return result;\n}\n\n// Automatically create spans for all requests made via window.fetch.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentFetch {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n    }\n\n    name() {\n        return 'instrument_fetch';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('fetch_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('fetch_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('fetch_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('fetch_url_header_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('fetch_url_header_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('include_cookies', { type : 'bool', defaultValue : true });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        window.fetch = proxiedFetch;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied fetch calls unless disabled\n        if (!this._proxyInited && current.fetch_instrumentation) {\n            this._proxyInited = true;\n            window.fetch = this._instrumentFetch();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of fetch to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.fetch) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentFetch() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (input, init) {\n            const request = new Request(input, init);\n            const opts = tracer.options();\n\n            if (!self._shouldTrace(tracer, request.url)) {\n                // eslint-disable-next-line prefer-spread\n                return proxiedFetch(request);\n            }\n\n            let span = tracer.startSpan('fetch');\n            tracer.addActiveRootSpan(span);\n\n            const parsed = new URL(request.url);\n            let tags = {\n                method : request.method,\n                url    : request.url,\n\n                // NOTE: Purposefully excluding username:password from tags.\n                // TODO: consider sanitizing URL to mask / remove that information from the trace in general\n                hash     : parsed.hash,\n                href     : parsed.href,\n                protocol : parsed.protocol,\n                origin   : parsed.origin,\n                host     : parsed.host,\n                hostname : parsed.hostname,\n                port     : parsed.port,\n                pathname : parsed.pathname,\n                search   : parsed.search,\n            };\n            if (opts.include_cookies) {\n                tags.cookies = getCookies();\n            }\n\n            // Add Open-Tracing headers\n            if (self._shouldAddHeadersToRequest(tracer, request.url)) {\n                const headersCarrier = {};\n                tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n                Object.keys(headersCarrier).forEach((key) => {\n                    if (!request.headers.get(key)) request.headers.set(key, headersCarrier[key]);\n                });\n            }\n            span.log({\n                event       : 'sending',\n                method      : request.method,\n                url         : request.url,\n                openPayload : tags,\n            });\n            span.addTags(tags);\n\n            return proxiedFetch(request).then((response) => {\n                if (!response.ok) {\n                    span.addTags({ error : true });\n                }\n                span.log({\n                    method       : request.method,\n                    headers      : getResponseHeaders(response),\n                    status       : response.status,\n                    statusText   : response.statusText,\n                    responseType : response.type,\n                    url          : response.url,\n                });\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n                return response;\n            }).catch((e) => {\n                span.addTags({ error : true });\n                tracer.removeActiveRootSpan(span);\n                span.log({\n                    event : 'error',\n                    error : e,\n                });\n                span.finish();\n                throw e;\n            });\n        };\n    }\n\n    _shouldTrace(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (this._internalExclusions.some((ex) => ex.test(url))) {\n            return false;\n        }\n\n        if (opts.fetch_url_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.fetch_url_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n\n    _shouldAddHeadersToRequest(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (opts.fetch_url_header_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.fetch_url_header_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n}\n\nmodule.exports = new InstrumentFetch();\n","import * as opentracing from 'opentracing';\n\n// Capture the proxied values on script load (i.e. ASAP) in case there are\n// multiple layers of instrumentation.\nlet proxied = {};\nif (typeof window === 'object' && typeof window.XMLHttpRequest !== 'undefined') {\n    proxied = {\n        XMLHttpRequest   : XMLHttpRequest,\n        open             : XMLHttpRequest.prototype.open,\n        send             : XMLHttpRequest.prototype.send,\n        setRequestHeader : XMLHttpRequest.prototype.setRequestHeader,\n    };\n}\n\nfunction getCookies() {\n    if (typeof document === 'undefined' || !document.cookie) {\n        return null;\n    }\n    let cookies = document.cookie.split(';');\n    let data = {};\n    let count = 0;\n    for (let i = 0; i < cookies.length; i++) {\n        let parts = cookies[i].split('=', 2);\n        if (parts.length === 2) {\n            let key = parts[0].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            data[key] = decodeURIComponent(parts[1]);\n            try {\n                data[key] = JSON.parse(data[key]);\n            } catch (_ignored) { /* Ignored */ }\n            count++;\n        }\n    }\n    if (count > 0) {\n        return data;\n    }\n    return null;\n}\n\n// Normalize the getAllResponseHeaders output\nfunction getResponseHeaders(xhr) {\n    let raw = xhr.getAllResponseHeaders();\n    let parts = raw.replace(/\\s+$/, '').split(/\\n/);\n    for (let i = 0; i < parts.length; i++) {\n        parts[i] = parts[i].replace(/\\r/g, '').replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n    return parts;\n}\n\n// Automatically create spans for all XMLHttpRequest objects.\n//\n// NOTE: this code currently works only with a single Tracer.\n//\nclass InstrumentXHR {\n    constructor() {\n        this._enabled = this._isValidContext();\n        this._proxyInited = false;\n        this._internalExclusions = [];\n        this._tracer = null;\n        this._handleOptions = this._handleOptions.bind(this);\n    }\n\n    name() {\n        return 'instrument_xhr';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('xhr_instrumentation', { type : 'bool', defaultValue : false });\n        tracerImp.addOption('xhr_url_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('xhr_url_header_inclusion_patterns', { type : 'array', defaultValue : [/.*/] });\n        tracerImp.addOption('xhr_url_header_exclusion_patterns', { type : 'array', defaultValue : [] });\n        tracerImp.addOption('include_cookies', { type : 'bool', defaultValue : true });\n    }\n\n    start(tracerImp) {\n        if (!this._enabled) {\n            return;\n        }\n        this._tracer = tracerImp;\n\n        let currentOptions = tracerImp.options();\n        this._addServiceHostToExclusions(currentOptions);\n        this._handleOptions({}, currentOptions);\n        tracerImp.on('options', this._handleOptions);\n    }\n\n    stop() {\n        if (!this._enabled) {\n            return;\n        }\n        let proto = proxied.XMLHttpRequest.prototype;\n        proto.open = proxied.open;\n        proto.send = proxied.send;\n    }\n\n    /**\n     * Respond to options changes on the Tracer.\n     *\n     * Note that `modified` is the options that have changed in this call,\n     * along with their previous and new values. `current` is the full set of\n     * current options *including* the newly modified values.\n     */\n    _handleOptions(modified, current) {\n        // Automatically add the service host itself to the list of exclusions\n        // to avoid reporting on the reports themselves\n        let serviceHost = modified.collector_host;\n        if (serviceHost) {\n            this._addServiceHostToExclusions(current);\n        }\n\n        // Set up the proxied XHR calls unless disabled\n        if (!this._proxyInited && current.xhr_instrumentation) {\n            this._proxyInited = true;\n            let proto = proxied.XMLHttpRequest.prototype;\n            proto.setRequestHeader = this._instrumentSetRequestHeader();\n            proto.open = this._instrumentOpen();\n            proto.send = this._instrumentSend();\n        }\n    }\n\n    /**\n     * Ensure that the reports to the collector don't get instrumented as well,\n     * as that recursive instrumentation is more confusing than valuable!\n     */\n    _addServiceHostToExclusions(opts) {\n        if (opts.collector_host.length === 0) {\n            return;\n        }\n\n        // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n        function escapeRegExp(str) {\n            return (`${str}`).replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n\n        // Check against the hostname without the port as well as the canonicalized\n        // URL may drop the standard port.\n        let host = escapeRegExp(opts.collector_host);\n        let port = escapeRegExp(opts.collector_port);\n        let set = [new RegExp(`^https?://${host}:${port}`)];\n        if (port === '80') {\n            set.push(new RegExp(`^http://${host}`));\n        } else if (port === '443') {\n            set.push(new RegExp(`^https://${host}`));\n        }\n        this._internalExclusions = set;\n    }\n\n    /**\n     * Check preconditions for the auto-instrumentation of XHRs to work properly.\n     * There are a lot of potential JavaScript platforms.\n     */\n    _isValidContext() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!window.XMLHttpRequest) {\n            return false;\n        }\n        if (!window.XMLHttpRequest.prototype) {\n            return false;\n        }\n        return true;\n    }\n\n    _instrumentSetRequestHeader() {\n        return function (header, value) {\n            this.__requestHeaders = this.__requestHeaders || {};\n            this.__requestHeaders[header] = value;\n            return proxied.setRequestHeader.apply(this, arguments);\n        };\n    }\n\n    _instrumentOpen() {\n        let self = this;\n        let tracer = this._tracer;\n\n        return function (method, url, asyncArg, user, password) {\n            if (!self._shouldTrace(tracer, this, url)) {\n                return proxied.open.apply(this, arguments);\n            }\n            const opts = tracer.options();\n\n            let span = tracer.startSpan('XMLHttpRequest');\n            tracer.addActiveRootSpan(span);\n            this.__tracer_span = span;\n            this.__tracer_url = url;\n\n            let tags = {\n                method : method,\n                url    : url,\n                async  : asyncArg,\n                user   : user,\n            };\n            if (url) {\n                // eslint-disable-next-line prefer-destructuring\n                tags.url_pathname = url.split('?')[0];\n            }\n\n            let openPayload = { ...tags };\n            if (opts.include_cookies) {\n                openPayload.cookies = getCookies();\n            }\n\n            // Note: async defaults to true\n            let async = (asyncArg === undefined ? true : asyncArg);\n            if (async) {\n                this.addEventListener('readystatechange', function () {\n                    if (this.readyState === 0) {\n                        span.log({\n                            readyState : 0,\n                            event      : 'unsent',\n                        });\n                    } else if (this.readyState === 1) {\n                        span.log({\n                            readyState : 1,\n                            event      : 'sending',\n                        });\n                    } else if (this.readyState === 2) {\n                        span.log({\n                            readyState  : 2,\n                            event       : 'headers received',\n                            method      : method,\n                            url         : url,\n                            openPayload : openPayload,\n                            headers     : getResponseHeaders(this),\n                        });\n                        span.addTags(tags);\n                    } else if (this.readyState === 3) {\n                        span.log({\n                            readyState : 3,\n                            event      : 'loading',\n                        });\n                    } else if (this.readyState === 4) {\n                        let { responseType } = this;\n                        span.log({\n                            readyState   : 4,\n                            url          : url,\n                            method       : method,\n                            headers      : getResponseHeaders(this),\n                            status       : this.status,\n                            statusText   : this.statusText,\n                            responseType : responseType,\n                        });\n                        tracer.removeActiveRootSpan(span);\n                        span.finish();\n                    } else {\n                        span.log({\n                            readyState : this.readyState,\n                        });\n                    }\n                });\n            }\n\n            let result = proxied.open.apply(this, arguments);\n            if (!async) {\n                tracer.removeActiveRootSpan(span);\n                span.finish();\n            }\n            return result;\n        };\n    }\n\n    _instrumentSend() {\n        let self = this;\n        let tracer = this._tracer;\n        return function () {\n            if (!self._shouldTrace(tracer, this, this.__tracer_url)) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let span = this.__tracer_span;\n            if (!span) {\n                return proxied.send.apply(this, arguments);\n            }\n\n            let data = Array.prototype.slice.call(arguments);\n            let len;\n            if (data.length === 1) {\n                if (data[0] && data[0].length) {\n                    len = data[0].length;\n                }\n                try {\n                    data = JSON.parse(data[0]);\n                } catch (e) {\n                    // Ignore the error\n                }\n            }\n            let lenStr = (len === undefined) ? '' : `, data length=${len}`;\n            span.log({\n                event       : 'send',\n                data_length : lenStr,\n            });\n\n            // Add Open-Tracing headers\n            if (self._shouldAddHeadersToRequest(tracer, this.__tracer_url)) {\n                const headersCarrier = {};\n                tracer.inject(span.context(), opentracing.FORMAT_HTTP_HEADERS, headersCarrier);\n                const keys = Object.keys(headersCarrier);\n                keys.forEach((key) => {\n                    proxied.setRequestHeader.call(this, key, headersCarrier[key]);\n                });\n            }\n\n            return proxied.send.apply(this, arguments);\n        };\n    }\n\n    _shouldTrace(tracer, xhr, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (this._internalExclusions.some((ex) => ex.test(url))) {\n            return false;\n        }\n\n        if (opts.xhr_url_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.xhr_url_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n\n    _shouldAddHeadersToRequest(tracer, url) {\n        // This shouldn't be possible, but let's be paranoid\n        if (!tracer || !url) {\n            return false;\n        }\n\n        let opts = tracer.options();\n        if (opts.disabled) {\n            return false;\n        }\n\n        if (opts.xhr_url_header_exclusion_patterns.some((ex) => ex.test(url))) {\n            return false;\n        }\n        if (opts.xhr_url_header_inclusion_patterns.some((inc) => inc.test(url))) {\n            return true;\n        }\n        return false;\n    }\n}\n\nmodule.exports = new InstrumentXHR();\n","const constants = require('../constants');\n\nclass LogToConsole {\n    constructor() {\n        this._enabled = false;\n        this._tracer = null;\n        this._optionsCb = this._handleOptions.bind(this);\n        this._logAddedCb = this._handleLogAdded.bind(this);\n    }\n\n    name() {\n        return 'log_to_console';\n    }\n\n    addOptions(tracerImp) {\n        tracerImp.addOption('log_to_console', {\n            type         : 'bool',\n            defaultValue : false,\n        });\n        tracerImp.on('options', this._optionsCb);\n    }\n\n    start(tracer, tracerImp) {\n        this._tracer = tracer;\n    }\n\n    stop() {\n        this._tracer.removeListener('options', this._optionsCb);\n    }\n\n    _handleOptions(modified, current, tracerImp) {\n        let enabled = current.log_to_console;\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            tracerImp.on('log_added', this._logAddedCb);\n        } else {\n            tracerImp.removeListener('log_added', this._logAddedCb);\n        }\n    }\n\n    _handleLogAdded(record) {\n        let level = constants.LOG_STRING_TO_LEVEL[record.level];\n        let { message } = record;\n\n        // Ignore records without a message (e.g. a stable_name log record)\n        if (!message) {\n            return;\n        }\n\n        let payload = record.payload_json;\n        if (payload) {\n            try {\n                payload = JSON.parse(payload);\n            } catch (_ignored) { /* ignored */ }\n        }\n\n        switch (level) {\n        case constants.LOG_ERROR:\n        case constants.LOG_FATAL:\n            if (payload !== undefined) {\n                console.error(message, payload); // eslint-disable-line no-console\n            } else {\n                console.error(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_WARN:\n            if (payload !== undefined) {\n                console.warn(message, payload); // eslint-disable-line no-console\n            } else {\n                console.warn(message); // eslint-disable-line no-console\n            }\n            break;\n        case constants.LOG_INFO:\n        default:\n            if (payload !== undefined) {\n                console.log(message, payload); // eslint-disable-line no-console\n            } else {\n                console.log(message); // eslint-disable-line no-console\n            }\n            break;\n        }\n    }\n}\n\nmodule.exports = new LogToConsole();\n"],"sourceRoot":""}